<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE owl [
  <!ENTITY owl "http://www.w3.org/2002/07/owl#">
  <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#">
  <!ENTITY dc "http://purl.org/dc/elements/1.1/">
  <!ENTITY dct "http://purl.org/dc/terms/">
  <!ENTITY akt "http://www.aktors.org/ontology/portal#">
  <!ENTITY iai "http://www.iai.uni-sb.de/resist#">
  <!ENTITY support "http://www.aktors.org/ontology/support#">
  <!ENTITY extension "http://www.aktors.org/ontology/extension#">
]>
<rdf:RDF
         xmlns:owl="&owl;"
         xmlns:rdf="&rdf;"
         xmlns:rdfs="&rdfs;"
         xmlns:dc="&dc;"
         xmlns:dct="&dct;"
         xmlns:akt="&akt;"
         xmlns:iai="&iai;"
         xmlns:support="&support;"
         xmlns:extension="&extension;"
>

  <owl:Ontology rdf:about="">
    <rdfs:label>IEEE FTCS : ieee-publications-ftcs.rdf</rdfs:label>
    <dc:title xml:lang="en">IEEE FTCS : ieee-publications-ftcs.rdf</dc:title>
    <dc:description xml:lang="en">This ontology contains information detailing publications from IEEE FTCS</dc:description>
    <dc:creator>ReSIST Project</dc:creator>
    <owl:imports rdf:resource="http://www.aktors.org/ontology/portal"/>
    <owl:imports rdf:resource="http://www.aktors.org/ontology/extension"/>
  </owl:Ontology>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005289">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>PODS revisited-a study of software failure behaviour</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8f82207c85fffe1f619c5aee26a1f6b4-b65eed3cc9796da5d4d8f320758e63c7">
        <akt:full-name>P.G. Bishop</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-49da9c459ab94ccf87412fe8d5fd6c48-b65eed3cc9796da5d4d8f320758e63c7">
        <akt:full-name>F.D. Pullen</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A description is given of an empirical study of the failure characteristics of software defects detected in the programs developed in the Project on Diverse Software (PODS). The results are interpreted in the context of a state machine model of software failure. The results of the empirical study case doubts on the general validity of the assumption of constant software failure probability and the assumption of constant software failure probability and the assumption that all defects have similar failure rates. In addition, an analysis of failure dependency lends support to the use of diversity as a means of minimizing the impact of design-level faults. Here, nonidentical faults exhibited coincident failure characteristics approximately in accord with the independence assumption, and some of the observed positive and negative correlation effects could be explained by failure masking effects, which can be removed by suitable design</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005289.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005290">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A large scale second generation experiment in multi-version software: description and early results</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c27cf401fc073eb076ac396cceb64661-1fda3e52e7056bf5a7444cc9fb6995ec">
        <akt:full-name>J.P.J. Kelly</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5f2019b55d10995d1806c1e30da8ecd3-1fda3e52e7056bf5a7444cc9fb6995ec">
        <akt:full-name>Jr. Eckhardt, D.E.</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-10684e5b2971297395d2ed08a706ce66-1fda3e52e7056bf5a7444cc9fb6995ec">
        <akt:full-name>M.A. Vouk</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e86fa9de3255b7c2406547dad4ff7c35-1fda3e52e7056bf5a7444cc9fb6995ec">
        <akt:full-name>D.F. McAllister</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f5b8ae24f0f431351666bbc1a8d64c86-1fda3e52e7056bf5a7444cc9fb6995ec">
        <akt:full-name>A. Caglayan</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The second-generation experiment is a large-scale empirical study of the development and operation of multiversion software systems that has engaged researchers at five universities and three research institutes. The authors present the history and current status of this experiment. The primary objective for the second generation experiments is an examination of multiple-version reliability improvement. Experimentation concerns have been focused on the development of multiversion software (MVS) systems, primarily design and testing issues, and the modeling and analysis of these systems. A preliminary analysis of the multiple software versions has been performed and is reported</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005290.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>software reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005291">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>In search of effective diversity: a six-language study of fault-tolerant flight control software</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-01eb7559f37fb267f5fa24086caa7f77-77dd22f5f8fdbc60c53010129bc34d09">
        <akt:full-name>A. Avizienis</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-70828c69ea34633b1351b9e188437cde-77dd22f5f8fdbc60c53010129bc34d09">
        <akt:full-name>M.R. Lyu</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a501bc94666bae53bddba55b94e45fdd-77dd22f5f8fdbc60c53010129bc34d09">
        <akt:full-name>W. Schutz</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Multiversion software systems achieve fault tolerance through software redundancy and diversity. The authors investigated multiversion software systems using six different programming languages to create six versions of software for an automatic landing program. The rationale, preparation, execution, and evaluation of this investigation are reported</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005291.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>aerospace computer control</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>redundancy</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005292">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A sequential circuit test generation using threshold-value simulation</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5a89cf7a359430d93103c2561a5f793b-33a8336569e58311378728704a0589b5">
        <akt:full-name>K.-T. Cheng</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a1c4231af41fa4dffb690534786419ff-33a8336569e58311378728704a0589b5">
        <akt:full-name>V.D. Agrawal</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7d8e1de28ac1d95a70d0ba4c3bc71d6b-33a8336569e58311378728704a0589b5">
        <akt:full-name>E.S. Kuh</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A simulation-based directed search approach for generating test vectors for combinational circuits has been proposed. In this method, the search for a test vector is guided by a cost function computed by the simulator. Event-driven simulation deals with circuit delays in a very natural manner. Signal controllability information required for the cost function was incorporated in a form of logic model called the threshold-value model. These concepts are now extended to meet the needs of sequential circuit test generation. Such extensions include handling of unknown values, analysis of feedback loops, and analysis of race conditions in the threshold-value model. A threshold-value sequential test generation program, TVSET, is implemented. It automatically initializes the circuit and generates race-free tests for synchronous and asynchronous circuits</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005292.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>sequential circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>threshold logic</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005293">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Advanced automatic test pattern generation and redundancy identification techniques</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-eed58f85f044a02dead4f2368b769935-c3c7f8cee7ebc9af95993ecc172d6f80">
        <akt:full-name>M.H. Schulz</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-239cf451b2ed783b955ef756fa7a7041-c3c7f8cee7ebc9af95993ecc172d6f80">
        <akt:full-name>E. Auth</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Based on the sophisticated strategies used in the automatic test pattern generation system SOCRATES, the authors present several concepts aiming at a further improvement and acceleration of the deterministic test pattern generation and redundancy identification process. In particular, they describe an improved implication procedure and an improved unique sensitization procedure. Both procedures significantly advance the deterministic test pattern generation and redundancy identification especially for those faults, for which it is difficult to generate a test pattern or to prove them to be redundant, respectively. As a result of the application of the proposed techniques, SOCRATES is capable of successfully generating a test pattern for all testable faults in a set of combinational benchmark circuits, and of identifying all redundant faults with less than 10 backtrackings</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005293.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>automatic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>combinatorial circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>redundancy</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005294">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Generating pattern sequences for the pseudo-exhaustive test of MOS-circuits</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-af52a68891af6dbffb46d24e7d8b70c1-b45b125f641027eec2ee545e5800467e">
        <akt:full-name>H.-J. Wunderlich</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-859da6db73ff1d25f35135c1c8e883da-b45b125f641027eec2ee545e5800467e">
        <akt:full-name>S. Hellebrand</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A method based on linear feedback shift registers over finite fields is presented to generate for a natural number &lt;e1&gt;n&lt;/e1&gt; a pattern sequence with minimal length detecting each &lt;e1&gt;m&lt;/e1&gt;-multiple stuck-open faults for &lt;e1&gt;M&lt;/e1&gt;≤&lt;e1&gt;n&lt;/e1&gt;. A hardware architecture is discussed generating this sequence, and for &lt;e1&gt;n&lt;/e1&gt;=1 a built-in self-test (BIST) approach is presented that detects all combinations of multiple combinational and single stuck-open faults. The sequences are of minimum length, and can be produced either by software, by an external chip, or be a BIST-structure. Using the latter, the hardware overhead would be of the same magnitude as a conventional pseudorandom architecture</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005294.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>field effect integrated circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>integrated circuit testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>shift registers</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005295">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Volatile logging in n-fault-tolerant distributed systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-97fb35f873f8c9fb16299bc6c98b16f3-63c222e36c8fcc3c81fb686bf81f5270">
        <akt:full-name>R.E. Strom</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-30542fc0219f4457e29a55eb283fcd79-63c222e36c8fcc3c81fb686bf81f5270">
        <akt:full-name>D.F. Bacon</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6aa5a11fcd5e2953e0e9a4984d106256-63c222e36c8fcc3c81fb686bf81f5270">
        <akt:full-name>S.A. Yemini</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors introduce two enhancements to optimistic recovery which allow messages to be logged without performing any I/O to stable storage. The first permits messages to be instantaneously logged in volatile storage, as in the sender-based message logging technique of D.B. Johnson and W. Zwaenepoel (1987), but without their restriction of single-fault-tolerance. The second permits message data and/or message arrival orders not to be logged in circumstances where this information can be reconstructed in other ways. They show that the combination of these two optimizations yields a transparent &lt;e1&gt;n&lt;/e1&gt;-fault-tolerant system which logs to stable storage only those messages received from the outside world and a very small number of additional messages</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005295.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005296">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Approaches to implementation of a repairable distributed recovery block scheme</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ba54f681feee6c63e518acf8351aa8dc-5501e423ab2a8f87f1b83681e002abaa">
        <akt:full-name>K.H. Kim</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b9111729556f803886f59560aea90386-5501e423ab2a8f87f1b83681e002abaa">
        <akt:full-name>J.C. Yoon</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors previously proposed (1984) the basic concept of the distributed recovery block (DRB) scheme as an approach to uniform treatment of hardware and software faults in real-time applications. Design issues that arise in implementing the DRB scheme are discussed together with some promising approaches. Issues in extending the DRB scheme with the capability of reincorporating a repaired node without disrupting the real-time computing service are also discussed. An experimental implementation of the repairable DRB scheme into a real-time distributed computer system (DCS) testbed and subsequent measurement of the system performance demonstrated the fast forward recovery capability and the logical soundness of the scheme</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005296.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>real-time systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005297">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault tolerant concurrent C: a tool for writing fault tolerant distributed programs</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0d9a99482e6dc8634cb6220134e4ef86-f183551a19d20eb7cf0b46c1012fcbc4">
        <akt:full-name>R.F. Cmelik</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-77101907d40dd71de30ad2ebea751ce1-f183551a19d20eb7cf0b46c1012fcbc4">
        <akt:full-name>N.H. Gehani</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-db3adfd474ffbf5491d1d05e8adb4cb1-f183551a19d20eb7cf0b46c1012fcbc4">
        <akt:full-name>W.D. Roome</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Concurrent C is a superset of C that provides parallel programming facilities. The authors' local area network (LAN) multiprocessor implementation has led them to explore the design and implementation of a fault-tolerant version of Concurrent C called FT Concurrent C. FT Concurrent C allows the programmer to replicate critical processes. A program continues to operate with full functionality as long as at least one of the copies of a replicated process is operational and accessible. As far as the user is concerned, interacting with a replicated process is the same as interactive with an ordinary process. FT Concurrent C also provides facilities for notification upon process termination, detecting processor failure during process interaction and automatically terminating orphan processes. The authors discuss the different approaches to fault tolerance, describe the considerations in the design of FT Concurrent C, and present a programming example</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005297.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>C language</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005298">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Computational complexity of controllability/observability problems for combinational circuits</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3a3c747006328ef64ae695058ecfe3a4-807e8ae56f4a20616cde2ad780a270d4">
        <akt:full-name>H. Fujiwara</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The computational complexity of fault detection problems and various controllability and observability problems for combinational logic circuits are analyzed. It is shown that the fault detection problem is still NP-complete even for monotone circuits limited in fanout, i.e. the number of signal lines which fanouts from a signal line is limited to three. It is also shown that the observability problem for unate circuits is NP-complete, but that the controllability problem for unate circuits can be solved in time complexity O(&lt;e1&gt;m&lt;/e1&gt;), where &lt;e1&gt;m&lt;/e1&gt; is the number of lines in a circuit. Furthermore, two classes of circuits, called &lt;e1&gt;k&lt;/e1&gt;-binate-bounded circuits and &lt;e1&gt;k&lt;/e1&gt;-bounded circuits, are introduced. For &lt;e1&gt;k&lt;/e1&gt;-binate-bounded circuits, the controllability problem is solvable in polynomial time, and for &lt;e1&gt;k&lt;/e1&gt;-bounded circuits, the fault detection problem is solvable in polynomial time, when &lt;e1&gt;k&lt;/e1&gt;≤log &lt;e1&gt;p&lt;/e1&gt;(&lt;e1&gt;m&lt;/e1&gt;) for some polynomial &lt;e1&gt;p&lt;/e1&gt;(&lt;e1&gt;m&lt;/e1&gt;). The class of &lt;e1&gt;k&lt;/e1&gt;-bounded circuits includes many practical circuits such as decoders, adders, one-dimensional cellular arrays, two-dimensional cellular arrays, etc</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005298.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>combinatorial circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>computational complexity</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>controllability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error detection</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>observability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005299">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>An iterative technique for calculating aliasing probability of linear feedback signature registers</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-bf23dfd4d9f1870970861d007a808ef9-c08ed3aac5e97d806fe1edd35a156c8a">
        <akt:full-name>A. Ivanov</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1fe5aa7d34f8c3c063ec730685c43c53-c08ed3aac5e97d806fe1edd35a156c8a">
        <akt:full-name>V.K. Agarwal</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>An iterative technique for computing the exact probability of aliasing for any linear feedback signature register (i.e. characterized by any feedback polynomial, for any constant probability of error, and for any test length) is proposed. The technique is also applicable to a more general model of the aliasing problem wherein the probability of error may vary with each output bit. The complexity of the technique enables registers of lengths of interest in practice, e.g. 16, to be analyzed readily</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005299.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>automatic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>feedback</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>iterative methods</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005300">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>RIDDLE: a foundation for test generation on a high level design description</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e66e9ba9fc80df23416d761f2ea15f6a-cd74aa3bcb46e9cf0794aaef565a2c65">
        <akt:full-name>G.M. Silberman</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c8ab56c42069a17b1487b65e4b16980a-cd74aa3bcb46e9cf0794aaef565a2c65">
        <akt:full-name>I. Spillinger</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A formal approach is presented to the analysis of a VLSI design described at the high level, which produces information conducive to the acceleration of test-generation algorithms. This analysis yields information which can be used to reduce the amount of effort expended during backtracking, by guiding this process towards decisions (assignments) less likely to cause conflicts and minimizing the amount of work between backtracks. RIDDLE, an algorithm that performs this analysis in time that is linear in the number of signals, is introduced. Experimental results for the special case of combinatorial gate-level designs are also given</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005300.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>VLSI</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>combinatorial circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>integrated logic circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005301">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Analysis of workload influence on dependability</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c896b45782496b2554abeb72c5585889-6ef60ff41518ef0af24c4a437d4b9c44">
        <akt:full-name>J.F. Meyer</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-058754da1c3e75ede3da5080b194a972-6ef60ff41518ef0af24c4a437d4b9c44">
        <akt:full-name>L. Wei</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors consider a general, analytic approach to the study of workload effects on computer system dependability, where the faults considered are transient and the dependability measure in question is the time to failure, &lt;e1&gt;T&lt;/e1&gt;f. Under these conditions, workload plays two roles with opposing effects: it can help detect/correct a correctable fault, or it can cause the system to fail by activating an uncorrectable fault. As a consequence, the overall influence of workload on &lt;e1&gt;T&lt;/e1&gt;f is difficult to evaluate intuitively. To examine this in more formal terms, the authors establish a Markov renewal process model that represents the interaction among workload and fault accumulation ins systems for which fault tolerance can be characterized by fault margins. Using this model, they consider some specific examples and show how the probabilistic nature of &lt;e1&gt;T &lt;/e1&gt;f can be formulated directly in terms of parameters regarding workload, fault arrivals, and fault margins</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005301.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005302">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Reliability analysis of non repairable systems using stochastic Petri nets</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-cbe0db1faecca4a1b2db59c031dfcd24-647012f1c11d2455ce6332e82c9bf2df">
        <akt:full-name>K. Barkaoui</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-cfb09918fe9aeba10d9543f140512be5-647012f1c11d2455ce6332e82c9bf2df">
        <akt:full-name>G. Florin</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8785850b4c85d9a05eed70aae75f467e-647012f1c11d2455ce6332e82c9bf2df">
        <akt:full-name>C. Fraize</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7687a493cd3b02678f160a6d10c0e188-647012f1c11d2455ce6332e82c9bf2df">
        <akt:full-name>B. Lemaire</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7a61f30f97ffcf95a6b5724a228bdbc9-647012f1c11d2455ce6332e82c9bf2df">
        <akt:full-name>S. Natkin</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The algorithm presented is designed to compute large degradable system reliability. These systems are modeled using nonrepetitive stochastic Petri nets. The reliability parameters are computed during the generation of the reachability graph. A criterion is given that allows the computation to be stopped as soon as a given precision is obtained</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005302.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>directed graphs</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reliability theory</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>stochastic processes</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005303">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>An open layered architecture for dependability analysis and its application</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8f5aabf49a40034083381b9bdd3b3c2b-955f80abe7e1588e7c390dddca303c57">
        <akt:full-name>M. Mulazzani</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The author presents a proposal for an open layered architecture for dependability analysis, corresponding to the respective levels of abstraction. The motivation for this reference architecture is to support structuring, reusability, and variability of methods and tools. Each of the seven layers is discussed in detail, and the correspondence with currently available tools for dependability analysis is shown by examples. To demonstrate the feasibility of the approach, the layered architecture is used as a basis for design and implementation of MARPLE, a tool for dependability analysis of distributed systems. MARPLE mainly concentrates on the application layer and the model-generation layer. It is embedded in a system-design environment and bridges the gap between the design tool and dependability analysis</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005303.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005306">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>FIAT-fault injection based automated testing environment</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7bc6c82a0ddaf8edd9e7781035cb9d5d-3a98a5b0dc2e3a2ae4921d7b10071ff1">
        <akt:full-name>Z. Segall</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b9a4ba3c17d5a4702ff45f388cf301b2-3a98a5b0dc2e3a2ae4921d7b10071ff1">
        <akt:full-name>D. Vrsalovic</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-723bc3d6766f91020e51c95f76723e86-3a98a5b0dc2e3a2ae4921d7b10071ff1">
        <akt:full-name>D. Siewiorek</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fd2ddad7dc3721439d9879c9880f320b-3a98a5b0dc2e3a2ae4921d7b10071ff1">
        <akt:full-name>D. Yaskin</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-911dea3eae4696270d78ce487bde5dcc-3a98a5b0dc2e3a2ae4921d7b10071ff1">
        <akt:full-name>J. Kownacki</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0d043cdec1404dffa803bc5aae2517cd-3a98a5b0dc2e3a2ae4921d7b10071ff1">
        <akt:full-name>J. Barton</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b230b8d0420c1e93bf0f1bcef4362040-3a98a5b0dc2e3a2ae4921d7b10071ff1">
        <akt:full-name>R. Dancey</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-380c159629a27e891215d91a950ec52f-3a98a5b0dc2e3a2ae4921d7b10071ff1">
        <akt:full-name>A. Robinson</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-65dfa2b5b1458e8930c07aede46da437-3a98a5b0dc2e3a2ae4921d7b10071ff1">
        <akt:full-name>T. Lin</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>An automated real-time distributed accelerated fault injection environment (FIAT) is presented as an attempt to provide suitable tools for the validation process. The authors present the concepts and design, as well as the implementation and evaluation of the FIAT environment. As this system has been built, evaluated and is currently in use, an example of fault tolerant systems such as checkpointing and duplicate and match is used to show its usefulness</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005306.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>automatic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005307">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>On simulating faults in parallel</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a610b1940cb09ac8ad7e7b11303587f5-09facf5280b1b665d872298c257c0aaf">
        <akt:full-name>V.S. Iyengar</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-cbb314f5461a6d7526043e9a4fb4c754-09facf5280b1b665d872298c257c0aaf">
        <akt:full-name>D.T. Tang</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Hardware engines (e.g. YSE and EVE) have been built to perform functional simulation of large designs over many patterns. The authors present a method of simulating faults in parallel that is applicable to these hardware simulation engines (and to software simulators with similar characteristics). A notion of independence between faults is used to determine the faults that can be simulated in parallel. An efficient algorithm is developed to determine the independent subsets of faults. Results of applying the algorithm to large examples are presented and shown to be very good by comparing them with theoretical lower bounds. This technique makes it feasible to fault simulate large networks using these hardware simulation engines</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005307.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>digital simulation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel architectures</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>virtual machines</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005308">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Accelerated fault simulation by propagating disjoint fault-sets</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f9f729678f8be2fee2f7f2feb4042d34-5b65857d15deceb1f49ac365c6f1bbdf">
        <akt:full-name>S. Teshima</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-72501abf2f118d0f08a382230b3d761b-5b65857d15deceb1f49ac365c6f1bbdf">
        <akt:full-name>N. Chujo</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5c21af06b222fae088937f556e7dd7c4-5b65857d15deceb1f49ac365c6f1bbdf">
        <akt:full-name>N. Sano</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2321bb51520b6e378ce666dbb3f02e84-5b65857d15deceb1f49ac365c6f1bbdf">
        <akt:full-name>H. Nagase</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-02efa15f64a1d822c71827252dd9d423-5b65857d15deceb1f49ac365c6f1bbdf">
        <akt:full-name>M. Takigawa</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors propose a novel fault simulation method (the compressive method), which extends the idea of fault propagation on which the deductive and concurrent method are based. A fault set is used as a unit of fault propagation; it is a set of faults which cause the same effect on the primary outputs for a given input pattern. Thus, faults in the set are propagated in a lump, just like an individual fault in the concurrent method, and fault propagation is accelerated in proportion to number of elements in a fault set. The compressive method introduces union operation on the fault sets. The operation dynamically gathers faults into a fault set so that they are propagated in a bit unit. Fault simulation using this method provides better performance than the concurrent method; simulation time is shortened by 50-83% and memory storage is reduced by 50-80% in simulating a combinational circuit</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005308.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>integrated circuit testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>integrated logic circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005309">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A reconvergent fanout analysis for efficient exact fault simulation of combinational circuits</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-89b63c7b27d8ee7224f13b7dfe0a274c-6ff91a95fa3a8416904aec8193fd994d">
        <akt:full-name>F. Maamari</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fcf660e1d4f23ecc563a5b6f7998612d-6ff91a95fa3a8416904aec8193fd994d">
        <akt:full-name>J. Rajski</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>An exact fault simulation can be achieved by simulating only the faults on reconvergent fanout stems, while determining the detectability of faults on other lines by critical path tracing within fanout-free regions. The authors have delimited, for every convergent fanout stem, a region of the circuit outside of which the stem fault does not have to be simulated. Lines on the boundary of such a stem region, called exit lines, have the following property: if the stem fault is detected at the line, and the line is critical with respect to a primary output, then the stem fault is detected at the primary output. Any fault-simulation technique can be used to simulate the stem fault within its stem region. The fault simulation complexity of a circuit is shown to be directly related to the number and size of stem regions in the circuit. Results obtained for the well-known benchmark circuits are presented</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005309.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>combinatorial circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005310">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault simulation in a multilevel environment: the MOZART approach</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-82f7815824c23d1de67a4cade9571c26-f2093cb08f0aa0dce515fb47bc730fe1">
        <akt:full-name>G.P. Cabodi</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f6ca144684b0d8fd9aa119a97e6525b4-f2093cb08f0aa0dce515fb47bc730fe1">
        <akt:full-name>S. Gai</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6a22cf9bc9175a68f4e645514df40a72-f2093cb08f0aa0dce515fb47bc730fe1">
        <akt:full-name>M. Mezzalama</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d54dea742ca3e410f26f5c6ebb74d727-f2093cb08f0aa0dce515fb47bc730fe1">
        <akt:full-name>P.L. Montessoro</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-26d1f0793a195d9f203225bd6559be17-f2093cb08f0aa0dce515fb47bc730fe1">
        <akt:full-name>F. Somenzi</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>MOZART is a concurrent fault simulator for large circuits described at the RT, functional, gate, and switch levels. Performance is gained by means of techniques aimed at the reduction of unnecessary activity. Two such techniques are levelized two-pass simulation, which minimizes the number of events and evaluations, and list event scheduling, which allows optimized processing of simultaneous (fraternal) events for concurrent machines. Both analytical and experimental evidence is provided for the effectiveness of the solutions adopted in MOZART. A performance metric is introduced for fault simulation that is based on comparison with the serial algorithm and is more accurate than those used up till now. Possible tradeoffs between the speeds of fault-free and fault simulations are discussed</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005310.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005311">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Modelling the influence of unreliable software in distributed computer systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0e6204aed152309d768f6c1c44fa791f-4eae3fb2e3548e8bc50577107cfce276">
        <akt:full-name>B.E. Helvik</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The author develops a system dependability model accounting for the influence of software faults. When one software system resides on a set of distributed computers or processing units, it is necessary to comprehend the logical linkage between system units. The model is based on the concept that a logical fault in a system will cause an inconsistent (erroneous) internal state in the processing unit where the fault is activated, and that this error can cause a failure of the processing unit, be corrected without causing a failure, or propagate to other cooperating processing units. The model also accounts for the logical hardware faults and the transient faults, which have a similar pattern of manifestations. Analysis of the stationary dependability characteristics of distributed systems is discussed. An approximate procedure which allows evaluation of fairly large systems is outlined. A brief example is presented which demonstrates that even a low error propagation may have large performance consequences</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005311.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005312">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Dependability evaluation of software fault-tolerance</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fc69f9dc4d1600f0764ff4e7f8f0bdb1-d4e58035a15283a956f7801f2b782aa3">
        <akt:full-name>J. Arlat</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-086850938f3e3a5b26a289d4d07c1740-cc0e53fc5119a8536cbba116db5a1a11">
        <akt:full-name>K. Kanoun</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-da9c463f8b783083d7d7e9003db8224f-f2f47e0f42384bcea131998cf8fd6700">
        <akt:full-name>J.-C. Laprie</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors present a detailed reliability and safety analysis of the two major software fault-tolerance approaches, recovery blocks (RB) and &lt;e1&gt;n&lt;/e1&gt;-version programming (NVP). The methodology used for the modeling is based on the identification of the possible types of faults introduced during the specification and the implementation, and on the analysis of the behavior following fault activation. The main outcome of the evaluation concerns the derivation of analytical results for identifying the improvement that can result from the use of RB and NVP and for revealing the most critical types of related faults. The study of nested RBs shows that the proposed analysis approach can be applied to such realistic software structures and when an alternate is itself a RB, the results are analogous to the case of the addition of a third alternate. The reliability analysis showed that an improvement has to be expected, but that this improvement would be very low. The study of the discarding of a failed version in NVP shows that this strategy is always worthwhile for safety, whereas, for reliability, it is only worthwhile when independent faults dominate</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005312.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005313">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Experimental evaluation of software reliability growth models</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4ac1c65ae319320d277e3207b06fe7d5-ba4b8881853d1d85288d367eeeb86987">
        <akt:full-name>K. Matsumoto</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2137ce23066be9540576a39fb6e69a45-ba4b8881853d1d85288d367eeeb86987">
        <akt:full-name>K. Inoue</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b445b5d5de65a43467fadd701624fc13-ba4b8881853d1d85288d367eeeb86987">
        <akt:full-name>T. Kikuno</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-89d3b7dd777e8dc9d30cf5f67971a505-ba4b8881853d1d85288d367eeeb86987">
        <akt:full-name>K. Torii</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>An experimental evaluation is presented of SRGMs (software reliability growth models). The experimental data sets were collected from compiler construction projects completed by five university students. The SRGMs studied are the exponential model, the hyperexponential model, and S-shaped models. It is shown that the S-shaped models are superior to the exponential model in both the accuracy of estimation and the goodness of fit (as determined by the Kolmogorov-Smirnov test). It is also shown that it is possible to estimate accurately residual faults from a subset of the test results. An estimation method is proposed for the hyperexponential model. It is based on the observation that the start time for testing is different for different program modules. It is shown that this method improves the goodness of fit significantly</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005313.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>software reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005314">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A unified built-in-test scheme: UBIST</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7d48505aa96ff117f6606f6a72f25786-6caf8cf80437c5a67eab3975cad52781">
        <akt:full-name>M. Nicolaidis</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>An original BIST (built-in self-test) scheme is proposed to cover some shortcomings of self-checking circuits and to ensure all tests needed for integrated circuits. In the BIST scheme, self-checking techniques and built-in self-test techniques are combined in an original way and take advantage one from the other. This results in a unified BIST scheme (UBIST), allowing a high fault coverage for all tests needed for integrated circuits, e.g. offline test (design verification, manufacturing test, and maintenance test) and online concurrent error detection</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005314.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>integrated circuit testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>integrated logic circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005315">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>An implementation and analysis of a concurrent built-in self-test technique</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a79309b9a15019d08a821bdef03f0730-e0ad1f5428e26224820fb01755027795">
        <akt:full-name>R. Sharma</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-583e845329bab667378f87353818cf3a-e0ad1f5428e26224820fb01755027795">
        <akt:full-name>K.K. Saluja</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors propose a built-in concurrent self-test (BICST) technique for testing combinational logic circuits concurrently with their normal operation. They also introduce a concept of sharing the test hardware between identical circuits to reduce the overall area overhead. They implemented this technique in the design of an ALU (arithmetic logic unit) with online test capability in CMOS technology. The additional hardware used for a 12-bit ALU was 19% of the total chip area, and it did not impose any timing overhead on the operation of the ALU. The overhead decreases with an increase in the size of the ALU. The authors define some measures for evaluating the performance of the BICST technique and discuss methods for their computation and include both simulation and analytical results. In addition to detecting permanent faults, the BICST technique can also be used for detecting intermittent and transient faults. The authors propose some methods for detecting intermittent faults and for computing the transient fault coverage</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005315.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>combinatorial circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>integrated logic circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005316">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>An on-line error-detectable array divider with a redundant binary representation and a residue code</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4c941e7529f29d2dbe9025643e76abe1-49f9cd6c6ecb11f8525bee81c3a1767b">
        <akt:full-name>N. Takagi</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-52c1267291800b1da7d241a1511bdadd-49f9cd6c6ecb11f8525bee81c3a1767b">
        <akt:full-name>S. Yajima</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>An on-line error-detectable high-speed array divider is proposed. The divider is based on a formerly proposed algorithm using a redundant binary representation with a digit set {0, 1, -1}. The computation time of the &lt;e1&gt;n&lt;/e1&gt;-bit divider is proportional to &lt;e1&gt;n&lt;/e1&gt;, in contrast to that of an array divider based on a conventional subtract-and-shift algorithm, which is proportional to &lt;e1&gt;n&lt;/e1&gt;2. By the residue checks of only the dividend, divisor, quotient, and the remainder, and a few additional checks, any error caused by a single-cell fault can be detected in normal computation. The amount of additional hardware to achieve the online error-detectability is proportional to &lt;e1&gt;n&lt;/e1&gt;, and very small compared with the whole amount of hardware of the divider</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005316.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>digital arithmetic</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>dividing circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error detection codes</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005317">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>General linear codes for fault-tolerant matrix operations on processor arrays</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6db84cca89036370d18041320b37e415-7685ceebcf48d216406e12df325629d9">
        <akt:full-name>V.S.S. Nair</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a2844d70249531c6afca9a96023f8078-7685ceebcf48d216406e12df325629d9">
        <akt:full-name>J.A. Abraham</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Various checksum codes have been suggested for fault-tolerant matrix computations on processor arrays. Use of these codes is limited due to potential roundoff and overflow errors. Numerical errors may also be misconstrued as errors due to physical faults in the system. The authors identify a set of linear codes which can be used for fault-tolerant matrix operations such as matrix addition, multiplication, transposition, and LU-decomposition, with minium numerical error. Encoding schemes are given for some of the example codes which fall under the general set of codes. With the help of experiments, the authors derive a rule of thumb for the selection of a particular code for a given application. Since the overall error in the code will also depend on the method of implementation of the coding scheme, they suggest the use of specific algorithms and special hardware realizations for the check element computation</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005317.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>codes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel processing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005318">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Watchdog parity channels for digital filter protection</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-63523fcd5547882f082590785ff881da-62fce0dd8654dc6c0eaee57319618e74">
        <akt:full-name>B. Zagar</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-34cf3fa5ca66113061e1f9f8b321b049-62fce0dd8654dc6c0eaee57319618e74">
        <akt:full-name>R. Redinbo</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A novel method is presented for protecting digital filters from both hard and soft errors emanating in their physical realization by using the error-detecting, systematic, real number, convolutional codes. Normal filter operation is augmented by parallel parity channels, and errors in the filter's operation are detected by comparing the parity values with parity samples recalculated from the filters' output. The parity values are calculated in parallel at reduced rate, and no speed degradation is incurred. The rate reduction results because in an (&lt;e1&gt;n &lt;/e1&gt;, &lt;e1&gt;k&lt;/e1&gt;) convolutional code the parity channels operate decimated by a factor of &lt;e1&gt;k&lt;/e1&gt;. It is shown that modifying the parity channels to cancel filter poles leads to a significant reduction in the complexity without sacrificing the detecting power of the convolutional code. Finite-precision arithmetic in the realization introduces noise in error decision variables even in the case of fault-free operation. A statistical analysis is given establishing a bound on the comparators' thresholds above which an error is decided</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005318.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>digital filters</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error detection codes</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005319">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Robust search methods for B-trees</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-037b330a272b6df6780a3b63570251ad-ee223dfb816eb693e1141bd01c3b78d9">
        <akt:full-name>K. Fujimura</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e4f1248bf453a8b486ca456869eb9d9f-ee223dfb816eb693e1141bd01c3b78d9">
        <akt:full-name>P. Jalote</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors propose search methods for B-trees that correctly perform the search despite the presence of corrupted indices. If in a search the desired record with a given key is not found, the robust search methods determine if this is caused by a corrupted index. The corrupted index is then detected and corrected so that the value of the index is in a right range. The authors first present a method to handle a single error in the tree and then generalize the method to cope with multiple errors. Unlike the previous attempts for robust data structures, their methods do not require redundancy to be added to the data structure and make use of the constraints by which the indices are organized</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005319.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>trees (mathematics)</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005320">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Saturation: reduced idleness for improved fault-tolerance</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-810420fb0ababc6375871d5685271ef8-1d82b30145e6a43d971a4336f114c8c6">
        <akt:full-name>J.-C. Fabre</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-10143f83db1a0a733b13b398499452ad-1d82b30145e6a43d971a4336f114c8c6">
        <akt:full-name>Y. Deswarte</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b1f7976cad30dd3a4f5c0ec55161bf81-5c3de59ea98c77ce8f741bc8cc53f22b">
        <akt:full-name>J.-C. Laprie</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3820994679b359e92472ccd2a5f08e43-95501339b4da38d04035c935b150e48e">
        <akt:full-name>D. Powell</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors present a technique for maximizing the redundancy level of tasks and tolerating hardware faults by majority voting in the context of a network of workstations. The idea is to compute dynamically the number of copies allocated to each task, according to the number of sites and the tasks' criticality parameters. This technique leads to maximum utilization of the available resources in the distributed system, i.e. it reduces the idleness of resources and increases the redundancy of tasks. A reduction in fault dormancy and error latency is thus provided. This technique, called the saturation technique, is compared with similar approaches. A detailed description and the results obtained by simulation showing the advantages and the cost of implementing the saturation technique are given. The authors underline the structure of a convenient distributed operating system, including the execution model and task designation, to support the execution of multiple copies of tasks. The fault assumptions are discussed, and the different phases of a distributed scheduler are detailed</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005320.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005321">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Agreeing on who is present and who is absent in a synchronous distributed system</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-07824e4560cf42e260dc3aa850485bde-45d50fd9475a8fe794bd8dc42168f14c">
        <akt:full-name>F. Cristian</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The author describes his system model and failure assumptions by precisely specifying the processor group membership problem. He then gives two protocols for solving this problem. The protocols provide all correct processors with constituent views of the processor group membership. They also guarantee bounded processor failure detection and join processing delays despite any number of performance failures that do not cause network partitioning. The first protocol provides very fast processor failure detection but can require a significant message traffic overhead, even when no failures occur. To reduce this overhead, the author derives the second protocol, which has a (provable) minimal message overhead in the absence of failures but provides a longer failure detection delay and is more complex. He concludes by comparing his approach with other known approaches</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005321.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>protocols</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005322">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>An easily testable parallel multiplier</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6d0a688b5796da83c4c4000a35db297c-c1357ad94c961c2489d4e15c3e42a4a4">
        <akt:full-name>S.J. Hong</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The &lt;e1&gt;n&lt;/e1&gt;-by-&lt;e1&gt;n&lt;/e1&gt; parallel multiplier can be usually broken into two blocks, the summand-generator and the summand-counter. The summand-generator generates &lt;e1&gt;n&lt;/e1&gt;2 summands and the summand-counter adds them up to produce the final 2&lt;e1&gt;n&lt;/e1&gt;-bit product. The summand-generator is easy to test because all inputs are directly controllable and all faults propagate through summand-counter to primary outputs. However, the summand-counter is difficult to test due to poor controllability. To provide 100% controllability of summands, the summand-generator is modified using one extra input. This new summand-generator can be tested with 19 vectors. With this summand-generator, the summand-counter can be constructed testable using the minimum number of adder cells but no extra device or pin. This summand-counter can be tested with 3&lt;e1&gt;n&lt;/e1&gt;+41 vectors. Thus, a parallel multiplier can be designed testable with 3&lt;e1&gt;n&lt;/e1&gt;+60 vectors using only one extra pin</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005322.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>logic design</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiplying circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel processing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005323">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>On the design of robust testable CMOS combinational logic circuits</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d626796df75aa41cf53152dd0129572f-95173606578f7e1931d3fff471b9a2f1">
        <akt:full-name>S. Kundu</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-965dc2d124659a370908152afc40e8f5-95173606578f7e1931d3fff471b9a2f1">
        <akt:full-name>S.M. Reddy</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors propose an integrated approach to the design of combinational logic circuits in which stuck-open faults and path delay faults are detectable by robust tests that detect modeled faults independent of the delays in the circuit under test. They demonstrate that the proposed designs and tests guarantee the design of CMOS logic circuits in which all path delay faults are locatable</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005323.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>CMOS integrated circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>combinatorial circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic design</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005324">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The design of fast totally self-checking Berger code checkers based on Berger code partitioning</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8446181c4ac2915149cb54327cf36c4c-e566a9e3794eddddcb06e94fa87aab09">
        <akt:full-name>J.-C. Lo</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4f4c37b9ef37da503e1cbe7dfdbe63b0-e566a9e3794eddddcb06e94fa87aab09">
        <akt:full-name>S. Thanawastien</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors develop several key theorems on Berger code partitioning on which a novel totally self-checking Berger code checker design is based. This design can handle any information length. It is shown that the design exhibits a tradeoff between the number of gates and the number of gate levels. In particular, the minimum-cost realization of the design achieves a speed improvement of approximately 50%, while the increase in the number of gates is less than 30% for information length ≤32, compared to the design given by M.A. Marouf and A.D. Friedman (1978). The minimum-cost realization uses 30% to 40% fewer gates than the cost-effective realization of the S.J. Piestrak's design (1987) for information length &lt;e1&gt;I&lt;/e1&gt;≥15 while achieving almost the same speed improvement</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005324.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>codes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic design</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005325">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The implementation and application of micro rollback in fault-tolerant VLSI systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-cab87903d27c6a5e10c9c07cfe7f570c-1270d1f9a7c5b3e735fe7b2ad3da8bf3">
        <akt:full-name>Y. Tamir</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-43b3df6751053e364fcb265c72e5c814-1270d1f9a7c5b3e735fe7b2ad3da8bf3">
        <akt:full-name>M. Tremblay</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1b3424f87ef59e78d94bcfdc8b49f803-1270d1f9a7c5b3e735fe7b2ad3da8bf3">
        <akt:full-name>D.A. Rennels</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors present a technique, called micro rollback, which allows most of the performance penalty for concurrent error detection to be eliminated. Detection is performed in parallel with the transmission of information between modules, thus removing the delay for detection from the critical path. Erroneous information may thus reach its destination module several clock cycles before an error indication. Operations performed on this erroneous information are undone using a hardware mechanism for fast rollback of a few cycles. The authors discuss the implementation of a VLSI processor capable of micro rollback as well as several critical issues related to its use in a complete system</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005325.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>VLSI</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>computer architecture</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error detection</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005326">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Hardware and software fault tolerance: a unified architectural approach</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5a4ee8671e8db1d129c28e110f300b9e-926afed057ef7d245af9ec45a522471d">
        <akt:full-name>J.H. Lala</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2e4109360eb44fa61212ad80b3c314d0-926afed057ef7d245af9ec45a522471d">
        <akt:full-name>L.S. Alger</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A computer architecture, FTP-AP, has been designed that can efficiently implement &lt;e1&gt;N&lt;/e1&gt;-version fault-tolerant software and still tolerate random hardware failures with extremely high coverage. A unified architectural approach extends a well-known hardware fault tolerant without violating the fundamental hardware fault-tolerance design principles, and it provides a possible solution to the problem of correlated software errors</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005326.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer architecture</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532612">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The Delta-4 approach to dependability in open distributed computing systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3820994679b359e92472ccd2a5f08e43-95501339b4da38d04035c935b150e48e">
        <akt:full-name>D. Powell</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4123be2cd1c3da9c6c8f6ba03ba1e718-0fe880c76ba842e71195992d4363ec5c">
        <akt:full-name>G. Bonn</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-765b8259ff460d088ca03b0cc2091c3f-0fe880c76ba842e71195992d4363ec5c">
        <akt:full-name>D. Seaton</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b51d8091f5eba400faba77c8520cc157-0fe880c76ba842e71195992d4363ec5c">
        <akt:full-name>P. Verissimo</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e3e523afebbb4dd72ec70407d6146111-0fe880c76ba842e71195992d4363ec5c">
        <akt:full-name>F. Waeselynck</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>As part of the European Strategic Programme for Research in Information Technology (ESPRIT), the Delta-4 project is seeking to define an open, fault-tolerant, distributed computing architecture. The authors present the overall Delta-4 framework for open, fault-tolerant, distributed computing systems and sketch the current implementation, which is based on a local area network with specific atomic multicasting and error-processing protocols for communicating between replicated software components. The system is used to demonstrate the various fault-tolerance techniques by a replicated database application</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005327.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer architecture</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005328">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault tolerant parallel processor architecture overview</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a18d1cd9cabd7fa73757dcb03217e2f9-3e24650a7dadb1c7b2a721f75401fb23">
        <akt:full-name>R.E. Harper</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5a4ee8671e8db1d129c28e110f300b9e-3e24650a7dadb1c7b2a721f75401fb23">
        <akt:full-name>J.H. Lala</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fbf3e5e0da5fd12771043c9d31992ba5-3e24650a7dadb1c7b2a721f75401fb23">
        <akt:full-name>J.J. Deyst</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors address issues central to the design and operation of a Byzantine resilient parallel computer. Interprocessor connectivity requirements are met by treating connectivity as a resource which is shared among many processing elements, allowing flexibility in their configuration and reducing complexity. Reliability analysis results are presented which demonstrate the reduced failure probability of such a system. Redundant groups are synchronized solely by message transmissions and receptions, which also provide input data consistency and output voting. Performance analysis results are presented which quantify the temporal overhead involved in executing such fault tolerance-specific operations</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005328.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer architecture</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel processing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005329">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Almost certain diagnosis for intermittently faulty systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f1258a7fd8201ab0be5875475ae9c67b-c807ff26e2552b472c4f8675727736af">
        <akt:full-name>D.M. Blough</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-26bb0b749f946c002b186625c01a82f6-c807ff26e2552b472c4f8675727736af">
        <akt:full-name>G.F. Sullivan</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-336d3f1d7f40797fb9d50cb67de2a407-c807ff26e2552b472c4f8675727736af">
        <akt:full-name>G.M. Masson</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors present and analyze a uniformly probabilistic model for the self-diagnosis capabilities of a multiprocessor system. In this model an individual processor fails with probability &lt;e1&gt;p&lt;/e1&gt; and a fault-free processor testing a faulty processor detects a fault with probability &lt;e1&gt;q&lt;/e1&gt;, modeling the situation in which processors can be intermittently faulty or the situation where tests are not capable of detecting all possible faults within a processor. They present an efficient algorithm which utilizes a relatively small number of tests (given by any function dominating &lt;e1&gt;n&lt;/e1&gt; log &lt;e1&gt;n&lt;/e1&gt; where &lt;e1&gt;n &lt;/e1&gt; is the number of processors) and achieves correct diagnosis with high probability. They obtain a nearly matching lower bound which shows that no algorithm can achieve correct diagnosis with high probability in systems which conduct a number of tests dominated by &lt;e1&gt;n&lt;/e1&gt; log &lt;e1&gt;n&lt;/e1&gt;. Examples of systems which perform a modest number of tests are given in which the probability of correct diagnosis for the authors' algorithm is very nearly one</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005329.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessing systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005330">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>On minimizing testing rounds for fault identification</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5dcd43a7d857d26cd7c57078921ab518-82c070c2da56f263e8ed78fe2dee37db">
        <akt:full-name>E. Schmeichel</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6a7e0ddb3265d84739d4baeb8142fef7-82c070c2da56f263e8ed78fe2dee37db">
        <akt:full-name>S.L. Hakimi</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-39f776f4753fba4a237246e85c32c451-82c070c2da56f263e8ed78fe2dee37db">
        <akt:full-name>M. Otsuka</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c7320c3f3d846d74faa04edc5b45cd65-82c070c2da56f263e8ed78fe2dee37db">
        <akt:full-name>G. Sullivan</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A bound is obtained for the number of rounds of testing sufficient to identify the faulty units of a system. Within a single round each unit may participate in at most one test. The authors give an adaptive algorithm which works in O(log[n/t]t) rounds and uses O(&lt;e1&gt;n&lt;/e1&gt;) tests. The multiplicative constants in the new bounds are small; four in both cases. This is a major improvement over previous nonadaptive and adaptive algorithm which required O(&lt;e1&gt;t&lt;/e1&gt;+log &lt;e1&gt;n &lt;/e1&gt;) rounds of testing and O(&lt;e1&gt;n&lt;/e1&gt;+&lt;e1&gt;t&lt;/e1&gt;) tests. If &lt;e1&gt;t &lt;/e1&gt;&gt;&lt;e1&gt;n&lt;/e1&gt;1-ε, then the algorithm runs within a constant number of rounds</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005330.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>minimisation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessing systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel algorithms</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005331">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A recursive procedure for optimally designing a hybrid fault diagnosable system</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9a31a8af60210db94221a98d167942d4-fcbfc0e2a66e06c7dc77d07ebda32b74">
        <akt:full-name>T. Kohda</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6bf42cd35b642144ae23602d178855d0-fcbfc0e2a66e06c7dc77d07ebda32b74">
        <akt:full-name>K.-I. Abiru</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors give a simple recursive procedure for designing an optimal &lt;e1&gt;n&lt;/e1&gt;-unit &lt;e1&gt;t&lt;/e1&gt;/&lt;e1&gt;r&lt;/e1&gt;/&lt;e1&gt;r&lt;/e1&gt;-diagnosable system on the basis of an optimal &lt;e1&gt;n&lt;/e1&gt;'-unit &lt;e1&gt;t&lt;/e1&gt;'/&lt;e1&gt;r&lt;/e1&gt;'/&lt;e1&gt;r&lt;/e1&gt;'-diagnosable system where &lt;e1&gt;t&lt;/e1&gt;≥&lt;e1&gt;t&lt;/e1&gt;', &lt;e1&gt;r&lt;/e1&gt;≥&lt;e1&gt;r&lt;/e1&gt;', and &lt;e1&gt;n&lt;/e1&gt;≥&lt;e1&gt;n&lt;/e1&gt;'. This recursive procedure is shown to be of great flexibility. Furthermore, it is shown that the procedure can produce a large number of optimal hybrid-fault-diagnosable systems</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005331.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005332">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A probabilistic method for fault diagnosis of multiprocessor systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-25e6b19661e31386631bce631203141e-d5847d20aa886f0f080c2d7d180d4023">
        <akt:full-name>S. Rangarajan</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-97be082765f788b39a293845b488951a-d5847d20aa886f0f080c2d7d180d4023">
        <akt:full-name>D. Fussell</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors present a system-level fault-diagnosis algorithm for identifying faulty and fault-free units in a homogeneous system of computing elements. The algorithm is based on a comparison approach where tasks are performed by the units and their outputs are compared among themselves. Unlike other approaches, the authors' algorithm requires no global syndrome analysis and therefore can be performed in real time as a background task during system operation. The time required to perform the diagnosis is constant regardless of the number of units in the system. Like previous global syndrome-based approaches, the accuracy of the algorithm is remarkably high, since it uses information about individual comparison results which is lost when these results are summarized in a global syndrome</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005332.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault location</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessing systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005333">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Diagnostic reasoning in digital systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-482000c1a371442256808efc9f71160b-442f52ac36d6be628d7dcac4fefd6aa2">
        <akt:full-name>K.H. Thearling</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6122ee67de7692816e4883ba5ebf39cb-442f52ac36d6be628d7dcac4fefd6aa2">
        <akt:full-name>R.K. Iyer</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors describe an efficient method for fault diagnosis in digital systems based on the technique of reasoning. The methodology operates on the observed erroneous behavior and the structure of the system. The behavior consists of the error(s) observed on the circuit's output lines and specific values on the circuit's input lines. The technique described improves on previously published research on diagnostic reasoning in two ways. Previous work has stressed system independent techniques which could be used to diagnose any fault system whose structure can be represented. By concentrating their efforts on the specific case of diagnosing faulty digital circuits, the authors have been able to simplify the representation of the structure of the system. This representation, in the form of an AND/OR fault tree, efficiently abstracts the structure of a faulty digital system. More importantly, a method for partitioning the digital system is introduced which is shown to reduce greatly the complexity of the diagnosis</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005333.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>digital systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault location</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005334">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>GEMINI-a logic system for fault diagnosis based on set functions</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fcf660e1d4f23ecc563a5b6f7998612d-2339b944b28dcb4ede2f64aa08b5bf2e">
        <akt:full-name>J. Rajski</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A logic system is described which is based on images and inverse images of sets under functions designed specifically to deduce logic values in circuits under multiple fault conditions. Pairs, or larger clusters, of input vectors are analyzed in a two-phase algorithm. First, in forward propagation, the sets of possible values (images) for all lines of a diagnosed circuit are determined. Next, in backward implication, the sets of values on internal lines are deduced (inverse images) based on the observed response. Any fault producing a value that does not belong to these sets is tested unconditionally</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005334.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault location</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005335">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Reliabilities of two fault-tolerant interconnection networks</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-234a480a9f9852c242ecee22a5332dba-d9df58cd3ae285c5718a926e79ace187">
        <akt:full-name>J.T. Blake</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2a111934fbac2ead56739753abe119c6-d9df58cd3ae285c5718a926e79ace187">
        <akt:full-name>K.S. Trivedi</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors examine the augmented-shuffle-exchange network (ASEN), a network with low switch and link complexity. Using exact reliability expressions for small networks and upper and lower bounds for larger networks, the reliability of the ASEN is compared with that of the extra-stage interconnection network (SEN+). The main contribution of this work is to analyze the effects of imperfect coverage and online repair on the reliability of large ASEN networks using a hierarchical approach</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005335.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>circuit reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessor interconnection networks</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005336">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault-tolerant BIBD networks</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c1a5e1d18165c852a9bcb511ed693f8a-2078e51559193d120108489c74377675">
        <akt:full-name>B.E. Aupperle</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-709935d245f6cc7659d1301e3d18b68e-7c7c8e7f53b42dc920410685876bf2c5">
        <akt:full-name>J.F. Meyer</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The use of multiple buses can improve both the fault tolerance and performance of local area computer networks. Existing schemes either depend on active components for full connectivity or can experience decreased performance as many hosts attempt to access one bus. An architecture class based on balanced incomplete block designs (BIBDs) is proposed to address these problems. A BIBD architecture uses redundant communication channels and exhibits degradable performance as faults occur. The performability of such networks is evaluated, where evaluation is based on stochastic activity network models. The results obtained are provided for comparison of BIBD network performability with that of conventional multibus networks</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005336.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>local area networks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessor interconnection networks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005337">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Disk dual copy methods and their performance</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d64e756bf1ff6d87ba653a5ae106192a-46daecffee8ac01b800dd5cc46af793a">
        <akt:full-name>Y. Dishon</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5116a2db61377e00476c963c1c040db8-46daecffee8ac01b800dd5cc46af793a">
        <akt:full-name>T.S. Liu</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Performance analyses of three dual-copy methods for ensuring fault tolerance of disk storage devices are considered: an algorithm using synchronized disks, and single-read and parallel-read algorithms using nonsynchronized disks. With the synchronized algorithm, dual copying of data is performed almost simultaneously for every write request. With nonsynchronized disks, the two write operations are essentially sequential. Thus the coordination of the two physical data transfers for each write request degrades performance. On the other hand, the availability of dual copies of the data makes it possible to save on rotational latency time by connecting to that device whose rotational position is closest to the read/write head, thus improving performance</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005337.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>magnetic disc storage</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>storage management</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005338">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Reliable design of large crosspoint switching networks</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c01cc6668996bb00a27a1bfe3fc3fc2c-8d2f597b7e551c93e3ad4be73818af78">
        <akt:full-name>A. Varma</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e39fe22470020835fc812d47f1d1f347-8d2f597b7e551c93e3ad4be73818af78">
        <akt:full-name>J. Ghosh</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1497d0f701cc49a7e7a48ab8273e7967-8d2f597b7e551c93e3ad4be73818af78">
        <akt:full-name>C.J. Georgiou</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A major source of transient errors and unreliable operation of large crosspoint switching networks is the simultaneous switching (Δ&lt;e1&gt;I&lt;/e1&gt;) noise that is caused by the switching of a large number of off-chip drivers in a chip. An architectural solution to this problem is presented for networks constructed from one-sided crosspoint switching chips. The method seeks to achieve a uniform distribution of active drivers among the chips by rearranging a subset of the existing connections when a new connection is made. The problem is studied in the context of a one-sided crosspoint network with &lt;e1&gt;N&lt;/e1&gt;=&lt;e1&gt;rn&lt;/e1&gt; ports constructed from individual switching chips of size &lt;e1&gt;n&lt;/e1&gt;x&lt;e1&gt;m&lt;/e1&gt;/2. The authors show that the lower bound of &lt;e1&gt;m&lt;/e1&gt;/&lt;e1&gt;r&lt;/e1&gt; active drivers per chip can always be maintained in practice when &lt;e1&gt;m&lt;/e1&gt;/&lt;e1&gt;r&lt;/e1&gt; is an even number. The maximum number of rearrangements needed is min(&lt;e1&gt;m&lt;/e1&gt;/2-1, 2&lt;e1&gt;r&lt;/e1&gt;-1). In addition, the rearrangements are confined to two chip columns of the matrix</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005338.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>multiprocessor interconnection networks</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005339">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Design and reconfiguration strategies for near-optimal &lt;e1&gt;k&lt;/e1&gt;-fault-tolerant tree architectures</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d750dc101814879e91ac33b3842e6725-16daac8bde00f828a9030c49a04118fb">
        <akt:full-name>S. Dutt</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-16bc99ed51f546c35e3b9addc9eb6c5b-2378817c07b1d343bba6566b285eca04">
        <akt:full-name>J.P. Hayes</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A graph &lt;e1&gt;G&lt;/e1&gt;[&lt;e1&gt;k&lt;/e1&gt;,&lt;e1&gt;T&lt;/e1&gt;] representing a multiprocessor architecture is a &lt;e1&gt;k&lt;/e1&gt;-fault-tolerant (&lt;e1&gt;k&lt;/e1&gt;-FT) implementation of a basic tree &lt;e1&gt;T&lt;/e1&gt;, if &lt;e1&gt;G&lt;/e1&gt;[&lt;e1&gt;k&lt;/e1&gt;,&lt;e1&gt;T&lt;/e1&gt;] contains &lt;e1&gt;T&lt;/e1&gt; after removal of any &lt;e1&gt;k&lt;/e1&gt; nodes. The authors consider the design of such &lt;e1&gt;k&lt;/e1&gt;-FT architectures with the primary goals of minimizing the number of spare nodes and edges. The authors present a systematic methodology for designing &lt;e1&gt;k&lt;/e1&gt;-FT implementations of nonhomogeneous symmetric &lt;e1&gt;d&lt;/e1&gt;-ary trees based on graph covering. The resulting designs are optimal in a well-defined sense when &lt;e1&gt;k&lt;/e1&gt;&lt;&lt;e1&gt;d&lt;/e1&gt;, and are near-optimal otherwise. The methodology is applicable to general tree structures; this is illustrated for the case of &lt;e1&gt;k&lt;/e1&gt;-FT homogeneous symmetric trees. They also present strategies for reconfiguring &lt;e1&gt;G&lt;/e1&gt;[&lt;e1&gt;k&lt;/e1&gt;,&lt;e1&gt;T&lt;/e1&gt;] to obtain a fault-free tree isomorphic to &lt;e1&gt;T&lt;/e1&gt;</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005339.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>graph theory</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessor interconnection networks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel architectures</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>trees (mathematics)</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005340">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A fault-tolerant parallel processor modeled by a linear cellular automaton</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c21adaae27ad75e0b6b8ddd4e35e7100-711f63b5d6e6607bc3857aa5d0c95610">
        <akt:full-name>M. Tsunoyama</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b4cabd153f2126cd4525ba157a65a82a-711f63b5d6e6607bc3857aa5d0c95610">
        <akt:full-name>S. Naito</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors present the fundamental concepts for realizing a fault-tolerant parallel processor modeled by a linear cellular automaton. They give the reconfiguration scheme under this model. They treat the processing elements in the processor as cells of the cellular automaton. They regard the operating states of the elements as states of the cells. The processor can be reconfigured easily and quickly by changing the states of its processing elements when faults are detected. The reconfiguration scheme for the processor utilizes the characteristics of polynomial rings over GF(&lt;e1&gt;q&lt;/e1&gt;), where &lt;e1&gt;q&lt;/e1&gt; is a power of a prime number</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005340.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>finite automata</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel architectures</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005341">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Approaches for the repair of VLSI/WSI RRAMs by row/column deletion</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d64e84213dc1ff51bc0db52b9a828a01-2db61e7aaebb106f1f701402659eabce">
        <akt:full-name>F. Lombardi</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d1161a87b5d9a797cf533f46d81b0a9f-2db61e7aaebb106f1f701402659eabce">
        <akt:full-name>W.K. Huang</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors present two approaches for the repair of large random access memory (RAM) in which redundant rows and columns have been added as spares. These devices, referred to as redundant RAMs, are repaired to achieve acceptable yields at production time. The first approach, namely, the faulty-line-covering technique, is a refinement of the fault-driven approach. This approach finds the optimal repair-solution within a smaller number of iterations than the fault-driven algorithm. Simulation results show that the faulty-line-covering technique will execute much faster under all fault distributions. The second approach uses a heuristic criterion in the generation of the repair-solution. This heuristic criterion permits a very fast repair. The criterion is based on the calculation of efficient coefficients for the rows and columns of the memory. Two techniques for coefficient selection are proposed</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005341.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>VLSI</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault location</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>integrated circuit testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>integrated memory circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>random-access storage</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>redundancy</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005342">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Minimum fault coverage in reconfigurable arrays</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-39cf76355159276cac566f1f8aa5609b-c1a16cd76faeebc3d0d413eba72c1b54">
        <akt:full-name>N. Hasan</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-337c1996b769619218a437e160b0af05-c1a16cd76faeebc3d0d413eba72c1b54">
        <akt:full-name>C.L. Liu</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors discuss the case in which the redundant elements are arranged in the form of spare rows and spare columns for a rectangular array. Redundant RAMs are examples of such case. A covering is set of rows and columns that are to be replaced by spare rows and spare columns so that all defective elements are replaced. The authors introduce the notion of a critical set, which is a maximum set of rows and columns that must be included in any minimum covering. They show that for a given pattern of defective elements the corresponding critical set is unique. They also present a polynomial-time algorithm for finding the critical set and demonstrate how the concept of critical sets can be used to solve a number of fault-coverage problems</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005342.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>cellular arrays</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault location</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>integrated circuit testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>integrated memory circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>random-access storage</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>redundancy</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005343">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Masking asymmetric line faults using semi-distance codes</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7a3235374d0dd47c0839029ccf999548-014fed8997482340e55b52d6996f8aa3">
        <akt:full-name>K. Matsuzawa</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-31f8276351682e93960ef032a2488137-014fed8997482340e55b52d6996f8aa3">
        <akt:full-name>E. Fujiwara</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors propose a masking method for asymmetric line faults in LSIs using semidistance codes, which are a class of nonlinear codes. Faults caused by open or short circuit defects in line areas of LSIs can be made asymmetric by controlling the bus driver and the bus terminal gates. The conditions required for codes to mask these faults are clarified, and the codes satisfying these conditions for random faults and adjacent faults caused by line bridging defects are constructed by using a novel concept of semidistance. This masking technique has the advantage that no additional circuits, such as error decoders, are needed. The codes have been applied to the bus lines in the address decoders of the 4-Mb ROMs to improve fabrication yield of the LSIs</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005343.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>codes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>integrated circuit testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>large scale integration</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>read-only storage</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005344">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>An evaluation of system-level fault tolerance on the Intel hypercube multiprocessor</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-15ab40e94d313fe83ebe8bb9fd7b9620-c2237226cac5c4a03aea5aade4d9df5a">
        <akt:full-name>P. Banerjee</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fac489ae257bc780b52cbd29c3eba113-c2237226cac5c4a03aea5aade4d9df5a">
        <akt:full-name>J.T. Rahmeh</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7ac9a4a6610bba6f47a69530ff523038-c2237226cac5c4a03aea5aade4d9df5a">
        <akt:full-name>C.B. Stunkel</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6db84cca89036370d18041320b37e415-c2237226cac5c4a03aea5aade4d9df5a">
        <akt:full-name>V.S.S. Nair</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f06bd3573a2a839fe4c3f4c409a56dcd-c2237226cac5c4a03aea5aade4d9df5a">
        <akt:full-name>K. Roy</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a2844d70249531c6afca9a96023f8078-c2237226cac5c4a03aea5aade4d9df5a">
        <akt:full-name>J.A. Abraham</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A discussion is presented of a fault-tolerant hypercube multiprocessor architecture which uses a novel algorithm-based fault-detection approach for identifying faulty processors. The scheme involves the detection and location of faulty processors concurrently with the actual execution of parallel applications on the hypercube. The authors have implemented system-level fault-detection mechanisms for various parallel applications on a 16-processor Intel iPSC hypercube multiprocessor. They report on the results of two applications: matrix multiplication and fast Fourier transform. They have performed extensive studies of fault coverage of their system-level fault-detection schemes in the presence of finite-precision arithmetic, which affects the system-level encodings. They propose a reconfiguration strategy for reconfiguring the system around faulty processors by introducing spare links and nodes</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005344.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fast Fourier transforms</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>matrix algebra</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessor interconnection networks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel architectures</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005345">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>An efficient multi-dimensional grids reconfiguration algorithm on hypercube</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-43ea69017c3fe938d62c6073ab125b88-03db63bdc12026badd91d831a05967ef">
        <akt:full-name>S.K. Chen</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a2e21f07b9568e941366e7f65fb03260-03db63bdc12026badd91d831a05967ef">
        <akt:full-name>C.T. Liang</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e25d746ea96903addcffdfe6d4b47b86-03db63bdc12026badd91d831a05967ef">
        <akt:full-name>W.T. Tsai</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Reconfiguration algorithms are invoked when a fault is detected in the original loop or multidimensional grid. The reconfiguration algorithms are able to reach an equivalent set of topologies within the same architecture in a distributed manner. The authors propose mapping schemes for certain length of loops so that the resulting systems can recover from any fault within one step. With application of one of the schemes, the reconfiguration strategy for a multidimensional grid system can have better performance</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005345.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessor interconnection networks</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005346">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The connectivity of hypergraph and the design of fault-tolerant multibus systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0846c99e2ea8840fed0dd463af5d354f-3c40084aa76b057f4eb9d8ce3e71a814">
        <akt:full-name>T. Chen</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-dd6bdd8b02d95de70230f7c9abbedf3f-3c40084aa76b057f4eb9d8ce3e71a814">
        <akt:full-name>T. Kang</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b33f1c06ac7bda9b5044d147a0802fc5-3c40084aa76b057f4eb9d8ce3e71a814">
        <akt:full-name>R. Yao</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors introduce hypergraph as the mathematical model of multibus systems. The fault-tolerance problem of the multibus system is transformed into the connectivity problem of hypergraph. First, an important inequality related to all hypergraphs is stated and proved, and when equality takes place, the hypergraph with the best connectivity is defined. Second, to find the hypergraph with the best connectivity, BIB (balanced incomplete block) design is borrowed from combinatorics and at least W (weak) BIB is generalized. The designs obtained by this theory are better than the existing results under the same condition. The main goal of this study is to bridge these three fields: multibus system design, hypergraph, and BIB design</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005346.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>graph theory</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessor interconnection networks</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005347">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
        <support:year-of>1988</support:year-of>
        <support:has-pretty-name>1988</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Multiple stuck-at fault testability of self-testing checkers</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-54503a35419cb7f51e74e4ebba2b47dd-32452cd1fd387dd9c9362cd5fce94ffc">
        <akt:full-name>T. Nanya</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-23bb5cf9b14364d35ea3fdee7b9b5c08-32452cd1fd387dd9c9362cd5fce94ffc">
        <akt:full-name>S. Mourad</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-27c5c0d22315718305c64c1dc21c8ddc-32452cd1fd387dd9c9362cd5fce94ffc">
        <akt:full-name>E.J. McCluskey</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>As a feasibility study on offline testing of VLSI systems with concurrent error checking capability, the multiple fault testability is evaluated for self-testing checkers. New offline testing schema called codeword testing and noncodeword testing are introduced, in which all codewords and a small number of noncodewords are used as test inputs and the checker outputs are observed to decide if the circuit under test is faulty or not. It is proved that all the multiple stuck-at faults in tree-structured two-rail code checkers are detected with codeword testing followed by noncodeword testing. It is shown by simulation experiments that codeword testing can detect more than 99% of all possible double and triple faults in existing self-testing checkers for two-rail codes, Berger codes, and &lt;e1&gt;k&lt;/e1&gt;-out-of-2&lt;e1&gt;k&lt;/e1&gt; codes. The simulation experiments also show that all of the double and triple faults that elude the codeword testing are detected by noncodeword testing in which a small number of noncodewords are needed</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-275" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1988</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=275</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1988'>
            <support:year-of>1988</support:year-of>
            <support:has-pretty-name>1988</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/210/275/00005347.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>VLSI</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>automatic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error detection codes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>integrated circuit testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089335">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Polynomial time solvable fault detection problems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-414874fd118b1106e5a1229c37012904-02fd4c2c6631f3230ba903140037a2de">
        <akt:full-name>S.T. Chakradhar</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a1c4231af41fa4dffb690534786419ff-02fd4c2c6631f3230ba903140037a2de">
        <akt:full-name>V.D. Agrawal</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-221d5d1d3aa4ffcbe0a1f9e3aab5b4ca-02fd4c2c6631f3230ba903140037a2de">
        <akt:full-name>M.L. Bushnell</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A class of combinational circuits, called the (&lt;e1&gt;k&lt;/e1&gt;,&lt;e1&gt;K &lt;/e1&gt;)-circuits is presented, and a polynomial-time algorithm to detect any single or multiple stuckfault in such circuits is introduced. The ( &lt;e1&gt;k&lt;/e1&gt;,&lt;e1&gt;K&lt;/e1&gt;)-circuits are a generalization of H. Fujiwara's (1988) &lt;e1&gt;K&lt;/e1&gt;-bounded circuits. The fault detection problem is formulated as an energy minimization problem using the bidirectional neural net model proposed earlier. A minimizing point of the energy function corresponds to a test. A polynomial-time algorithm is presented here to solve the single and multiple fault-detection problem for the ( &lt;e1&gt;k&lt;/e1&gt;,&lt;e1&gt;K&lt;/e1&gt;)-circuits by recursively eliminating variables in the energy function</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089335.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>combinatorial circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault location</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>neural nets</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089336">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Three-valued neural networks for test generation</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b36466cca4ecc760d2ace0a9986c1388-086bc1feecab26cc9155c3ccf418b920">
        <akt:full-name>H. Fujiwara</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A three-valued (0, 1, and 1/2) neural network, which is an extension of the binary Hopfield model, is proposed, and it is shown that the test generation problem can be solved by the three-valued model more effectively than by the binary model. In the three-valued model, the energy function of networks, hyperplanes of neurons, and update rules of neuron states are extended so that the third value, 1/2, can be treated satisfactorily. It is proved that the proposed three-valued model always converges. To escape from local minima, an extension of Boltzmann machines, in which the update rules are modified by introducing probabilities of neuron states, is presented</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089336.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>neural nets</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>ternary logic</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089337">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>CATCH-compiler-assisted techniques for checkpointing</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6de31801328ab9258d1826913e1fa2f6-1e70814676cfb1ca808daba79bf10fd4">
        <akt:full-name>C.-C.J. Li</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3fcedb99619fa7ad2feaf5017679322c-1e70814676cfb1ca808daba79bf10fd4">
        <akt:full-name>W.K. Fuchs</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A compiler-based approach to generating efficient checkpoints for process recovery is described. The presented approach to checkpointing is programmer, operating system, and hardware transparent. Compile-time information is exploited to maintain the desired checkpoint interval and to reduce the size of checkpoints. Compiler-generated sparse potential checkpoint code is used to maintain the desired checkpoint interval. Adaptive checkpointing has been developed to reduce the size of checkpoints by exploiting potentially large variations in memory usage. A training technique is used in selecting the low-cost, high-coverage potential checkpoints. Since the potential checkpoint selection problem is NP-complete, a heuristic algorithm has been developed to obtain a quick suboptimal solution. These compiler-assisted checkpointing techniques have been implemented in a modified version of the GNU C (GCC) compiler version of 1.34. Experiments utilizing the CATCH GCC compiler on SUN workstations are described</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089337.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computational complexity</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software engineering</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089338">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Cache-aided rollback error recovery (CARER) algorithm for shared-memory multiprocessor systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1096ae78af7071cffe7a193e904c8a12-4cc98eb20a165336f4ba0e4bdc60e5fb">
        <akt:full-name>R.E. Ahmed</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7678ad6424af3363daee4d4fbe039241-4cc98eb20a165336f4ba0e4bdc60e5fb">
        <akt:full-name>R.C. Frazier</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-514fe26ea5db835aba9e79a8f3a58d2b-4cc98eb20a165336f4ba0e4bdc60e5fb">
        <akt:full-name>P.N. Marinos</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Three cache-aided error-recovery algorithms for use in shared-memory multiprocessor systems are presented. They rely on hardware and specially designed cache memory for all their soft error management operations and can be easily incorporated into existing cache-coherence protocols. An example illustrating their use in a multiprocessor system employing Dragon as its cache-coherence protocol is given, and the results of a tradeoff analysis are presented</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089338.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessing systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089339">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Cache management in a tightly coupled fault tolerant multiprocessor</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f56248dbada59e756b2fbe33e0769eae-ba7faddfa716e810b931abb1e0427292">
        <akt:full-name>M. Banatre</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2c0bbc480c9691c68067dcef7adeac66-ba7faddfa716e810b931abb1e0427292">
        <akt:full-name>P. Joubert</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Some aspects of a fault-tolerant tightly coupled multiprocessor architecture are presented. The originality of this architecture resides in the use of a stable transactional memory shared by all processors. To ensure fault tolerance, each update of a memory block is included into an atomic transaction managed by the stable transactional memory. All the blocks that are part of a transaction are written back atomically into stable transaction memory. This work focuses on a protocol which ensures the atomic update of blocks into stable transactional memory when they have been modified by several caches. The results of various simulations that were conducted in order to evaluate the potential performance of the proposed architecture are also presented</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089339.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>buffer storage</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>computer architecture</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessing systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089340">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Checkpointing and rollback-recovery in distributed object based systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4ed94a4071acbb68ecf781f761fea4fb-05829498e4f631f43d37f4dc7dcae612">
        <akt:full-name>L. Lin</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ae8c8c2d5078e340ab275649eb5b0d68-05829498e4f631f43d37f4dc7dcae612">
        <akt:full-name>M. Ahamad</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Checkpointing and rollback-recovery algorithms in distributed object-based systems are presented. By utilizing the structure of objects and operation invocations, the authors have derived efficient algorithms that involve fewer participants than when invocations are treated as messages and existing algorithms for message-based systems are used. It is planned to implement these algorithms and evaluate their performance in the context of the Clouds project at Georgia Tech</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089340.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>data structures</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>operating systems (computers)</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089341">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Design and analysis of test schemes for algorithm-based fault tolerance</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-bdde839f0c53f5eed8885fdc4614c77a-b5de2f4fa1e001892d98455312996839">
        <akt:full-name>D. Gu</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ef2a681bcb3131cb996ae0ff966151e4-b5de2f4fa1e001892d98455312996839">
        <akt:full-name>D.J. Rosenkrantz</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e657d3d3f612ebee7f22ca43d38a486e-b5de2f4fa1e001892d98455312996839">
        <akt:full-name>S.S. Ravil</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The design and analysis of test schemes for algorithm-based fault tolerance (ABFT) are examined. The problem is studied under the assumption that no bound is imposed on the size of a test. Upper and lower bounds are established on the number of tests needed to detect a given number of errors. These bounds are sharply different from those previously established under the bounded test size model. The test schemes presented are easy to implement. It is also shown that the design problem for fault detection is NP-hard even when only one fault needs to be detected. It is shown that the analysis problem is, in general, co-NP-complete and hence unlikely to be efficiently solvable. Several restricted versions of the problem that can be solved efficiently are identified. In addition, a new branch-and-bound algorithm for determining the error detectability of a system is presented</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089341.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computational complexity</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089343">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A fault-tolerant strategy for hierarchical control in distributed computing systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2be355ac4d22a6682a63b4c73de0802d-b3aed8bff7291227242ef13fa14ee563">
        <akt:full-name>P. Goyer</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-79e79c4729e5c0fdbcd9971da17d80cc-b3aed8bff7291227242ef13fa14ee563">
        <akt:full-name>P. Momtahan</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0c7b7baf1c623158f62cecc7dd0d6b75-b3aed8bff7291227242ef13fa14ee563">
        <akt:full-name>B. Selic</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors describe a practical method for realizing fault-tolerant global control of resources in distributed computing systems. The method is particularly suitable for systems that are based on a centralized arbiter for making control decisions. Many applications in LAN-based computing, online transactions, and telecommunication systems fall into this category. The method exploits the inherent physical separation of distributed computing systems to achieve high reliability in the face of decentralized arbiter failures. A significant feature of the method is that the fault-tolerance mechanisms are imbedded in the normal control signal flow so that the overhead is practically negligible in the absence of faults. The principles behind the method, its internal structure, and its operations are explained. Also, the experience gained through its application is discussed</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089343.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>hierarchical systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089345">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Static allocation of process replicas in fault tolerant computing systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a64a7829eb49723d0508ace64336ff2b-7a4176821577a27157e90412014d10dd">
        <akt:full-name>L.J.M. Neiuwenhuis</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>It is proved that there exist allocations that are optimal with respect to reliability. A simple transformation rule that derives an optimal allocation of replicated systems from an allocation of a given nonreplicated system is presented. This transformation preserves performance optimizing properties of the original allocation. Generally, replication gives a large number of processor links. A second transformation rule generates a replicated system with authenticated messages. The reliability of this system is also optimal, with, however, significantly fewer communication links</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089345.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089346">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A novel concurrent error detection scheme for FFT networks</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-299c571fc147db13b5cd1922b7b173c2-e4f4a58b38371212738d6f5ca51bfd84">
        <akt:full-name>D.L. Tao</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0353eb10ee7588e61e888796130ba65e-024d1a6cef86ed41b9dbbeeada6cc456">
        <akt:full-name>C.R.P. Hartmann</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-bb0603746235d8f7637cd0f023630895-024d1a6cef86ed41b9dbbeeada6cc456">
        <akt:full-name>Y.S. Chen</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A novel algorithm-based fault tolerance scheme is proposed for fast Fourier transform (FFT) networks. It is shown that the proposed scheme achieves 100% fault coverage theoretically. An accurate measure of the fault coverage for FFT networks is provided by taking the roundoff error into account. It is shown that the proposed scheme maintains the low hardware overhead and high throughput of J.Y. Jou and J.A. Abraham's scheme and, at the same time, increases the fault coverage significantly</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089346.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>error detection</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fast Fourier transforms</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>signal processing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089347">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A dependence graph-based approach to the design of algorithm-based fault tolerant systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-391a1fd1c1aafc7a28b7300a3276afeb-0b8416082105e9d9699f2f51937ee759">
        <akt:full-name>B. Vinnakota</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-73885f0e72beb9ed0735ce153bd80e1e-0b8416082105e9d9699f2f51937ee759">
        <akt:full-name>N.K. Jha</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A two-stage approach to the design of algorithm-based fault-tolerant (ABFT) systems is proposed. In the first stage a code is chosen to encode the data used in the algorithm. In the second stage the optimal architecture for implementing the scheme is chosen through the use of dependence graphs. Dependence graphs are a graph-theoretic form of algorithm representation. It is demonstrated that not all architectures are ideal for the implementation of a particular ABFT scheme. The authors propose new measures for characterizing the fault-tolerance capability of a system in order to better exploit the proposed design method. Dependence graphs can also be used for the synthesis of ABFT schemes for nonlinear problems. An example of a fault-tolerant median filter is provided to illustrate the usefulness of the dependence graph as a design tool for nonlinear system synthesis</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089347.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>control system CAD</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>graph theory</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089348">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Hierarchical design and analysis of fault-tolerant multiprocessor systems using concurrent error detection</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6db84cca89036370d18041320b37e415-7685ceebcf48d216406e12df325629d9">
        <akt:full-name>V.S.S. Nair</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a2844d70249531c6afca9a96023f8078-7685ceebcf48d216406e12df325629d9">
        <akt:full-name>J.A. Abraham</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A composition technique for building large fault-tolerant systems hierarchically using the concept of checks at different levels in the hierarchy is described. A small system of known fault detectability and locatability is replicated several times, and new checks are added at the next higher level. Such checks at different levels can be introduced into most of the existing multiprocessor systems. An analysis technique based on a matrix model is developed. Relationships between the fault detectability and locatability of a basic system are derived, and the corresponding values of the complete system are computed hierarchically. Finally, the techniques are extended to complex systems in which individual processors produce multiple sets of data elements</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089348.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>error detection</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessing systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089349">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Loss-tolerance for electronic wallets</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9803d4b325bf8a545cff949c448797d9-2b6f204cb4778f0ddaca3d87adb9499e">
        <akt:full-name>M. Waidner</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6f9b0d257366837b2b71be6db363ec17-2b6f204cb4778f0ddaca3d87adb9499e">
        <akt:full-name>B. Pfitzmann</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Assuming the existence of tamper-resistant devices with computational power and storage capacity similar to those of PCs and secure cryptosystems, the authors present loss tolerance schemes that leave the security, autonomy, and untraceability of the basic payment system that uses electronic wallets almost unchanged. These schemes are the distributed account list protocol and the marked standard value (MSV) protocol. The two schemes are compared. It is noted that more important than the problem of loss tolerance is that of constructing really secure temperature resistant devices</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089349.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>electronic trading</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>financial data processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>protocols</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>security of data</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089350">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A formalism for monitoring real-time constraints at run-time</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-16187c3f38af1efef4f42c838da73c8e-fd68de43c8390bac9fd449ae2eab7f07">
        <akt:full-name>F. Jahanian</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ba69a25f7989df316c886e253989db06-fd68de43c8390bac9fd449ae2eab7f07">
        <akt:full-name>A. Goyal</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A formalism is presented for specification and analysis of real-time constraints of systems at run time. Real-time logic (RTL) is employed to illustrate how timing properties can be specified elegantly in the form of annotation added to a program (or to a design specification). The algorithms for detecting a violation of a timing property at runtime, expressed in RTL, are presented</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089350.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>formal logic</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>formal specification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>real-time systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089351">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Impact of reconfiguration logic on the optimization of defect-tolerant integrated circuits</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3d9d1c0ff502a7ca1c6135358748b855-6c48bd0ebcd740b45ab6cf9d51cc2137">
        <akt:full-name>C. Thibeault</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-67b34afef9d49498a13d00115af83cbe-6c48bd0ebcd740b45ab6cf9d51cc2137">
        <akt:full-name>J.L. Houle</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Two aspects of the impact of reconfiguration logic on the optimization of defect-tolerant integrated circuits (ICs) are analyzed. An important consequence to design decisions of neglecting reconfiguration logic is presented. Expressions are developed to predict the number of transistors necessary to implement the reconfiguration logic of a simple defect-tolerance strategy using CMOS technology. The results show that neglecting this reconfiguration logic can lead to inappropriate design decisions. An example of a fine-grain logic array is presented to demonstrate the latter conclusion</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089351.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>CMOS integrated circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>circuit analysis computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic arrays</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089352">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault covers in reconfigurable PLAs</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-39cf76355159276cac566f1f8aa5609b-c1a16cd76faeebc3d0d413eba72c1b54">
        <akt:full-name>N. Hasan</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-337c1996b769619218a437e160b0af05-c1a16cd76faeebc3d0d413eba72c1b54">
        <akt:full-name>C.L. Liu</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Three kinds of faults are considered: stuck-at faults, bridging faults, and crosspoint faults. A new way of repairing bridging faults is introduced. It is shown that the problem of finding a minimum cover is NP-complete but that a special case of this problem can be formulated as a 2-SAT problem, which can be solved in polynomial time. The problem of finding a feasible cover for RPLAs (reconfigurable programmable logic arrays) with bridging faults alone is shown to be NP-complete. A necessary and sufficient condition on the number of spares for the existence of a feasible cover and an algorithm for finding a minimum feasible cover are presented</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089352.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computational complexity</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic arrays</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089353">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Availability evaluation of MIN-connected multiprocessors using decomposition technique</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-70c1f1d5f3a31453e975fe15c2c7c98d-d9ad481ff667ea66b88359e2ad6bd5f4">
        <akt:full-name>C.R. Das</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-bede4e5c53dfaa201058daaa6a8a69d9-d9ad481ff667ea66b88359e2ad6bd5f4">
        <akt:full-name>L. Tien</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-54ef862bad82f5bd57844d784d6c481a-d9ad481ff667ea66b88359e2ad6bd5f4">
        <akt:full-name>L.N. Bhuyan</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>An analytical technique for the availability evaluation of multiprocessors using a multistage interconnection network (MIN) is presented. The MIN represents a Butterfly-type connection with a 4x4-switching element (SE). The novelty of this approach is that the complexity of constructing a single-level exact Markov chain (MC) is not required. By use of structural decomposition, the system is divided into three subsystems-processors, memories, and MIN. Two simple MCs are solved by using a software package, called HARP, to find the probability of &lt;e1&gt;i&lt;/e1&gt; working processing elements (PEs) and &lt;e1&gt;j&lt;/e1&gt; working memory modules (MMs) at time &lt;e1&gt;t&lt;/e1&gt;. A second level of decomposition is then used to find the approximate number of SEs (&lt;e1&gt;x&lt;/e1&gt;) required for connecting the &lt;e1&gt;i&lt;/e1&gt; PEs and &lt;e1&gt;j&lt;/e1&gt; MMs. A third MC is then solved to find the probability that the MIN will provide the necessary communication. The model has been validated through simulation for up to a 256-node configuration, the maximum size available for a commercial MIN-connected multiprocessor</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089353.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessing systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessor interconnection networks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089354">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Estimates of MTTF and optimal number of spares of fault-tolerant processor arrays</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-18794f2fb0cce86d0903639400460329-54588c2ee43f20fd27c2370af65124f2">
        <akt:full-name>Y.X. Wang</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e64652fd84cc2d67b08e5d547b0d19bf-54588c2ee43f20fd27c2370af65124f2">
        <akt:full-name>J.A.B. Fortes</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Reliability and mean-time-to-failure (MTTF) models of different fault-tolerant processor arrays (FTPAs) are introduced. On the basis of these models, approaches which allow for the analytical estimate of the necessary number of spares (NNS) and the optimal number of spares (ONS) are proposed. Knowledge of the NNS is suited to FTPAs where nonredundant hardware (hardware for which no redundancy is provided) is considered nearly fault free. Knowledge of the ONS is useful when faults can affect the nonredundant hardware, because in this case overall array reliability may actually decrease when the number of spares increases beyond some value. The quick estimates provided here can be used to help designers in the early design phases of an FTPA</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089354.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089361">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault-tolerance in the Advanced Automation System</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-07824e4560cf42e260dc3aa850485bde-6518924c50f63ce881fdf817a55a127d">
        <akt:full-name>F. Cristian</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fd1f01665d17ec1844da4bb55dec871a-c0e05e11bc5e8be0bde4a1cd36e01c4c">
        <akt:full-name>B. Dancey</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7bb24e09cb177a97675bb423c041938f-c0e05e11bc5e8be0bde4a1cd36e01c4c">
        <akt:full-name>J. Dehn</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The Advanced Automation System (AAS), a distributed real-time system intended to replace the present en-route and terminal approach US air traffic control computer systems over the next decade, is discussed. High availability of air traffic control services is an essential requirement of the system. The authors discuss the general approach to fault tolerance adopted in the AAS by reviewing some of the questions asked during the system design, various alternative solutions considered, and the reasons for the design choices made</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089361.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>air traffic computer control</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>real-time systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089362">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Anomaly detection for diagnosis</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-04ad25481b9b99c11907d21d20ec14b1-79070445fb7b9b8c78024c2a95ce5d43">
        <akt:full-name>R.A. Maxion</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The author presents a method for detecting anomalous events in communication networks and other similarly characterized environments in which performance anomalies are indicative of failure. The methodology, based on automatically learning the difference between normal and abnormal behavior, has been implemented as part of an automated diagnosis system from which performance results are drawn and presented. The dynamic nature of the model enables a diagnostic system to deal with continuously changing environments without explicit control, reaching to the way the world is now, as opposed to the way the world was planned to be. Results of successful deployment in a noisy, real-time monitoring environment are shown</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089362.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>real-time systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>telecommunication networks</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089363">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A software fault tolerance experiment for space applications</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d346d33887994c55612ff8d93cfbd9fa-f28f5e0bcd3cf63add1ef99b30cc3f88">
        <akt:full-name>D. Simon</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a9f65ad1b9b790e199a0686d740ccaf6-f28f5e0bcd3cf63add1ef99b30cc3f88">
        <akt:full-name>C. Hourtolle</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6110b3e07a49c64b02684176e3fec2b7-f28f5e0bcd3cf63add1ef99b30cc3f88">
        <akt:full-name>H. Biondi</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-80503227e6c2ff25b55a7c6f87ff122a-f28f5e0bcd3cf63add1ef99b30cc3f88">
        <akt:full-name>J. Bernelas</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9833069aea7afc2f3cc117dc05bd0061-f28f5e0bcd3cf63add1ef99b30cc3f88">
        <akt:full-name>P. Duverneuil</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0e043f362a892a81dde1b0ce672ef414-f28f5e0bcd3cf63add1ef99b30cc3f88">
        <akt:full-name>S. Gallet</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a7702b3b7e5aa1b2b2225062192092cc-f28f5e0bcd3cf63add1ef99b30cc3f88">
        <akt:full-name>P. Vielcanet</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9527a0c7c2b2e20b3758fd9534c5533b-f28f5e0bcd3cf63add1ef99b30cc3f88">
        <akt:full-name>S. De Viguerie</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b13c3734987480538ab028a1a08d57e8-f28f5e0bcd3cf63add1ef99b30cc3f88">
        <akt:full-name>F. Gsell</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b393de49c5e6fb962b4a128d3da190bf-f28f5e0bcd3cf63add1ef99b30cc3f88">
        <akt:full-name>J.N. Chelotti</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The aim of the experiment described was to implement and assess fault-tolerant software within an industrial framework. Another significant aspect was to adapt the classical software engineering life cycle to this type of project. Two complementary techniques are considered: fault avoidance through the use of higher level language and strict development process; and fault tolerance by using techniques based on design diversity, such as &lt;e1&gt;N&lt;/e1&gt;-version programming and recovery blocks, and exception handling. Starting from the specification of an existing spacecraft orbit and attitude control system, a 3-version software was developed, coded in Ada, and assessed in a fault-tolerant experimental testbed. The authors describe the experiment development and the main study results (on development efforts, observed diversity, and methodology aspects)</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089363.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>aerospace computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software engineering</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089364">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>An experience of a critical software development</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-561efa4c5216fd73a3ec235c1c0c9281-9bb81fffb977fbbdb67fb97c4a97700e">
        <akt:full-name>C. Sayet</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-84a0f4c8f84d6fe6f1dc262388f7dbf9-9bb81fffb977fbbdb67fb97c4a97700e">
        <akt:full-name>E. Pilaud</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Some data about the design and validation of a safety critical software, the ESIN application software, are presented. The ESIN application software is integrated within an instrumentation system designed for experimental nuclear reactors. Its main function is to generate the emergency shutdown of the reactor. The development of this software has been based on a fault-avoidance approach: use of a strict life cycle, existence of an independent verification and validation team, and application of rules of design and programming. The data presented here concern the location of faults in the life cycle and in subsystems; a classification of faults in each step is provided. These data are also correlated with the effort spent on verification/qualification</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089364.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>nuclear engineering computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software engineering</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089365">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Identifying the cause of detected errors</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d59e4b9ba5c1c3486a721a84baf778ee-a2574d24be4a14c5bc2ca3226ecfd783">
        <akt:full-name>C.J. Walter</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The author presents an approach to the consistent diagnosis of error monitoring observations in a distributed fault-tolerant computing system, even when the faulty source produces arbitrary errors. He describes the online algorithm used in the multicomputer architecture for fault tolerance (MAFT) to diagnose faulty system elements. By the use of syndrome information which categorizes detected errors as either symmetric or asymmetric, bounds for correct diagnosis can be deduced. Finally, an interactive consistency algorithm is employed to guarantee consistent diagnosis in a distributed environment and to provide online verification of all diagnostic units</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089365.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer architecture</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089366">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>An analysis of a reconfigurable binary tree architecture based on multiple-level redundancy</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-78aac29ca084bc162092ccae9103dd53-43003465fb724ce16bb4c9c9266960f2">
        <akt:full-name>Y.-Y. Chen</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5c6520a599292162a2eb5505425c76f0-43003465fb724ce16bb4c9c9266960f2">
        <akt:full-name>S.J. Upadhyaya</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The analysis of a multiple-level redundant tree (MLRT) structure is presented for the design of a reconfigurable tree architecture. The MLRT scheme tolerates the catastrophic failure of several locally redundant modules in the corresponding locally redundant modular tree (LRMT) structure. This analysis and experimental study establishes the advantages of the MLRT structure over the LRMT structure. The switch failures are taken into account for an accurate analysis of the reliability. A new measure, called the marginal-switch-to-processing-element-area ratio (MSR), is introduced to characterize the effect of switch complexity on the reliability of the redundant system. It can be used as an evaluation criterion in the design of practical fault-tolerant multiprocessor architectures. A technique for obtaining the best spare distribution in the MLRT structure is presented</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089366.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer architecture</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessing systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089367">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault-intolerance of reconfigurable systolic arrays</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8c21df1efddfd2e35c59506f1d7dbd71-cd598db4121e1264040434ea9b1caf19">
        <akt:full-name>A. Nayak</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-25ce69ed1bdcee4270767db2530ba580-cd598db4121e1264040434ea9b1caf19">
        <akt:full-name>N. Santoro</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3e431c510ee5b1c1d29b44ce3485eb9f-cd598db4121e1264040434ea9b1caf19">
        <akt:full-name>R. Tan</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Identification, characterization, and construction of fault patterns that are catastrophic for linear systolic arrays are discussed. It is shown that for a given link configuration in the array, it is possible to identify all PE (processing element) catastrophic fault patterns. The requirement on the minimum number of faults in a fault pattern and its spectrum (spread out) for it to be catastrophic is shown to be a function of the length of the longest bypass link available, and not of the total number of bypass links. The paper also gives bounds on the width of a catastrophic fault spectrum</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089367.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>systolic arrays</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089368">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Strategies for reconfiguring hypercubes under faults</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-15ab40e94d313fe83ebe8bb9fd7b9620-b6d7751eca4f643acedf6c7328030174">
        <akt:full-name>P. Banerjee</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The design of two reconfiguration strategies for hypercube multicomputer architectures under failures is discussed. The first scheme uses spare processors attached to certain processors in the hypercube by means of a novel embedding technique. The second approach places spare processors between specific links in the hypercube. Both schemes involve the mapping of logical links of a virtual hypercube onto a set of physical links in the final reconfigured hypercube and hence suffer some performance degradation</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089368.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer architecture</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessing systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089369">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Distributed algorithms for shortest-path, deadlock-free routing and broadcasting in arbitrarily faulty hypercubes</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9884e7d3cef74c2614ea46a923bfcfbd-f364c4a7a3de3591e08829489d8f5e77">
        <akt:full-name>M. Peercy</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-37fa5881bead9f26c4f49dd416f07d79-f364c4a7a3de3591e08829489d8f5e77">
        <akt:full-name>P. Banerjee</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors present a distributed table-filling algorithm for point-to-point routing in a degraded hypercube system. This algorithm finds the shortest length existing path from each source to each destination in the faulty hypercube and fills the routing tables so that messages are routed along these paths. A novel scheme for broadcast routing with tables is proposed, and the algorithm required to fill the broadcast tables, given the point-to-point routing tables, is presented. In addition, the modifications necessary to make these algorithms ensure deadlock-free routing are given. A quantitative and equalitative comparison of previously proposed reroute strategies with table routing, where the tables are filled by the authors' algorithms, are presented</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089369.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>hypercube networks</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089370">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Limits to the fault-tolerance of a feedforward neural network with learning</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-92b54427044ab08f29e91044de503179-d14eb9d5efda73c5568bc7f8e510c0f9">
        <akt:full-name>J. Nijhuis</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fc416b2b5661904bd259e033f46b5337-d14eb9d5efda73c5568bc7f8e510c0f9">
        <akt:full-name>B. Hofflinger</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-009e4afab486055a0be257d9346222d7-d14eb9d5efda73c5568bc7f8e510c0f9">
        <akt:full-name>A. van Schaik</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-18e9ec02a94e702609c0ef8b7f85c2a2-d14eb9d5efda73c5568bc7f8e510c0f9">
        <akt:full-name>L. Spaanenburg</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Input data and hardware fault tolerance of neural networks are discussed. It is shown that fault-tolerant behavior is not self-evident but must be activated by an appropriate learning scheme. Practical limitations are demonstrated by an example of neural character recognition. The results show that the effects of learning and synapse weight decay on fault tolerance largely influence the practicality of large-scale silicon implementations. It is anticipated that, owing to implementation issues, such as the use of volatile memories, some neural VLSI architectures will not be sufficiently fault tolerant</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089370.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computerised pattern recognition</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>neural nets</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089371">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Effects of transient gate-level faults on program behavior</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-224033bfb555a7bf47b5636f608b24d1-71cca6da87aa4bb655574715efda55cb">
        <akt:full-name>E.W. Czeck</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-97a44c315ec79ba478d4a8d9de226e97-71cca6da87aa4bb655574715efda55cb">
        <akt:full-name>D.P. Siewiorek</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Effects of gate-level faults on program behavior are described and used as a basis for fault models at the program level. A simulation model of the IBM RT PC was developed and injected with 18900 gate-level transient faults. A comparison of the system state of good and faulted runs was made to observe internal propagation of errors, while memory traffic and program flow comparisons detected errors in program behavior. Results show several distinct classes of program-level error behavior, including program flow changes, incorrect memory bus traffic, and undetected but corrupted program state. Additionally, the dependencies of fault location, injection time, and workload on error detection coverage are reported. For the IBM RT PC, the error detection latency was shown to follow a Weibull distribution dependent on the error detection mechanism and the two selected workloads. These results aid in the understanding of the effects of gate-level faults and allow for the generation and validation of new fault models, fault injection methods, and error detection mechanisms</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089371.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program verification</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089372">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Failure analysis and modeling of a VAXcluster system</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-07ce46e8db392c711e4f2c28558f0c73-adeb3c95949ee0944077e06e6970f399">
        <akt:full-name>D. Tang</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6122ee67de7692816e4883ba5ebf39cb-adeb3c95949ee0944077e06e6970f399">
        <akt:full-name>R.K. Iyer</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1bb92b902b133c2a72b74f4c43925c6e-adeb3c95949ee0944077e06e6970f399">
        <akt:full-name>S.S. Subramani</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors discuss the results of a measurement-based analysis of real error data collected from a DEC VAXcluster multicomputer system. In addition to evaluating basic system dependability characteristics, such as error and failure distributions and hazard rates for both individual machines and the VAXcluster, they develop reward models to analyze the impact of failures on the system as a whole. The results show that more than 46% of all failures were due to errors in shared resources. This is despite the fact that these errors have a recovery probability greater than 0.99. The hazard rate calculations show that not only errors but also failures occur in bursts. Approximately 40% of all failures occur in bursts and involve multiple machines. This result indicates that correlated failures are significant. Analysis of rewards shows that software errors have the lowest reward (0.05 versus 0.74 for disk errors). The expected reward rate (reliability measure) of the VAXcluster drops to 0.5 in 18 hours for the 7-out-of-7 model and in 80 days for the 3-out-of-7 model. The VAXcluster system availability is evaluated to be 0.993 250 days of operation</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089372.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>DEC computers</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089373">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Zero aliasing compression</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e65f49e31c62777344239eee74d1abe9-17eaed43852c66a273119d0408c04486">
        <akt:full-name>S.K. Gupta</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5bc69abf889ca3bfcbcbc3d5bc8eb9b9-17eaed43852c66a273119d0408c04486">
        <akt:full-name>D.K. Pradhan</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-965dc2d124659a370908152afc40e8f5-17eaed43852c66a273119d0408c04486">
        <akt:full-name>S.M. Reddy</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A compression technique, called periodic quotient compression, which eliminates the problem of aliasing is presented. The compression in signature analysis is based on polynomial division, where the remainder is the signature and the quotient is discarded. With this technique one looks at both the remainder and the quotient and assumes that the good circuit response is known a-priory during the design of the linear feedback shift register (LFSR). The concept of periodic polynomials is used to completely characterize the quotient, thus eliminating aliasing. The maximum number of bits required to compress an &lt;e1&gt;N&lt;/e1&gt;-b response to achieve zero aliasing is determined. The authors provide an algorithm for constructing an LFSR to achieve this bound for any given circuit under test</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089373.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>built-in self test</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>data compression</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>feedback</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>polynomials</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>shift registers</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089374">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Signature analysers based on additive cellular automata</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b59c3ba9da3cf198c9a530d804619603-4b24f3aaea5aa0a4813d37da3411036d">
        <akt:full-name>A.K. Das</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ac7761a5131fa500645b87597674b354-4b24f3aaea5aa0a4813d37da3411036d">
        <akt:full-name>D. Saha</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-63dc2c9747bf6a4ac00dd9ab42fbb719-4b24f3aaea5aa0a4813d37da3411036d">
        <akt:full-name>A.R. Chowdhury</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e52bc2312d818b6c8942371dfb3fc25d-4b24f3aaea5aa0a4813d37da3411036d">
        <akt:full-name>S. Misra</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a7ce914745af0899e9702592dac36030-4b24f3aaea5aa0a4813d37da3411036d">
        <akt:full-name>P.P. Chaudhuri</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A novel scheme for signature analysis based on cellular automata (CA) is proposed. The state transition behavior of such signature analyzers has been modeled by Markov chain. It has been shown that a special class of such CAs achieves a steady-state aliasing probability lower than 1/2n (for an &lt;e1&gt;n&lt;/e1&gt;-cell CA) for specific ranges of input probabilities of the incoming error pattern. The dynamic behavior of linear feedback shift registers (LFSRs) has also been compared with CAs with the same characteristic polynomials. This work establishes the fact that CA-based signature analyzers outperform those based on LFSRs as regards both steady-state and dynamic behavior</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089374.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>Markov processes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>finite automata</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic analysers</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089375">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Burst asymmetric/unidirectional error correcting/detecting codes</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2067a91cce2e405abb256f8c900892fd-d2b8a778034854d9ea41a1508cf308a5">
        <akt:full-name>S. Park</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a0392234f049693b1fedb025d91a345a-d2b8a778034854d9ea41a1508cf308a5">
        <akt:full-name>B. Bose</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Codes capable of correcting burst asymmetric and unidirectional errors are described. The proposed codes need approximately &lt;e1&gt;b&lt;/e1&gt;+log2&lt;e1&gt;k&lt;/e1&gt; check bits to correct a burst of &lt;e1&gt;b&lt;/e1&gt; asymmetric/unidirectional errors, where &lt;e1&gt;k&lt;/e1&gt; is the number of information bits. In most cases, the proposed codes require fewer check bits than the equivalent burst symmetric error-correcting codes. The optimality of the codes is also considered. In addition, efficient codes capable of detecting double burst unidirectional errors are given</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089375.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>error correction codes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error detection codes</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089376">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A highly decentralized implementation model for the programmer-transparent coordination (PTC) scheme for cooperative recovery</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ba54f681feee6c63e518acf8351aa8dc-1eb3419594ea99550ceaa36c85292d4c">
        <akt:full-name>K.H. Kim</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f0df1a9bb7325abc070458b3fcf78d50-1eb3419594ea99550ceaa36c85292d4c">
        <akt:full-name>J.H. You</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors present an implementation model for the programmer-transparent coordination (PTC) scheme that fits well with local-area-network-(LAN-) based systems equipped with broadcasting channels. The model is a significant improvement over the earlier formulated implementation guidelines for developing LAN-based fault-tolerant distributed computer systems (DCSs). The model uses a highly decentralized broadcasting-based approach to the execution of PTC functions. The result is a significant reduction in the PTC-related message traffic, and the extent of reduction could be drastic in many application environments. Another major element of the model is a three-layer software structure in which distributed cooperating application processes and PTC-related operating system components are incorporated in modular forms amenable to cost-effective concurrent processing</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089376.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089377">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Specification and proof of a distributed recovery algorithm</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2eaab4c7a7fd41ec042b94c5d0d05af5-b756fd17e7193b2d03c7f31d80af7b7c">
        <akt:full-name>X. Ye</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1ceabe5907e6fc58c99f4af73994bacf-b756fd17e7193b2d03c7f31d80af7b7c">
        <akt:full-name>B.C. Warboys</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-763781ad783e0747b5033040a8afc227-b756fd17e7193b2d03c7f31d80af7b7c">
        <akt:full-name>J.A. Keane</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Graph reduction, a computational model which supports the parallel execution of functional languages, is discussed. An MIMD (multiple instruction/multiple data) machine, Flagship, which supports the graph reduction model has been built. The authors investigate the formal specification and proof of an algorithm which can ensure the successful execution of a functional program in the presence of the failure of a processing element (PE) of the Flagship machine. The specifications of the algorithm, the graph reduction model, and the augmented graph reduction model, which can tolerate the failure of a PE, are described using CSP (communicating sequential processes) notation. The algebraic transformation rules of CSP are used to prove that, in the presence of PE failure, the fault-tolerant graph reduction model behaves correctly</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089377.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>formal specification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel machines</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089378">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Reliable diagnosis and repair in constant-degree multiprocessor systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f1258a7fd8201ab0be5875475ae9c67b-854f22fc8bc61833184a79af4350c9d8">
        <akt:full-name>D.M. Blough</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7f586971c0f37d7e87085d8b2364b014-854f22fc8bc61833184a79af4350c9d8">
        <akt:full-name>A. Pelc</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The problem of diagnosis and repair has been studied under a probabilistic fault model that allows permanent or intermittent faults and perfect or imperfect spares. For all of these fault scenarios, it has been shown that correct diagnosis and repair can be achieved with high probability in a large class of constant-degree systems, including rings, grids, meshes, and tori. The total number of tests that must be conducted in the worst case in order to accomplish this diagnosis was shown to increase from &lt;e1&gt;O&lt;/e1&gt;(&lt;e1&gt;n&lt;/e1&gt;) in the case in which faults are permanent and spares are perfect to &lt;e1&gt;O&lt;/e1&gt;(&lt;e1&gt;n&lt;/e1&gt; log 2&lt;e1&gt;n&lt;/e1&gt;) when faults are intermittent and spares are imperfect</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089378.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessing systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089379">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Optimal multiple syndrome probabilistic diagnosis</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-71abfbeda53a9a2838d5264b37b9a9ae-c15ab23f22b3c087b1359b19819ac6e2">
        <akt:full-name>S. Lee</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ff65b4e76f5bf2fa288499e7437d3daa-c15ab23f22b3c087b1359b19819ac6e2">
        <akt:full-name>K.G. Shin</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors discuss the distributed self-diagnosis of a multiprocessor/multicomputer system based on interprocessor tests with imperfect fault coverage (thus also permitting intermittently fault processors). It is shown that by using multiple fault syndromes, it is possible to achieve significantly better diagnosis than by using a single fault syndrome, even when the amount of time devoted to testing is the same. The authors derive a multiple syndrome diagnosis algorithm that is optimal in the level of diagnostic accuracy achieved (among diagnosis algorithms of a certain type to be defined) and produces good results even with sparse interconnection networks and interprocessor test with low fault coverage. Furthermore, they prove upper and lower bounds are proved on the number of fault syndromes required to produce asymptotically a 100% correct diagnostic as &lt;e1&gt;N&lt;/e1&gt;→∞. Their solution and another multiple syndrome diagnosis solution by D. Fussell and S. Rangarajan are evaluated both analytically and with simulations</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089379.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessing systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089380">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Practical application and implementation of distributed system-level diagnosis theory</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-cf75fed24c40e01a4fb29011569680be-124264a4c0fd8905d3c8b7728c2b7f56">
        <akt:full-name>Jr. Bianchini, R.</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-eb80582ec3d5b7887db5b647f2e08159-124264a4c0fd8905d3c8b7728c2b7f56">
        <akt:full-name>K. Goodwin</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8d24c8f5b662824c343432424534bbdc-124264a4c0fd8905d3c8b7728c2b7f56">
        <akt:full-name>D.S. Nydick</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A DSD (distributed self-diagnosing) project that consists of the implementation of a distributed self-diagnosis algorithm and its application to distributed computer networks is presented. The EVENT-SELF algorithm presented combines the rigor associated with theoretical results with the resource limitations associated with actual systems. Resource limitations identified in real systems include available message capacity for the communication network and limited processor execution speed. The EVENT-SELF algorithm differs from previously published algorithms by adopting an event-driven approach to self-diagnosability. Algorithm messages are reduced to those messages required to indicate changes in system those messages required to indicate changes in system state. Practical issues regarding the CMU-ECE DSD implementation are considered. These issues include the reconfiguration of the testing subnetwork for environments in which processors can be added and removed. One of the goals of this work is to utilize the developed CMU-ECE DSD system as an experimental test-bed environment for distributed applications</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089380.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089381">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Design of microprocessors with built-in on-line test</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-19880b0321b405429cf25d1030d0de8a-3a4eaecfa0c8ffd291cdc48c34bc05df">
        <akt:full-name>R. Leveugle</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a34132cdf0c2cf1ff37966e82de3ec17-3a4eaecfa0c8ffd291cdc48c34bc05df">
        <akt:full-name>T. Michel</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7f2adbf49afde26b53f35dbf1e6b7292-3a4eaecfa0c8ffd291cdc48c34bc05df">
        <akt:full-name>G. Saucier</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Control flow checking techniques are discussed. Invariant properties of the control flow can be checked at two different levels: verification of the sequencing in the controller of the microprocessor or verification of the control flow in the application program. Control flow checking has been implemented, at the two levels, in different versions of a 32-b microprocessor designed in a CMOS 1.5-μ technology. Integration of the monitors on silicon is detailed. The silicon overhead due to the different online test devices is precisely discussed. Different versions of this microprocessor have been designed and implemented in order to make real cost comparisons on components with identical functionality but different integrated monitors. Here only the hardware cost of concurrent checking is considered</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089381.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>CMOS integrated circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>built-in self test</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>microprocessor chips</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089382">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The minimal test set for sorting networks and the use of sorting networks in self-testing checkers for unordered codes</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0cab56ca547cf2f1327950d78c0c1c45-ee07323479599ea727ce2404edbd6e52">
        <akt:full-name>S.J. Piestrak</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>It is shown that an &lt;e1&gt;n&lt;/e1&gt;-input sorting network (SN) can be used to implement all &lt;e1&gt;n&lt;/e1&gt;-variable symmetric threshold functions, using the least amount of hardware. A procedure of generating the minimal test set for K.E. Batcher's SNs is presented. An upper bound is determined for the number of tests required to detect all stuck-at faults in an &lt;e1&gt;n&lt;/e1&gt;-input SN; it is fewer than in similar designs used to date. Finally, it is shown that the SNs can be used to realize easily testable self-testing checkers (STCs) for &lt;e1&gt;m&lt;/e1&gt;-out-of-2&lt;e1&gt;m&lt;/e1&gt; codes and all J.M. Berger codes. The new STCs for &lt;e1&gt;m&lt;/e1&gt;/2&lt;e1&gt;m&lt;/e1&gt; codes (&lt;e1&gt;m&lt;/e1&gt;&gt;3) have the lowest gate count and require the fewest number of tests. Upper bounds are also found for the number of tests required by the new STCs for Berger codes with &lt;e1&gt;I&lt;/e1&gt; information bits. For &lt;e1&gt;I&lt;/e1&gt;≥14 they require fewer gates than similar designs known to date</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089382.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>automatic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>codes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089383">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Distributed probabilistic fault diagnosis for multiprocessor systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-08ac467fe60b855bb04644ed4a74d6be-ae219dd0d3ae88479b0e1eaea6ddcc13">
        <akt:full-name>P. Berman</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7f586971c0f37d7e87085d8b2364b014-ae219dd0d3ae88479b0e1eaea6ddcc13">
        <akt:full-name>A. Pelc</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A class of &lt;e1&gt;n&lt;/e1&gt;-unit multiprocessor systems with &lt;e1&gt;O&lt;/e1&gt;( &lt;e1&gt;n&lt;/e1&gt; log &lt;e1&gt;n&lt;/e1&gt;) interconnecting links is constructed, and a distributed probabilistic fault diagnosis algorithm whose probability of correctness converges to 1 as &lt;e1&gt;n&lt;/e1&gt;→∞ is proposed. For small probability of unit failure, a distributed diagnosis whose probability also converges to 1 as the size of the system grows is proposed for the hypercube. On the other hand, it is proved that if a class of systems has fewer than &lt;e1&gt;kn&lt;/e1&gt; log &lt;e1&gt;n&lt;/e1&gt; links for a small constant &lt;e1&gt;k&lt;/e1&gt;, the probability of correctness of every fault diagnosis converges to 0 as &lt;e1&gt;n&lt;/e1&gt;→∞. By combining the probabilistic and the distributed approach the authors' model of fault diagnosis removes the major drawbacks of the PMC (Preparata-Metze-Chien) model: the assumption of tests with complete fault coverage and the assumption of a fault-free central monitoring unit capable of performing diagnosis</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089383.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessing systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089384">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Tolerating transient faults in MARS</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9fb7034cdd709632a2d606810fba119f-be9caca72838f6da264f852e4f1bdbf7">
        <akt:full-name>H. Kopetz</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-272b9848e4dd921876f6914d80131aef-be9caca72838f6da264f852e4f1bdbf7">
        <akt:full-name>H. Kantz</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e858c1f3bb5b46cabe89039cef91a07d-be9caca72838f6da264f852e4f1bdbf7">
        <akt:full-name>G. Grunsteidl</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7ad4c406a7c34673a2884ef44fea05c2-be9caca72838f6da264f852e4f1bdbf7">
        <akt:full-name>P. Puschner</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e5d6709a23d97d5e04592326a8741dd1-be9caca72838f6da264f852e4f1bdbf7">
        <akt:full-name>J. Reisinger</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The concepts of transient fault handling in the MARS architecture are discussed. After an overview of the MARS architecture, the mechanisms for the detection of transient faults are discussed in detail. In addition to extensive checks in the hardware and in the operating system, time-redundant execution of application tasks is proposed for the detection of transient faults. The time difference between the effective and the maximum execution time of an application task is used for this purpose. Whenever a transient fault has been detected, the affected component is turned off and reintegrated immediately by retrieving the uncorrupted state of the actively redundant partner component. In order to reduce the probability of spare exhaustion (in the case of permanent faults) `shadow components' are introduced. The reliability improvement, which can be realized by these techniques, is calculated by detailed reliability models of the architecture, where the parameters are based on experimental results measured on the present MARS prototype implementation</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089384.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer architecture</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>transient response</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089385">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The error-resistant interactively consistent architecture (ERICA)</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6ecef72a17c84dea53c73794ee50f478-1696c39a6db22ad81a0566a06446f9de">
        <akt:full-name>C.-J.L. van Driel</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7e9ef537196895b1a2df8f33498a4df4-1696c39a6db22ad81a0566a06446f9de">
        <akt:full-name>R.J.B. Follon</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-65926555e4f8fe55a6e5fb86e85ca84c-1696c39a6db22ad81a0566a06446f9de">
        <akt:full-name>A.A.C. Kohler</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8e975e8f895d5d7d1a7cc46f2115b64a-1696c39a6db22ad81a0566a06446f9de">
        <akt:full-name>R.P.M. van Osch</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-12f6be02c265c7aa59e483a63846bc9b-1696c39a6db22ad81a0566a06446f9de">
        <akt:full-name>J.M. Spanjers</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors present an analysis of modularly redundant computer systems and various theoretical, as well as implementation, aspects of a highly reliable computer system with a relatively small amount of redundant hardware. From the evaluation of modularly redundant systems it is concluded that the (4, 2)-concept computer system compares favorably with a triple modular redundant and doubled system, with respect to cost, as well as to reliability. In order to cope with the Byzantine Generals problem, a hardware implementation of the algorithm is presented. The (4, 2)-concept is used in the Philips business communication switch SOPHO S-2500 and in a broadband switch (the Philips H1-switch). The prototype computer system presented can be used as a controller (e.g. in a telephone switching system), as a computer system for online transaction processing, or as a general-purpose computer</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089385.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089386">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The Delta-4 extra performance architecture (XPA)</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-117189b4b7ef8f405dbf06596e1edb47-a3fd548e4d1fd02b34ecbdb1b85455f8">
        <akt:full-name>P.A. Barret</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-864476ad94b16f171d82c56713399ca7-a3fd548e4d1fd02b34ecbdb1b85455f8">
        <akt:full-name>A.M. Hilborne</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-910b2a639f04231096ab288490abdddc-a3fd548e4d1fd02b34ecbdb1b85455f8">
        <akt:full-name>P.G. Bond</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-81a93aa63eee399023317155665694de-a3fd548e4d1fd02b34ecbdb1b85455f8">
        <akt:full-name>D.T. Seaton</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b51d8091f5eba400faba77c8520cc157-a3fd548e4d1fd02b34ecbdb1b85455f8">
        <akt:full-name>P. Verissimo</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-431e6f4ba0fc9ca66561a3c0dd5e9d24-a3fd548e4d1fd02b34ecbdb1b85455f8">
        <akt:full-name>L. Rodrigues</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-007c4e0413315f1783a749ca3076b4e3-a3fd548e4d1fd02b34ecbdb1b85455f8">
        <akt:full-name>N.A. Speirs</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The design of an extra performance architecture for Delta-4, which explicitly supports the requirements of real-time systems with respect to throughput and response, is presented. The Delta-4 approach to fault tolerance is based on the replication of software components on distinct host computers using a range of different replication strategies. The problems of replicate divergence are discussed, and a solution based on message selection and preemption synchronization messages is proposed. A description of the ongoing implementation of such a system within the overall Delta-4 framework is included</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089386.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer architecture</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>real-time systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089387">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fast simulation of dependability models with general failure, repair and maintenance processes</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a3ef6a802909479f76c7c70800005683-e6989c2d260cb63aa18507bdd798d338">
        <akt:full-name>V.F. Nicola</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d8787e4c921684b2c658faba48ff993b-4c123e97f533bd084403551e516eadcc">
        <akt:full-name>M.K. Nakayama</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c18b991d80909f5af2c994ff570572d5-e6989c2d260cb63aa18507bdd798d338">
        <akt:full-name>P. Heidelberger</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ba69a25f7989df316c886e253989db06-4c123e97f533bd084403551e516eadcc">
        <akt:full-name>A. Goyal</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>An approach to simulating models of highly dependable systems with general failure and repair time distributions is described. The approach combines importance sampling with event rescheduling in order to obtain variance reduction in such rare event simulations. The approach is general in nature and allows effective simulation of a variety of features commonly arising in dependability modeling. For example, it is shown how the technique can be applied to systems with periodic maintenance. The effects on the steady-state availability of the maintenance period and of different failure time distributions are explored. Some of the trade-offs involved in the design of specific rescheduling rules are described, and their potential effectiveness in simulations of systems with nonexponential failure and repair time distributions are demonstrated. It is found that an effective method for selecting the rescheduling distribution is to keep the probability of a failure transition in the range between 0.1 and 0.5</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089387.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>scheduling</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089388">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>On the modeling of workload dependent memory faults</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-11e56d1c38eb7fef94c88f97ef2f886d-cdcf49d3fd43c8e9a4e56e00a29da86d">
        <akt:full-name>J. Dunkel</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A modeling approach to investigating the interdependencies between memory faults and system performance is presented. Describing the program behavior by an independent reference model, the author develops a fault occurrence model that depends on workload characteristics such as task sojourn times, the number of page references, and the number of page faults. Determining the probability that a fault is detected at a page test, the author quantifies the workload required for fault handling. Using a queuing network in a stationary analysis, he evaluates the average performance decrease caused by memory faults. The interdependencies between performance and reliability quantities are described by a set of nonlinear equations. An iterative method for evaluating the model is given. The results of some experiments demonstrate that the performance decrease caused by memory error depends on system workload and operating system characteristics</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089388.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>iterative methods</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>queueing theory</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089389">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>On the modelling and testing of recovery block structures</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2a226db1c7d5d3c230187101398f9307-0b02a1556a4a4982d254a62c6594fc40">
        <akt:full-name>G. Pucci</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors proposes a reliability model for recovery block structures based on error events that can be observed and distinguished during testing. Strategies are described for the collection of failure histories, which are needed to estimate the model parameters and obtain dependability predictions. Given that the software goes through different testing stages, the model can be employed at different points of the development cycle to assess or forecast the quality of project choices and the resulting product</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089389.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089390">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The transformation approach to the modeling and evaluation of the reliability and availability growth</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b1f7976cad30dd3a4f5c0ec55161bf81-5c3de59ea98c77ce8f741bc8cc53f22b">
        <akt:full-name>J.C. Laprie</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-29c9581633d451eb56f15253fa279631-c8f0c56dd1f297c8ecda95967b256b1f">
        <akt:full-name>C. Beounes</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-46bf3ee848d088cfc0d9db282e602e4b-c8f0c56dd1f297c8ecda95967b256b1f">
        <akt:full-name>M. Kaaniche</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b327c2a66e73389245b5176ebf0a1412-fea5e3fdfe3b22411f04a288d4a6a969">
        <akt:full-name>K. Kanoun</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors present an approach aimed at modeling and evaluating the reliability and availability of systems from the knowledge of the reliability growth of their components. First system behavior is characterized with respect to reliability and availability. The hyperexponential model for reliability and availability growth modeling is introduced and applied to multicomponent systems. The possibility of accounting for future reliability growth when performing evaluations during the design of the system is considered</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089390.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089391">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>On the design of path delay fault testable combinational circuits</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d77f2db090515009cf090aeca49191d3-7af7b7e3052b1a1caf45caf89c417766">
        <akt:full-name>A.K. Pramanick</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-965dc2d124659a370908152afc40e8f5-7af7b7e3052b1a1caf45caf89c417766">
        <akt:full-name>S.M. Reddy</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A theoretical framework for investigating the design for the path-delay-fault testability problem is provided. Necessary and sufficient conditions for the existence of general robust tests in a multioutput, multilevel circuit are given. The conditions for the existence of a more restricted class of robust tests are derived from those for general robust tests. A design procedure is given for the synthesis of multioutput, multilevel combinational logic circuits in which all path delay faults are robustly detectable. A powerful factorization method, that of extended factorization, was exploited for this purpose</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089391.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>logic circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089392">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault detection and diagnosis of &lt;e1&gt;k&lt;/e1&gt;-UCP circuits under totally observable condition</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-234eb701b3ae75795f9d3d7d214d8bd3-776dc9e2eb6ed123afc7d03a27f0f612">
        <akt:full-name>W. Xiaoqing</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d6b361c66dc6964630f4e9984d3fb47a-776dc9e2eb6ed123afc7d03a27f0f612">
        <akt:full-name>K. Kinoshita</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A method is presented for detecting stuck-open faults, as well as stuck-at faults, in CMOS combinational circuits by short test sequences of fixed length. The discussion is based on the assumption that outputs of all the gates in a circuit are observable. This assumption will become reasonable when a new testability solution called CrossCheck, or a new test equipment, called on electron-beam tester, is used. The concept of &lt;e1&gt;k&lt;/e1&gt;-UCP (uniform, having a (&lt;e1&gt;k&lt;/e1&gt;+1)-Color solution and compatible polarity) circuits is introduced, and it is shown that 2(&lt;e1&gt;k&lt;/e1&gt;+1) kinds of test sequences of length &lt;e1&gt;k&lt;/e1&gt;( &lt;e1&gt;k&lt;/e1&gt;+1)+1 are sufficient to detect stuck-open faults, as well as stuck-at faults in a &lt;e1&gt;k&lt;/e1&gt;-UCP circuit. Furthermore, it is shown that single stuck-open faults can be located by using a fault diagnosis table. A method which can speed up the generation of a fault diagnosis table is also proposed</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089392.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>CMOS integrated circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>combinatorial circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault location</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089393">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Optimized synthesis of self-testable finite state machines</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2f041a31e5c5fc437452ae0fe000783c-4493a9048d54303c905306db9e6ca36a">
        <akt:full-name>B. Eschermann</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-af52a68891af6dbffb46d24e7d8b70c1-4493a9048d54303c905306db9e6ca36a">
        <akt:full-name>H.-J. Wunderlich</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A synthesis procedure for self-testable finite state machines is presented. Testability comes under consideration when the behavioral description of the circuit is being transformed into a structural description. To this end, a novel state encoding algorithm, as well as a modified self-test architecture, is developed. Experimental results show that this approach leads to a significant reduction of hardware overhead. Self-testing circuits generally employ linear feedback shift registers for pattern generation. The impact of choosing a particular feedback polynomial on the state encoding is discussed</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089393.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>built-in self test</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>encoding</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>feedback</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>finite automata</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>sequential machines</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>shift registers</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089394">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Techniques for building dependable distributed systems: multi-version software testing</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c27cf401fc073eb076ac396cceb64661-b4cd2246fd07c0ccfa679cfb6d259bea">
        <akt:full-name>J.P.J. Kelly</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ce4c67c112ec255ac76b82c37ee6244c-b4cd2246fd07c0ccfa679cfb6d259bea">
        <akt:full-name>T.I. McVittie</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2e43b5f33527333a7d5fdcd3a6414865-b4cd2246fd07c0ccfa679cfb6d259bea">
        <akt:full-name>S.C. Murphy</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>To investigate the effectiveness of serializable back-to-back testing and other issues in multiversion software systems, an experiment was performed. The authors discuss the use of multiple implementations for fault prevention throughout development, particularly during the testing phase. The specifications chosen were written in languages that meet industrial standards. The application is a communication protocol based on the Open Systems Interconnection (OSI) layered model adopted by the International Organization for Standardization (ISO) in 1979. The OSI layered model is introduced, the generation of appropriate test cases is discussed, and the testing environment is presented. The serializable back-to-back testing paradigm is presented in detail, along with testing results</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089394.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>open systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>protocols</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>standards</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089395">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>On the performance of software testing using multiple versions</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-faa8a6001a1e66f92f626dd604a0c8b0-be814cf1303c52d984e64ccc4cc48f53">
        <akt:full-name>S.S. Brilliant</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-39967e1ab5f2381ae7f393204ec19758-be814cf1303c52d984e64ccc4cc48f53">
        <akt:full-name>J.C. Knight</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-992b405cef5901101841899adac70ead-be814cf1303c52d984e64ccc4cc48f53">
        <akt:full-name>P.E. Ammann</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors present analytic models of the performance of comparison checking (also called back-to-back testing and automatic testing), and they use these models to investigate its effectiveness. A Markov model is used to analyze the observation time required for a test system to uncover a fault using comparison checking. A basis for evaluation is provided by developing a similar Markov model for the analysis of ideal checking, i.e. using a perfect (through unrealizable) oracle. Also presented is a model of the effect of comparison checking on a version's failure probability as testing proceeds. Again, comparison checking is evaluated against ideal checking. The analyses show that comparison checking is a powerful and effective technique</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089395.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>Markov processes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>automatic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089396">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Error models for robust storage structures</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-52462c83c82d750d02da4264bd41f5aa-db15c62e7febf19ac2a3db3154751787">
        <akt:full-name>D.J. Taylor</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The error models which have appeared in the literature are described and compared. The comparison includes an informal discussion and comparison of detectability and correctability results obtainable with the various models. The ideal comparison basis would be errors produced by real faults in real systems. No such data are available, and an experiment to obtain such data would be extremely costly. One particular case can be used: the errors resulting from crashes (partially completed updates of storage structures) are easily determined and are used as the final basis of comparison</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089396.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software engineering</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089397">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Using certification trails to achieve software fault tolerance</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-26bb0b749f946c002b186625c01a82f6-a4304b994affbf4c1f46d83c44eb5dc4">
        <akt:full-name>G.F. Sullivan</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-336d3f1d7f40797fb9d50cb67de2a407-a4304b994affbf4c1f46d83c44eb5dc4">
        <akt:full-name>G.M. Masson</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A technique for achieving fault tolerance in hardware and software systems is introduced. When used for software fault tolerance, this technique uses time and software redundancy and can be outlined as follows. In the initial phase, a program is run to solve a problem and store the results. In addition, this program leaves behind a trail of data, called a certification trail. In the second phase, another program is run, and it solves the original problem again. This program, however, has access to the certification trail left by the first program. Because of the availability of the certification trail, the second phase can be performed by a less complex program and can execute more quickly. In the final phase, the two results are compared, and if they agree, the results are accepted as correct; otherwise, an error is indicated. Cases in which the second phase can be run concurrently with the first and act as a monitor are discussed</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089397.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software engineering</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089398">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Concurrent error detection and correction in real-time systolic sorting arrays</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e11293b8ca9d50d7315d7d4f5112c6e1-64a83ad70e42b3ff0ed50b76c5411886">
        <akt:full-name>S.-C. Liang</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5297332bc1363f02b0cad027d2702aa9-85aaef45681967689f1b9376ac495719">
        <akt:full-name>S.-Y. Kuo</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>An approach to online error detection and correction for high-throughput VLSI sorting arrays is presented. The error model is defined at the sorting element level, and both functional errors and data errors generated by a faulty element are considered. The functional errors are detected and corrected by exploiting inherent properties of the sorting array, as well as special properties discovered by the authors. Coding techniques and an online fault diagnosis procedure are developed to locate data errors. All the checkers are designed to be totally self-checking, and hence the sorting array is highly reliable. Two-level pipelining is employed in this design, making it very efficient and suitable for real-time application. The hardware overhead is not significant for typical array sizes, and the time penalty is only three clock cycles. The structure is very regular and therefore very attractive for VLSI or WSI implementation</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089398.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>VLSI</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>encoding</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error correction</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error detection</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>systolic arrays</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089399">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A software based approach to achieving optimal performance for signature control flow checking</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-239d7a761e37798b5a6ab265cc0c2cfe-c26ecff9aa7bb1dc2f230ceb528cff8d">
        <akt:full-name>N.J. Warter</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7f46caa6fc73a34d6d3f2430b556e48c-c26ecff9aa7bb1dc2f230ceb528cff8d">
        <akt:full-name>W.-m.W. Hwu</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors present a software-based approach that uses run-time program behavior to minimize the performance overhead in signature control flow checking. In general, for both RISC (reduced-instruction-set-computer) and CISC (complex-instruction-set-computer) architectures, it is found that using run-time information can reduce the performance overhead by 50%. For the MC68000, the performance overhead for adding justifying and reference signatures to the program code is approximately 2.8%. In addition to optimizing the performance, the authors' approach does not increase the hardware complexity of the monitor. Furthermore, an &lt;e1&gt;O&lt;/e1&gt;(&lt;e1&gt;N&lt;/e1&gt;2) algorithm which inserts justifying signatures on the arcs of the program control flow graph with &lt;e1&gt;N&lt;/e1&gt; nodes is presented. It is shown that the algorithm complexity of previous schemes which insert justifying signatures in the program nodes is exponential</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089399.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computational complexity</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reduced instruction set computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089400">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
        <support:year-of>1990</support:year-of>
        <support:has-pretty-name>1990</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Modeling recovery time distributions in ultrareliable fault-tolerant systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-313cac9ffc7034433659c67dbcc9e195-37cae39e0b5533ff41a702317a580156">
        <akt:full-name>R. Geist</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-eb34c491bfa8f33e1d5135b5fe062c88-37cae39e0b5533ff41a702317a580156">
        <akt:full-name>M. Smotherman</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-563dd870fc6a941a72d35c1ed6853bf6-37cae39e0b5533ff41a702317a580156">
        <akt:full-name>R. Talley</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A technique for fitting distributions to empirical recovery time data that focuses on the components that dominate system reliability is proposed. The technique uses Goldfarb's conjugate gradient descent search to minimize the &lt;e1&gt;L&lt;/e1&gt;2 norm of the error projected in the Laplace transform domain. A new parametric family of distributions is also suggested and is seen to provide uniformly better predictions of system reliability than the standard distributions used for this purpose, i.e. gamma, Weibull, and log normal. Applications to several sets of real recovery time data are provided</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-2913" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1990</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=2913</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1990'>
            <support:year-of>1990</support:year-of>
            <support:has-pretty-name>1990</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/292/2913/00089400.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146625">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Software defects and their impact on system availability-a study of field failures in operating systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-615bc1a93d6966df718f20dba4050609-890f160bbda021e77907b55d54a91075">
        <akt:full-name>M. Sullivan</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-cb9bfe73f6f41da8f792ce4bbef8d641-51923806f1a8483cebbb26ffbd181eaf">
        <akt:full-name>R. Chillarege</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Defects reported between 1986 and 1989 in the MVS operating system are studied in order to gain the insight needed to provide a clear strategy for avoiding or tolerating them. Typical defects (regular) are compared to those that corrupt a program's memory (overlay), given that overlays are considered by field services to be particularly hard to find and fix. It is shown that the impact of an overlay defect is, on average, much higher than that of a regular defect, that boundary conditions and allocation management are the major causes of overlay defects, not timing, and that most overlays are small and corrupt data near the data that the programmer meant to update. Further analysis is provided on defects in fixes to other defects, failure symptoms, and the impact of defects on customers</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146625.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>operating systems (computers)</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146626">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Error/failure analysis using event logs from fault tolerant systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f078f8f9a3863b7bbcfe9760e54a5da2-357dad94743413d03cd73d9f79e93a6e">
        <akt:full-name>I. Lee</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6122ee67de7692816e4883ba5ebf39cb-357dad94743413d03cd73d9f79e93a6e">
        <akt:full-name>R.K. Iyer</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-07ce46e8db392c711e4f2c28558f0c73-357dad94743413d03cd73d9f79e93a6e">
        <akt:full-name>D. Tang</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A methodology for the analysis of automatically generated event logs from fault tolerant systems is presented. The methodology is illustrated using event log data from three Tandem systems. Two are experimental systems, with nonstandard hardware and software components causing accelerated stresses and failures. Errors are identified on the basis of knowledge of the architectural and operational characteristics of the measured systems. The methodology takes a raw event log and reduces the data by event filtering and time-domain clustering. Probability distributions to characterize the error detection and recovery processes are obtained, and the corresponding hazards are calculated. Multivariate statistical techniques (factor analysis and cluster analysis) are used to investigate error and failure dependency among different system components. The dependency analysis is illustrated using processor halt data from one of the measured systems. It is found that the number of errors is small, even though the measurement period is relatively long. This reflects the high dependability of the measured systems</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146626.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault location</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146627">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault tolerance testing in the Advanced Automation System</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fff1b46f522ad2ef96d97e791246d60a-8f5865e7f254daf9e7c98e80156ef3ef">
        <akt:full-name>T.R. Dilenno</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3814aa1dfb86919889baab2315e588ca-8f5865e7f254daf9e7c98e80156ef3ef">
        <akt:full-name>D.A. Yaskin</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0f6185fcc53c2108407b0eba61353e37-8f5865e7f254daf9e7c98e80156ef3ef">
        <akt:full-name>J.H. Barton</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Fault tolerance testing of the US Federal Aviation Administration's Advanced Automation System (AAS) is discussed. The relationship to previous work is examined, and a high-level description of AAS and its fault tolerance architecture is given. The techniques and tools used to enable effective fault tolerance testing are presented. The results obtained to date from this testing effort are summarized. The significant lessons learned to date during AAS fault tolerance testing are presented. They are categorized into three areas: testing implications, organizational implications, and tooling implications</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146627.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146628">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault-tolerance experiments of the `Hiten' onboard space computer</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8d39b8920b87487766bc39a07e8d4e02-bea4352ba74c7aab0b485e716c0435ff">
        <akt:full-name>T. Takano</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4c6f71ce2cb122e2827502b252e6b6d6-bea4352ba74c7aab0b485e716c0435ff">
        <akt:full-name>T. Yamada</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5bc28ff869fd512aa419eb2ffbc82567-bea4352ba74c7aab0b485e716c0435ff">
        <akt:full-name>K. Shutoh</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f160e933c1ee29f8b6fa2ff17ec988e6-bea4352ba74c7aab0b485e716c0435ff">
        <akt:full-name>N. Kanekawa</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>An interim report on the experimental fault-tolerance verification of the onboard space computer loaded on the artificial satellite Hiten is presented. The Hiten mission and the fault-tolerance technique, stepwise negotiating voting (SNV), on which the computer is based, are described. The intentional fault injection study, field data collection method, and observed faults and results computer behavior are also described. During the roughly seven month study period, fault tolerance masked all the faults that occurred</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146628.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>aerospace computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146630">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>TSUNAMI: a path oriented scheme for algebraic test generation</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2fef539012d70016902cad5951135c65-6dcdfabdb85f61c8fb40ef8ee11d8430">
        <akt:full-name>T. Stanion</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1b34b2dbff3be47f4a1eea170dadec4f-6dcdfabdb85f61c8fb40ef8ee11d8430">
        <akt:full-name>D. Bhattacharya</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>An algorithm is presented for generating tests for single stuck line faults using a combination of algebraic processing and conventional path oriented search. Unlike conventional test generation algorithms, this algorithm uses algebraic methods to determine the complete set of input assignments that will propagate an error signal through a gate in a path to a primary output. The algorithm uses ordered binary decision diagrams (BDDs) for algebraic processing. For a large number of circuits that are amenable to analysis using BDDs, the algorithm is faster than previous algebraic methods. The algorithm has been implemented as the program TSUNAMI. Experimental results demonstrate that for most circuits TSUNAMI can generate test sets for all faults in fairly small amounts of time and is very efficient for hard-to-detect and redundant faults. Moreover, since a large set of tests is generated for each fault, these sets can be compacted to a very high degree. Using benchmark circuits as a reference, TSUNAMI obtains test sets up to 70% smaller than test sets generated by conventional algorithms</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146630.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146631">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>An architectural level test generator for a hierarchical design environment</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-93f751470225dd0b2c5685a9e8e1d90f-65cbb72e9edf2256797ff4b33f07e6d2">
        <akt:full-name>J. Lee</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6ff95ad97726b9b35b9d314d75335ddc-372682cb0a814d448007c2a8f0d82dee">
        <akt:full-name>J.H. Patel</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Most state-of-the-art automatic test pattern generators (ATPGs) require a detailed gate level representation for the circuits under test, information that either does not exist or may not be available to the test engineers in a hierarchical design environment. An ATPG methodology working at an architectural level is proposed to exploit the hierarchy of the design and relieve the dependence on the gate level information. The test set for each high level primitive is pregenerated by any low-level sequential ATPG tool, based on any possible fault model. The test patterns in these test sets are justified and the fault effects are propagated at high level. Due to the fault collapsing effect, several data types have been defined for the manipulation of all possible fault effects. When conflict occurs and the backtracking mechanism is invoked, a novel tracing technique and an indexed backtracking technique are used to make high-level decisions</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146631.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>VLSI</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>automatic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>integrated circuit testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146632">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Test generation for synchronous sequential circuits using multiple observation times</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5842d5907bfb5169ef884ebf560ad04e-31c48571d7e050aaa47a5be0c054d0e7">
        <akt:full-name>I. Pomeranz</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f76b811fa428e2358e9d52dd9a352ba0-3011d44766b8724fa47442cf9b9fd2f8">
        <akt:full-name>S.M. Reddy</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The test generation problem for synchronous sequential circuits is considered in the case where hardware reset is not available. The observations which form the motivation for the work are given. On the basis of the observations, the use of multiple fault free responses as well as multiple time units for fault detection is suggested. Application to gate level synchronous sequential circuits is then considered. Experimental results are given to support the claim that a small number of observation times is required, and that a small number of fault free responses need be stored for every fault. 100% fault efficiency is achieved</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146632.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault location</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>sequential circuits</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146633">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Functional test generation for pipelined computer implementations</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-97c8000cdb0382445fe506a35b4a5c8c-a73768cb5a657e27382068f963e11f37">
        <akt:full-name>D.C. Lee</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4eba2bc7fb235c73aca57ecd0bdbf595-b42c148767c85bbbb0f88e8fa5736fe1">
        <akt:full-name>D.P. Siewiorek</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>An implementation-dependent functional testing methodology is developed for pipelined CPU implementations. The magnitude of pipeline design errors is established through the study of the design log of a commercial computer system. A model for determining the correctness of the execution of a machine language program is developed. The basis for functional pipeline test generation, the dependency graph, is introduced. A quantitative analysis of the number of dependency arcs exercised by a given instruction stream is developed. Techniques to reduce the complexity are also introduced. A methodology for generating pipeline functional test modules for a pipelined implementation is developed. Application of the methodology to a military standard computer architecture, the MIL-STD-1750A, is described. The results for the test generator, called AUTOGEN, show two orders of magnitude reduction of the test length over the standard comprehensive architectural verification program</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146633.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>pipeline processing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146636">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Design decisions for the FTM: a general purpose fault tolerant machine</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f56248dbada59e756b2fbe33e0769eae-5a18f70f27404ba371d71ad1de25b1a7">
        <akt:full-name>M. Banatre</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f588c9382a98e2ae1b6883cc76e8a7a7-44ed65789d3cf2d4c7634f7953dc2ea1">
        <akt:full-name>G. Muller</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f5dba0924e21e6eb814f71fe5774b1b1-5a18f70f27404ba371d71ad1de25b1a7">
        <akt:full-name>B. Rochat</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a6aed257b198fc98b7ad9b1cd1fd1a95-5a18f70f27404ba371d71ad1de25b1a7">
        <akt:full-name>P. Sanchez</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The main aspects of the FTM (fault tolerant machine) architecture, which has been built by combining stable transactional memory boards with processors of a standard machine, are reviewed, and the design principles are presented. The FTM design is based on GOTHIC, a fault-tolerant distributed system that relies on stable storage technology. A fast stable transactional memory (STM) board, which offers built-in atomic operations on groups of small data structures with very good response time, has been integrated into a multiprocessor architecture, each processor possessing its own STM. The FTM hardware architecture has been built from standard open machine using dynamic redundancy in the building of the processing elements. The FTM prototype is presented, and the STM functions are described in detail</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146636.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer architecture</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146637">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The Stratus architecture</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-aa39a10f567036c2700d7e87f275abf2-b3c33e1d6b5de4b4a4d30500547df04e">
        <akt:full-name>S. Webber</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-11a4560d8d1325aadac13452fac9c0c1-b3c33e1d6b5de4b4a4d30500547df04e">
        <akt:full-name>J. Beirne</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>An overview is given of the architecture of the Stratus fault-tolerant computer systems, which were the first to use hardware alone to provide fault tolerance in the commercial marketplace. The power subsystem, system boards, and off-board I/O interface buses are examined in some detail. Recovery scenarios and the Stratus service approach are described</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146637.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer architecture</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146639">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Signature analysis with modified linear feedback shift registers (M-LFSRs)</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9090bd6b3eb8aa1d0ad859dfbc9589d3-84c2448a249b9f8a5db0e7d7c9532dba">
        <akt:full-name>R. Raina</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3c101d2d7c308c80ebf19fd0d80882ef-84c2448a249b9f8a5db0e7d7c9532dba">
        <akt:full-name>P.N. Marionos</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A signature analysis technique that uses modified linear feedback shift registers (LFSRs) is presented. It is demonstrated that the modified-LFSR-based analyzers can be designed with significantly lower aliasing probability compared to conventional LFSRs of the same size. The methodology for their design is described. Analytic expressions for their aliasing probability, hardware requirements, and the average tet-time overhead are obtained and experimentally verified. Studies using several circuit-under-test responses corroborate the improvement in the aliasing probability for the same hardware (or reduction in hardware for the same aliasing probability) when the modified LFSRs are used. The extra test-time required by the modified LFSRs is found to be nominal (&lt;5%) in a majority of instances</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146639.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>feedback</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>shift registers</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146640">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Signature analysis and test scheduling for self-testable circuits</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6cd114113aab6c247bf6d14da612fdd0-9fce2f191786ce5a4a313d47bf00c45d">
        <akt:full-name>A.P. Strole</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-af52a68891af6dbffb46d24e7d8b70c1-9fce2f191786ce5a4a313d47bf00c45d">
        <akt:full-name>H.-J. Wunderlich</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>In complex circuits the test execution is usually divided into a number of subtasks, each producing a signature in a self-test register. These signatures influence one another. A model that can be used as a basis for test scheduling procedures is presented, and it is shown how test schedules can be constructed, in order to minimize the number of signatures to be evaluated. The error masking probabilities decrease when the subtasks of the test execution are repeated in an appropriate order, and an equilibrium situation is reached where the error masking probabilities are minimal. A method is presented for constructing test schedules so that only the signatures at the primary outputs must be evaluated to get a sufficient fault coverage. Then no internal scan path is required, only a few signatures have to be evaluated at the end of the test execution, and the test control at chip and board level is simplified. The amount of hardware to implement a built-in self-test is reduced significantly</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146640.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>automatic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>built-in self test</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146641">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Bounds on signature analysis aliasing for random testing</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4bc54e930e0921531cf9709f006af855-7114f8614fe5d8a7e0470ef9f5289180">
        <akt:full-name>N.R. Saxena</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7e89e5463f6b47116062bac679d21035-7114f8614fe5d8a7e0470ef9f5289180">
        <akt:full-name>P. Franco</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1d1885681f4c7201691ba1e351ded1a6-37c0f74ed469eb033452eea1da4eb7aa">
        <akt:full-name>E.J. McCluskey</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Simple bounds on the aliasing probability for serial signature analysis are presented. To motivate the study, it is shown that calculation of exact aliasing is NP-hard and that coding theory does not necessarily help. It is shown that the aliasing probability is bounded above by 2/(&lt;e1&gt;L&lt;/e1&gt;+2) for test lengths &lt;e1&gt;L&lt;/e1&gt; less than the period, &lt;e1&gt;L&lt;/e1&gt;c, of the signature polynomials; for test lengths &lt;e1&gt;L&lt;/e1&gt; that are multiples of &lt;e1&gt;L&lt;/e1&gt;c, the aliasing probability is bounded above by 1; and, for test lengths &lt;e1&gt;L &lt;/e1&gt; greater than &lt;e1&gt;L&lt;/e1&gt;c and not a multiple of &lt;e1&gt;L &lt;/e1&gt;c, the aliasing probability is bounded above by 2/(&lt;e1&gt;L &lt;/e1&gt;c+1). These simple bounds avoid any exponential complexity associated with the exact computation of the aliasing probability. Simple bounds also apply to signature analysis based on any linear finite state machine (including linear cellular automata)</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146641.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computational complexity</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>finite automata</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146650">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Construction and analysis of fault-secure multiprocessor schedules</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-bdde839f0c53f5eed8885fdc4614c77a-c69e3953c13ea2207a73b6fbc3bd2ba6">
        <akt:full-name>D. Gu</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ef2a681bcb3131cb996ae0ff966151e4-56bf0090c321b9d0a4bb7b52a18a18d6">
        <akt:full-name>D.J. Rosenkrantz</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-71326bf90d0a5aca59079b32c55a09f0-56bf0090c321b9d0a4bb7b52a18a18d6">
        <akt:full-name>S.S. Ravi</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Issues involved in the design and analysis of fault-secure schedules for multiprocessor systems are investigated. A formal characterization of fault-security for a single fault is developed and generalized for multiple faults. The single fault characterization is used in the construction of fault-secure schedules for several classes of computation trees. The schemes produce schedules that are either shorter than or use fewer processors than the schedules produced by currently known methods. Further, lower bounds on schedule lengths are developed to prove that the schedules produced by the schemes are optimal or close to optimal. The characterization for multiple faults leads to an efficient algorithm to determine whether a given schedule is fault-secure for any fixed number of faults. It is shown that when the number of faults is not fixed, the problem of determining whether a schedule is fault-secure is computationally intractable</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146650.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessing systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146651">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A fault-tolerant FFT processor</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c21adaae27ad75e0b6b8ddd4e35e7100-711f63b5d6e6607bc3857aa5d0c95610">
        <akt:full-name>M. Tsunoyama</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b4cabd153f2126cd4525ba157a65a82a-711f63b5d6e6607bc3857aa5d0c95610">
        <akt:full-name>S. Naito</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A scheme for concurrent fault detection by recomputing and a fault-tolerant FFT processor using the scheme are proposed. An FFT processor with perfect shuffle is considered. The realization of the processor is based on a linear cellular automaton (LCA) model having the constant-weight and equidistance properties. When a fault occurs in the processor, the fault is detected concurrently and the processor is reconfigured by replacing the faulty butterfly unit with a normal one according to the state of the processor. The reconfiguration can be made within a clock period by making a state transition based on the LCA model and by reconnecting the butterfly units according to the new state. The processor can be reconfigured quickly, so that it can be used for highly reliable real-time data processing systems</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146651.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computerised signal processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>digital signal processing chips</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fast Fourier transforms</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>finite automata</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146652">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Concurrent error detection and fault-tolerance in linear digital state variable systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-36dc1ff0d86cb59914a1723493f38d7d-8aaccbc37bf867940d94674312c6d844">
        <akt:full-name>A. Chatterjee</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-12792a32b06452f0fba4986b18374800-8aaccbc37bf867940d94674312c6d844">
        <akt:full-name>M.A. d'Abreu</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The problem of error detection and correction (both transient and permanent) in linear digital state variable systems, a very large class of circuits used in digital signal processing and control, is considered. The case of single faulty modules (adders, multipliers, shifters, etc.) is studied, and general circuit data flow graphs (with and without fanout) that realize linear digital state variable systems are analyzed to determine how additional system states might be added to the data flow graph to achieve error detection and correction. It is seen that error detection and correction can be achieved by the addition of a relatively small amount of additional hardware which functions as the checking circuitry. Next, error detection under multiple faulty modules with and without fanout of the module outputs is studied. An analysis tool called the gain matrix is introduced. The problem of fault location and correction of single faults is discussed. Recursive as well as nonrecursive systems can be handled</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146652.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146653">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The IBM S/390 Sysplex Timer</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-90544a4431d694ba746128b001ef59e3-2fa606055904247f2f5471de160ef2a4">
        <akt:full-name>T.B. Smith</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e71e1bbc52350aea9d70bc44fd01e179-2fa606055904247f2f5471de160ef2a4">
        <akt:full-name>W.A. Moorman</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-82ec9b2fa23f6496af3f2261fc868480-2fa606055904247f2f5471de160ef2a4">
        <akt:full-name>T. Dang</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The IBM S/390 Sysplex Timer, a centralized fault-tolerant time reference used in maintaining time-of-day synchronism between multiple closely coupled IBM S/390's, is presented. The basic Sysplex Timer organization is quad redundant, and its packaging is duplex. A fully duplicated star interconnect topology provides redundant timer transmissions to every S/390 client system using dedicated fiber optic cables. The technology used in the design of the Sysplex Timer and measurements of the performance of the prototype system used in the validation of the design are presented. The design proved to be economic and robust, maintaining tightly synchronized operation of the redundant components for all test cases. Cable latency compensation appeared to be particularly effective. Worst case operation of the prototype with less than 300 ns of timer skew was verified</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146653.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>clocks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>computer architecture</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>timing circuits</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146655">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Bridging, transition, and stuck-open faults in self-testing CMOS checkers</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4d9d155464d665dd41753837110ac0c5-85c9fb505a6f90e18df083ce1d5dbc73">
        <akt:full-name>S.D. Millman</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1d1885681f4c7201691ba1e351ded1a6-37c0f74ed469eb033452eea1da4eb7aa">
        <akt:full-name>E.J. McCluskey</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The consequences of bridging, transition, and stuck-open faults in self-testing checkers designed only for single stuck-at faults are examined. A methodology for design that guarantees that the checkers will be self-testing in the presence of bridging, transition and stuck-open faults is established. This methodology is applied to several implementations of self-testing checkers. Simulations confirm that these checkers are self-testing in the presence of bridging, transition, and stuck-open faults. The problems associated with testing the checkers in the presence of non-stuck-at faults and the problems that result from reducing the number of checker outputs from two to one are discussed. It is shown that self-testing checkers designed for stuck-at faults will remain self-testing in the presence of nonclassical faults</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146655.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>CMOS integrated circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>automatic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault location</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>integrated circuit testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146656">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Multiple fault analysis using a fault dropping technique</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-278ba2e351030c2294a78b8db04a5362-2342c6051b86c7a0b43d4528c1fd7212">
        <akt:full-name>A. Verreault</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-680520e51dd27f9a116684ff35f27a66-2342c6051b86c7a0b43d4528c1fd7212">
        <akt:full-name>E.M. Aboulhamid</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-439696b6bb09465da1584563ac13467a-2342c6051b86c7a0b43d4528c1fd7212">
        <akt:full-name>Y. Karkouri</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A method for analyzing multiple faults in gate-level combinational circuits that does not explicitly enumerate all the multiple stuck-at faults that may be present in a circuit is presented. First, a fault collapsing phase is applied to the network, so that equivalent faults are eliminated. During the analysis, frontier faults where there is at least a normal path from each faulty line to a primary output are considered. It is shown that the set of frontier faults is equivalent to the set of multiple faults. Given an input vector, the normal circuit is evaluated and the fault effects propagated. A fault dropping procedure is then applied to eliminate faulty conditions on specific lines that are either absent or permanently masked by other faulty conditions. The method is applied to some benchmark circuits, and significant speedup is observed</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146656.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>combinatorial circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault location</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146657">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>VLSI implementation of a self-checking self-exercising memory system</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1b3424f87ef59e78d94bcfdc8b49f803-bc79feaccabd61888e535cd1d9ad1007">
        <akt:full-name>D.A. Rennels</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-151750ac27cb4c853048ce94158da6cb-777a887600a75538be854886804a410e">
        <akt:full-name>H. Kim</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A VLSI implementation of a design concept for a self-checking self-exercising (SCSE) memory system described by D. Rennels and S. Chau (see Proc. 16th Int. Symp. on Fault-Tolerant Computing p.358-63 (1986)) is presented. The design, which provides a way of detecting faults and correcting errors in RAMs within milliseconds while concurrently performing normal execution of programs, is reviewed. The approach is to add two parity bits to each row in the storage arrays of the RAM chips and to provide hardware scrubbing interleaved with normal program cycles. The RAM and MIBB (memory interface building block) chip designs, and some of the augmentations and changes required from the original conceptual design, are examined. The approach has been determined to be feasible, and the three-year design process has also demonstrated the large distance between a conceptual design and its realization. Errors and deficiencies were found in the original design and corrected, and new useful functions were identified and added</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146657.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>VLSI</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>automatic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>integrated circuit testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>integrated memory circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>random-access storage</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146658">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The UCLA mirror processor: a building block for self-checking self-repairing computing nodes</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-cab87903d27c6a5e10c9c07cfe7f570c-078ebcb0ea4d9aca514fd752faa81c06">
        <akt:full-name>Y. Tamir</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-74694231308c28e19cc2f698e38b6901-078ebcb0ea4d9aca514fd752faa81c06">
        <akt:full-name>M. Liang</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b0e140de2888140b410d38499d0985af-078ebcb0ea4d9aca514fd752faa81c06">
        <akt:full-name>T. Lai</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-43b3df6751053e364fcb265c72e5c814-078ebcb0ea4d9aca514fd752faa81c06">
        <akt:full-name>M. Tremblay</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The design and implementation of a RISC microprocessor, called the UCLA mirror processor, which is capable of micro rollback, are reported. Two mirror processors operating in lock step achieve concurrent error detection by comparing external signals and a signature of internal signals every clock cycle. A mismatch causes both processors to roll back to the beginning of the cycle in which the error occurred. In some cases an erroneous state is corrected by copying a value from the fault-free processor to the faulty processor. The architecture, microarchitecture, and VLSI implementation of the mirror processor, with an emphasis on its error-detection and error-recovery capabilities, are described. The overhead and design issues encountered are evaluated. It is shown that micro rollback can be implemented in a practical VLSI chip and is a practical technique for minimizing the latencies normally associated with concurrent error detection</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146658.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>automatic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error detection</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>microprocessor chips</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reduced instruction set computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146660">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Load sharing in hypercube multicomputers in the presence of node failures</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-92ef696d5968e411a40f6db6346d86e4-dab0e2235deb09b23531860cd805b256">
        <akt:full-name>Y.-C. Chang</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6ea265a9e8426b009b111a22d5a346a2-72af3e26a814d9068e0d6db9f66c4696">
        <akt:full-name>K.G. Shin</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Two important issues associated with load sharing (LS) in hypercube multicomputers are discussed and analysed: (i) ordering fault-free nodes as preferred receivers of overflow tasks and (ii) developing an LS mechanism to handle node failures. The authors previously (1989) proposed to order the nodes in each node's proximity into its preferred list of receivers for the purpose of LS in distributed real-time systems. However, the occurrence of node failures will destroy the original structure of a preferred list if the failed nodes are simply dropped from the list. Three algorithms are proposed to modify the preferred list to retain its original features. Based on the modified preferred lists, node failures can be tolerated by equipping each node with a backup queue which stores and updates the arriving/completing tasks at its most preferred node. Simulation results show that this approach, despite its simplicity, can greatly reduce the number of task losses compared to approaches that do not use backup queues</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146660.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>hypercube networks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessing systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>real-time systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146661">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Cost effectiveness analysis of different fault tolerance strategies for hypercube systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f264b6465e3a0c50d1904e01c18f750f-ce689c504bd9817e3c1b0f32e671accf">
        <akt:full-name>V. Grassi</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A general model of a multicomputer system is presented, and an index is calculated for measuring its performance. Since the index depends on the average internode distance, recursive expressions for the evaluation of this distance are derived. A cost-effectiveness figure of merit is defined on the basis of a performability model that uses the performance index. The figure of merit is used to compare the cost effectiveness of two different strategies, the degradable hypercube and the nondegradable hypercube. The fault model adopted is based on the assumption of partial node failure (loss of the main processor but not of the communication coprocessor). Under this assumption, the result suggests that the degradable hypercube strategy is more cost effective</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146661.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>hypercube networks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessing systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146662">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>An evaluation of fault-tolerant hypercube architectures for onboard computing</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7cef5c601cdb78d9e7c78264a82d766c-e1438adad07a69fe1ea9e85a212aaa51">
        <akt:full-name>J.C. Peterson</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fd9ef9b5f7772e1f1f06e2b29c5ce133-e1438adad07a69fe1ea9e85a212aaa51">
        <akt:full-name>J.O. Tuazon</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b7f9cc9d66c2f65f947baca5b9f6c0d0-e1438adad07a69fe1ea9e85a212aaa51">
        <akt:full-name>E.T. Upchurch</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Four hypercube architectures that are designed to use hardware resources more efficiently and that produce computers with high throughput and high reliability are evaluated. Spare nodes in three of the architectures are configured so that the entire computer has the topology of an incomplete hypercube. Here, the nodes of an incomplete hypercube are capable of providing different levels of fault detection, hardware reconfiguration, and routing. In the other architecture, the hypercube topology uses conventional switches capable only of establishing connections. End-of-mission dependability models and performance simulation models were developed. Results of performance degradation studies of the four architectures under reconfiguration in terms of throughput, response time, and communication utilization are presented for three workloads. The evaluations addressed performance-related dependability based on hardware failures and reconfiguration using hardware</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146662.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>hypercube networks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel architectures</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146664">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>An optimal algorithm for distributed system level diagnosis</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-23d4de83cfcbb70b9a6832a65c3ec746-3f107cb63d2179423830461c15c61d92">
        <akt:full-name>A. Bagchi</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6a7e0ddb3265d84739d4baeb8142fef7-3f107cb63d2179423830461c15c61d92">
        <akt:full-name>S.L. Hakimi</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A system consisting of &lt;e1&gt;n&lt;/e1&gt; identical processors connected by links in which some processors could be faulty is considered. Initially each unit knows only its own i.d. and the i.d.'s of its immediate neighbors; no unit has any global knowledge about the system. An optimal algorithm for system level diagnosis in such a system that is based on the transmission of packets by fault-free units is presented. The algorithm requires at most 3&lt;e1&gt;n&lt;/e1&gt; log &lt;e1&gt;p&lt;/e1&gt;+&lt;e1&gt;O&lt;/e1&gt;(&lt;e1&gt;n&lt;/e1&gt;+&lt;e1&gt;pt&lt;/e1&gt;) message transmissions by fault-free units, where &lt;e1&gt;p&lt;/e1&gt; fault-free units simultaneously start the algorithm and there are &lt;e1&gt;t&lt;/e1&gt; faulty units. The correctness of the algorithm is argued</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146664.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146665">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>An adaptive distributed system-level diagnosis algorithm and its implementation</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-cf75fed24c40e01a4fb29011569680be-3ac40cfbe8e9123dfc517f79c10cbd50">
        <akt:full-name>Jr. Bianchini, R.</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-11e3bf32d0b5cf588b14643f841495f8-3ac40cfbe8e9123dfc517f79c10cbd50">
        <akt:full-name>R. Buskens</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>An adaptive distributed system-level diagnosis algorithm, called Adaptive DSD, suitable for local area networks, is presented. Adaptive DSD assumes a distributed network in which nodes perform tests of other nodes and determine them to be faulty or fault-free. Test results conform to the PMC model of system-level diagnosis. Tests are issued from each node adaptively and depend on the fault situation of the network. Adaptive DSD is proved correct in that each fault-free node reaches an accurate independent diagnosis of the fault conditions of the remaining nodes. Furthermore, no restriction is placed on the number of faulty nodes. The algorithm can diagnose any fault situation with any number of faulty nodes. Adaptive DSD is shown to be a considerable improvement over previous efforts including being optimal in terms of the total number of tests and messages required. The use of the algorithm in an actual distributed network environment and the experimentation within that environment are described</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146665.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>algorithm theory</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>local area networks</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146666">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Probabilistic diagnosis algorithms tailored to system topology</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-25e6b19661e31386631bce631203141e-d5847d20aa886f0f080c2d7d180d4023">
        <akt:full-name>S. Rangarajan</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-97be082765f788b39a293845b488951a-d5847d20aa886f0f080c2d7d180d4023">
        <akt:full-name>D. Fussell</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors previously (1989) presented algorithms in which if at least two processors perform tests on any given processor, the probability of correct diagnosis approaches one as &lt;e1&gt;N&lt;/e1&gt;→∞ if the number of tests performed by each tester on each processor under test is &lt;e1&gt;O&lt;/e1&gt;(log &lt;e1&gt;N&lt;/e1&gt;). The algorithm was based on a comparison approach to probabilistic system-level fault diagnosis in which processors may perform multiple tests on other processors. Here they present a new hierarchical testing algorithm for this model and show that asymptotically efficient testing can be done when the product of number of testersxnumber of tests each performs on a processor grows as &lt;e1&gt;O&lt;/e1&gt;(log &lt;e1&gt;N&lt;/e1&gt;) as &lt;e1&gt;N&lt;/e1&gt;→∞. The method thus preserves the topological flexibility of the previous method, while allowing the number of tests each tester must perform to be tailored to the requirements of the topology</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146666.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel algorithms</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>probabilistic logic</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program verification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>topology</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146668">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Certification trails for data structures</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-26bb0b749f946c002b186625c01a82f6-a4304b994affbf4c1f46d83c44eb5dc4">
        <akt:full-name>G.F. Sullivan</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-336d3f1d7f40797fb9d50cb67de2a407-a4304b994affbf4c1f46d83c44eb5dc4">
        <akt:full-name>G.M. Masson</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The applicability of the certification trail technique, a recently introduced and promising approach to fault detection and fault tolerance, is expanded. Previously, certification trails had to be customized to each algorithm application, but here trails appropriate to wide classes of algorithms are developed. These certification trails are based on common data-structure operations such as those carried out using balanced binary trees and heaps. Any algorithm using these sets of operations can therefore employ the certification trail method to achieve software fault tolerance. Constructions of trails for abstract data types such as priority queues and union-find structures are given. These trails are applicable to any data structure implementation of the abstract data type. It is shown that these ideas lead naturally to monitors for data structure operations</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146668.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>data structures</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146669">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Tolerating failures in the bag-of-tasks programming paradigm</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-08d16cc06c97e4f48def3a75e5ae15f7-e9bc1850c03d46db57a604aa2fc4e800">
        <akt:full-name>D.E. Bakken</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a73d2c4a816791955a4b73ffa332255e-d37f0be5c671612c42c9d2aea3b45742">
        <akt:full-name>R.D. Schlichting</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A simple technique for making distributed programs that are based on the bag-of-tasks programming paradigm, in which the problem space is divided up and parceled out to processes as independent subtasks, fault tolerant is presented. The technique is based on adding a conditional swap operator to Linda, a system for programming distributed applications whose most notable feature is an associative memory called tuple space. The way in which this new operator is used to achieve fault-tolerance in programs is described and illustrated by a simple program for DNA sequencing. Extensions for dynamic subtask creation are described. A straightforward way to implement the atomic swap operator within an existing fault-tolerant version of Linda is also presented</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146669.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel programming</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146670">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault tolerance in parallel implementations of functional languages</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4837f4153c44493fcaed4890b90c64f1-615b46ab6c9caea95a570259612b3616">
        <akt:full-name>R. Jagannathan</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-97df16ef16225feada18396f444bcf44-615b46ab6c9caea95a570259612b3616">
        <akt:full-name>E.A. Ashcroft</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>It is suggested that fault tolerance at the computing-model level is desirable in multiprocessors and that computing models for inherently parallel functional language programs provide for implicit fault-tolerance through temporal and spatial redundancy. While both extensional and intensional computing models can achieve this, it is argued that intensional computing models are much more efficient in tolerating omission and corruption faults. It is shown that demand-driven implementations (instead of data-driven implementations) of the intensional computing model can naturally realize fault-tolerance. The implementation of this approach in a parallel software system based on an intensionally modeled language called GLU is described. It is noted that fault tolerance at the computing model level is transparent to both the parallel applications programmer and the parallel computer system architect</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146670.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>functional programming</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel languages</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel programming</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146672">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Optimal broadcasting in faulty hypercubes</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-122c43daf94964d3ebe5b3b0da3bf953-ac770ae03c966475758049c50afc95de">
        <akt:full-name>B.S. Chlebus</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-87017136694178de185c61777322a9a3-161787978100822a0cb7e7c53ee7519f">
        <akt:full-name>K. Diks</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7f586971c0f37d7e87085d8b2364b014-0a40e69b320f49cf4eba5ed42d038fad">
        <akt:full-name>A. Pelc</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The problem of broadcasting information in an &lt;e1&gt;n&lt;/e1&gt;-node hypercube in which links fail independently with fixed probability 0&lt; &lt;e1&gt;p&lt;/e1&gt;&lt;1 is considered. Information originally held by one node has to be disseminated throughout the network. Messages can be transmitted along links, and in a unit of time every node can transmit to at most one neighbor. Transmissions via faulty links do not succeed. A broadcasting algorithm that disseminates information throughout the whole network in time a log &lt;e1&gt;n&lt;/e1&gt; with probability exceeding 1-&lt;e1&gt;bn&lt;/e1&gt;-c with positive constants &lt;e1&gt;a&lt;/e1&gt;, &lt;e1&gt;b&lt;/e1&gt;, &lt;e1&gt;c&lt;/e1&gt; depending on &lt;e1&gt;p&lt;/e1&gt;, provided that &lt;e1&gt;p&lt;/e1&gt;≤9%, is developed. The algorithm works in expected time &lt;e1&gt;O&lt;/e1&gt;(log &lt;e1&gt;n&lt;/e1&gt;) using an expected number of transmissions &lt;e1&gt;O&lt;/e1&gt;(&lt;e1&gt;n&lt;/e1&gt;), and the probability of disseminating information throughout the network converges to 1 as &lt;e1&gt;n&lt;/e1&gt; grows</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146672.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computational complexity</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>hypercube networks</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146673">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A multiple-fault tolerant sorting network</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-928406ba57de03312354f308394603d5-5488e826ac672b995c9471cd03e6f421">
        <akt:full-name>J. Sun</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-76a40d514b56da6ea7b98b1a437d0dfd-5488e826ac672b995c9471cd03e6f421">
        <akt:full-name>J. Gecsei</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Fault tolerance of balanced sorting networks (BSNs), which have the same performance bound as the Batcher efficient sorting networks, is discussed. Preliminary studies of fault tolerance in a BSN which demonstrated 1-fault tolerance with and without redundant comparators and external permuters and 2-fault tolerance requiring redundancy are reviewed. The present study further develops a &lt;e1&gt;k&lt;/e1&gt;-fault-tolerant BSN design, where &lt;e1&gt;k&lt;/e1&gt;≥2 can be arbitrary in principle, even without redundancy. The performance analysis shows that the new designs achieve much higher probabilities of correct sorting in the presence of faulty comparators than the previously reported designs</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146673.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessor interconnection networks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146674">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault-tolerant gamma interconnection networks</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2692321d36afb9633218dcedde37f31e-f72cd7c4a1fd007be67d2ae5b0c48061">
        <akt:full-name>N.-F. Tzeng</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ac5252fa01923541bd9056131bbde8d8-f72cd7c4a1fd007be67d2ae5b0c48061">
        <akt:full-name>P.-J. Chuang</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Modifications to the gamma interconnection network (GIN), which is composed of 3x3 basic building blocks, with interconnecting patterns between stages following the plus-minus-2i functions, are discussed. The gamma network is modified by altering the interconnecting patterns between stages so as to create totally disjoint paths from any source (&lt;e1&gt;S&lt;/e1&gt;) to any destination (&lt;e1&gt;D&lt;/e1&gt;), ensuring high terminal reliability between every (&lt;e1&gt;S&lt;/e1&gt;, &lt;e1&gt;D&lt;/e1&gt;) pair. The network is called fault-tolerant GIN (FTGIN) since it can tolerate an arbitrary single fault. If several building blocks (i.e. 3x3 switches) are fabricated in one VLSI chip, the layout area and pin count are smaller for the FTGIN than for its GIN counterpart as a result of the change in the interconnection patterns, offering potential cost reduction. A lower bound on the terminal reliability of the FTGIN is derived, showing significant terminal reliability improvement over the conventional gamma network</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146674.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessor interconnection networks</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146676">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Some practical issues in the design of fault-tolerant multiprocessors</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d750dc101814879e91ac33b3842e6725-16daac8bde00f828a9030c49a04118fb">
        <akt:full-name>S. Dutt</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-16bc99ed51f546c35e3b9addc9eb6c5b-2378817c07b1d343bba6566b285eca04">
        <akt:full-name>J.P. Hayes</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A node-covering approach to fault-tolerant design is generalized to apply to a wide class of multiprocessor structures whose structure and failure mechanisms are represented by arbitrary graphs. Several new types of covering graphs are defined, which lead to various design tradeoffs. A new technique for incremental design, using a class of switch implementations that reduce a system's interconnection costs, is presented. The reduction of other cost factors is addressed, including VLSI layout area minimization, efficient transfer of state information during recovery, and the efficient use of local spares. A fast and distributed algorithm for reconfiguration around faults is presented. A review of the general node covering theory is included, focusing on how it models the important practical features of fault-tolerant systems</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146676.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computational complexity</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>graph theory</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessing systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146677">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A multiple copy approach for delivering messages under deadline constraints</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a687bf25756dfd3c981e6255f17d21e4-20a0c85b63d12c039360e1ae6c6d4ee3">
        <akt:full-name>P. Ramanathan</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6ea265a9e8426b009b111a22d5a346a2-72af3e26a814d9068e0d6db9f66c4696">
        <akt:full-name>K.G. Shin</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A scheme to minimize the expected recovery cost incurred by a distributed real-time system as a result of messages failing to meet their deadline is proposed. The scheme is intended for distributed systems with point-to-point interconnection topology. The goal of minimizing the expected cost is achieved by sending multiple copies of a message through disjoint routes, thus increasing the probability of successful message delivery within the deadline. The number of copies of each message to be sent is determined by optimizing the tradeoff between the increase in the message traffic due to additional copies and the decrease in the probability of a message missing its deadline. The objective used to determine the optimal number of copies is formalized, and a numerical example is presented, showing that reductions of more than 70% can be achieved at low to moderate loads. At high loads the reductions are in the range of 10-40%</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146677.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessing programs</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessor interconnection networks</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146678">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>State space generation for degradable multiprocessor systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c1a5e1d18165c852a9bcb511ed693f8a-2078e51559193d120108489c74377675">
        <akt:full-name>B.E. Aupperle</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-709935d245f6cc7659d1301e3d18b68e-7c7c8e7f53b42dc920410685876bf2c5">
        <akt:full-name>J.F. Meyer</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Degradable multiprocessors can have a large number of different structural configurations (states) after being altered by faults. Many such states may be equivalent relative to their overall effect on a system's ability to perform. Hence, depending on the performability measure, the number of states can often be reduced to a much smaller set of representative configurations, one for each equivalence class. An algorithm that generates these representatives and determines the size of each equivalence class is presented. The algorithm assumes that performance is invariant under structural symmetries and thus employs a symmetry permutation group. The information so obtained permits construction of a stochastic process model that supports the performability measure in question. The group-theoretic concepts on which the algorithm is based are presented, and its complexity is considered. The use of the algorithm to construct a performability model is illustrated, and possible extensions are addressed</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146678.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computational complexity</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>group theory</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>stochastic processes</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146680">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Exploiting instruction-level resource parallelism for transparent, integrated control-flow monitoring</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-bf3dc6dafc098b47c6da96fef74cee2f-702fb78df9838d7e54701ed4b2295ae0">
        <akt:full-name>M.A. Schuette</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7d3ba03bf3c6a3362457b488cbf84afd-89faf3b8a8a00b1411632592e9c97ad4">
        <akt:full-name>J.P. Shen</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Available resource-driven control-flow monitoring (ARC), a method for detecting transient errors by using idle resources in processor architectures that use increased degrees of instruction-level parallelism to achieve performance goals, is presented. The focus is on concurrent detection of control-flow errors (CFEs) in VLIW processors. Previous work is reviewed, and ARC monitoring is described as a monitoring computation (MC) that executes concurrently with and continuously monitors the execution of the application computation (AC). The algorithm that integrates the MC into the AC is presented. An analytical derivation of ARC's error coverage is given, and results of applying ARC to four benchmark programs on an actual VLIW processor are reported. Results show that for all the benchmarks, all of the additional operations required by ARC can make use of idle resources, achieving a detection coverage of &gt;99% in all cases. The performance overhead of ARC is found to be negligible, even for programs with relatively few idle resources available</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146680.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel algorithms</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel programming</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146681">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Optimal signature placement for processor-error detection using signature monitoring</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8149c3c3d848c5401a7fdfafae2f9e13-411318b31950a89878213df2d40f4159">
        <akt:full-name>K.D. Wilken</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>An approach that produces optimal placement of justifying signatures for concurrent processor-error detection using signature monitoring is presented. In this approach, placing justifying signatures on nodes and arcs in a directed program control-flow graph is transformed into placing justifying signatures on edges in an undirected, costed graph. A justifying signature is represented in the costed graph by a deleted edge, and optimal placement is reduced to finding a valid minimum-cost deleted edge set. An equivalent problem is finding this set's maximum-cost complement. For order-independent signature functions, the complement set for optimal placement is shown to be a maximum spanning tree. For cyclic codes, the complement set for optimal placement is a new type of graph, a maximum valuation graph (MVG), which is produced by a new algorithm. Using this algorithm, cyclic codes produce significantly less performance overhead than order-independent functions. Experimental results show that the MVG algorithm yields substantial improvement over previous solutions</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146681.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>directed graphs</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel programming</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program compilers</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146682">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A new approach to control flow checking without program modification</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a34132cdf0c2cf1ff37966e82de3ec17-3a4eaecfa0c8ffd291cdc48c34bc05df">
        <akt:full-name>T. Michel</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-19880b0321b405429cf25d1030d0de8a-3a4eaecfa0c8ffd291cdc48c34bc05df">
        <akt:full-name>R. Leveugle</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7f2adbf49afde26b53f35dbf1e6b7292-3a4eaecfa0c8ffd291cdc48c34bc05df">
        <akt:full-name>G. Saucier</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>An approach to concurrent control flow checking that avoids performance and software compatibility problems while preserving a high error coverage and a low detection latency is proposed. The approach is called watchdog direct processing. Extensions of the basic method, taking into account the characteristics of complex processors, are also considered. The architecture of a watchdog processor based on the proposed method is described. Implementation results are reported for a watchdog designed for the Intel 80386sx microprocessor</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146682.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel programming</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146684">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault-tolerant communications processing</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-aeb3bab627047e88df9029548626c18d-7f6f33f09ae51b7e04257ad0a0ed6f40">
        <akt:full-name>V. Cherkassky</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3679cf4908c450c6b9b49183d6ad819c-7f6f33f09ae51b7e04257ad0a0ed6f40">
        <akt:full-name>H. Lari-Najafi</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-bdcb9ea56fdfc180fe0b25b2953cd5d4-7f6f33f09ae51b7e04257ad0a0ed6f40">
        <akt:full-name>R. Rooholamini</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The concept of combining the traditional redundancy approach to fault tolerant design with the error detection and recovery mechanisms built into most of the existing communication protocols is addressed. The goal is to achieve low-cost fault-tolerant communication processing (transparent to the user) in the presence of individual processor board failures. General techniques for achieving system-level fault tolerance are reviewed. The notion of error control (recovery) used in computer communications is discussed and compared with the idea of fault tolerance and error recovery in computer science. A general multiprocessor model of a network processor is introduced, and a novel technique, called redundant task allocation, for achieving fault tolerance in a multiprocessor environment is described. Some of the issues in and approaches to recovery and tolerance of communication protocols after a failure of the underlying hardware are examined. A system prototype is described, and some simulation results are reported</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146684.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessing systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>protocols</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146685">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Performability analysis of distributed real-time systems with repetitive task invocation</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2e686b11fb512acdaa09f7e6294b1039-754a3a070123e89a1a273df3e49032cb">
        <akt:full-name>S.M.R. Islam</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a6d6ff73a9931f5bc5c52b1801f7da09-754a3a070123e89a1a273df3e49032cb">
        <akt:full-name>H.H. Ammar</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>An algorithm and a methodology for the performability analysis of a class of repairable distributed real-time systems are presented. Distributed real-time workloads generally consist of repetitive concurrent tasks with known cycle and deadline times. The planning cycle of real-time distributed systems, which normally consists of several task invocations, is first identified. A repairable distributed real-time system that can be described by a cyclic Markov reward model between invocation tasks is considered. The performability distribution at the end of the planning cycle is determined by performing repeated convolution of performability densities between task invocations. This convolution operation is efficiently done using the Laguerre coefficients. The algorithm numerically determines both moment and distribution of performability in &lt;e1&gt;O&lt;/e1&gt;(&lt;e1&gt;N&lt;/e1&gt;3)</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146685.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computational complexity</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel algorithms</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>real-time systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146686">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The RM recovery services</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ba1e88d96cf01bca19ef9bffe2574e46-81f2c594f11ff2e14c6682e3c0ce4d22">
        <akt:full-name>D.V. Pitts</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A mechanism, the recovery manager (RM), that supports the recovery data in a distributed system of workstations is presented. The recovery services provided by RM do not provide protection against media failures such as head crashes, but do support system and software crash recovery on workstations with limited disk storage. RM services are intended to support data recovery for long-lived operations such as imaging and numerical applications. The services discussed rely on the shadowing of data and support a two-phase commit protocol (2PC) in a distributed environment. The system model in which the RM services operate, RM itself, and the services it provides are described. The correctness criteria for RM services are defined. Work related to RM and the optimization of RM for long-lived operations are discussed. A proof of correctness of the services is given</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146686.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program verification</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146687">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Recovery concepts for data sharing systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d06ef4486a127b044f27e3d42dc3de54-a73e6220c6a4bb6aef1fdf27a2cca973">
        <akt:full-name>E. Rahm</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Crash and media recovery problems that have to be addressed in data sharing systems are addressed. Recovery is complicated by dependencies on other functions such as buffer management and concurrency control. Furthermore, a global log file is to be constructed where the modifications of committed transactions are reflected in chronological order. Logging and recovery protocols that employ the primary copy approach for concurrency/coherence control are proposed for loosely coupled data sharing systems. A comparison with existing data sharing system shows that the protocols support high performance during normal processing as well as efficient recovery that provides high availability</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146687.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146689">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Burst and unidirectional error detecting codes</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7178ed0a0e5b4fe7a545b7a69970659c-c2aea188db0033c2c6d52db492287389">
        <akt:full-name>S. Al-Bassam</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a0392234f049693b1fedb025d91a345a-ae627ebbf8f37687b7f75087685a7fc7">
        <akt:full-name>B. Bose</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-76db8cfb23965443e676280ec3cadc53-ae627ebbf8f37687b7f75087685a7fc7">
        <akt:full-name>R. Venkatesan</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>It is proved that codes devised by J. Berger (see Inf., and Control. vol.4, p.68-73, (1961)) that detect random bursts of length &lt;e1&gt;b&lt;/e1&gt; and simultaneously detect any number of unidirectional errors (&lt;e1&gt;b&lt;/e1&gt;-bED/AUED codes) are optimal. The construction is modified in two ways: (1) to obtain &lt;e1&gt;b&lt;/e1&gt;-bED/&lt;e1&gt;s&lt;/e1&gt;-UED codes in which a random burst of length &lt;e1&gt;b&lt;/e1&gt; and up to &lt;e1&gt;s&lt;/e1&gt; unidirectional errors are detected, and (2) to obtain &lt;e1&gt;b&lt;/e1&gt;-bED/&lt;e1&gt;s&lt;/e1&gt;-UbED codes in which a random burst of length &lt;e1&gt;b&lt;/e1&gt; and a unidirectional burst of length &lt;e1&gt;s&lt;/e1&gt; are detected. A lower bound on the number of check bits for such codes is obtained. The lower bounds indicate that the proposed &lt;e1&gt;b&lt;/e1&gt;-bED/&lt;e1&gt;s&lt;/e1&gt;-UED codes are close to optimal and the &lt;e1&gt;b&lt;/e1&gt;-bED/&lt;e1&gt;s&lt;/e1&gt;-UbED codes are asymptotically optimal</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146689.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>error detection codes</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146690">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Pattern sensitive fault testing of RAMs with built-in ECC</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5b9d489efad0775f2de8ca496238937b-907d7a2a7a165a50c3248ffacce71024">
        <akt:full-name>M. Franklin</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-583e845329bab667378f87353818cf3a-907d7a2a7a165a50c3248ffacce71024">
        <akt:full-name>K.K. Saluja</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The problem of testing RAMs with different built-in error-correction-coding (ECC) capabilities is formulated. The basics of ECC in RAMs are reviewed, and some of the implementation aspects are described. It is shown that if memories using separable linear codes satisfy certain conditions, it is always possible to apply arbitrary patterns to all check bits. An upper bound on the number of writes required to apply the required patterns to a neighborhood is established. An efficient algorithm for testing the information bits and check bits of an &lt;e1&gt;N&lt;/e1&gt;-bit memory array for 5 cell neighborhood pattern sensitive faults in &lt;e1&gt;O&lt;/e1&gt;(&lt;e1&gt;N&lt;/e1&gt;) reads and writes is provided. The use of the method is demonstrated by a case study</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146690.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>built-in self test</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error correction codes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault location</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>random-access storage</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146691">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault-tolerant memory design in the IBM application system/400</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-406eed9df6582b8f16b842dfb8935e2b-ad68e71a2e17f080a263f33d726cede8">
        <akt:full-name>C.L. Chen</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9c202f901f6544bd78daec8318dc70e9-ad68e71a2e17f080a263f33d726cede8">
        <akt:full-name>L.E. Grosbach</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Some of the fault-tolerant features of the IBM AS/400 main storage subsystem are described, with particular attention to the error-correcting code for the 4-bit-per-chip memory array. Single 4-bit symbol errors are automatically corrected, and double symbol errors are detected and corrected with additional machine cycles. The procedure, which is implemented in hardware, is described. The AS/400 storage model and management and the memory maintenance strategy are described</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146691.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>IBM computers</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error correction codes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>storage management</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146692">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Gracefully degradable disk arrays</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-970e38376d03647128f9a82be37402fb-ff31125a13191b940ed2db667fdf8260">
        <akt:full-name>A.L.N. Reddy</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-37fa5881bead9f26c4f49dd416f07d79-f364c4a7a3de3591e08829489d8f5e77">
        <akt:full-name>P. Banerjee</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The problem of designing fault-tolerant disk arrays that are not susceptible to 100% load increases on the functional disks when one of the disks in the system fails is addressed. A technique that combines the advantages of parity schemes and the traditional dual copy methods and offers a wide variety of options in providing fault-tolerance is proposed. A theoretical framework for solving the problem is presented and a number of constructive techniques are proposed. By utilizing the same amount of hardware as the earlier methods but with a better data organization and a different reconstruction technique, the system yields better performance during a failure. Merging two parity groups as a reconfiguration strategy is shown to have a number of benefits, such as reduced hardware overhead and improved reliability. A combination of block designs and the proposed reconfiguration strategy results in a highly reliable disk array with the same or less overhead as the earlier approaches and better performance during a failure</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146692.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>magnetic disc storage</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146694">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>An experimental study on software structural testing: deterministic versus random input generation</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c8967540264a7e88f64bca023dfb97a3-2e4a953a0e7e54a20825a300d8820ccf">
        <akt:full-name>P. Thevenod-Fosse</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2065250d635ff34d40ec9af36d223791-1bfb595fb575b4b88fc71a91aaa5d9d0">
        <akt:full-name>H. Waeselynck</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-950fb0afb6b8f14520cc66c0060fb752-ee17589e2f4e4807225d09aca7c72844">
        <akt:full-name>Y. Crouzet</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The fault revealing power of different test patterns derived from ten structural test criteria currently referred to in unit testing is investigated. Experiments performed on four programs that are pieces of a real-life software system from the nuclear field are reported. Three test input generation techniques are studied: (1) deterministic choice, (2) random selection based on an input probability distribution determined according to the adopted structural test criterion, and (3) random selection from a uniform distribution on the input domain. Mutation analysis is used to assess the test set efficiency with respect to error detection. The experimental results involve a total of 2914 mutants. They show that structural statistical testing, which exhibits the highest mutation scores, leaving alive only six from 2816 nonequivalent mutants within short testing times, is the most efficient. A regards unit testing of programs whose structure remains tractable, the experiments show the adequacy of a fault removal strategy combining statistical and deterministic test patterns</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146694.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146695">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Evaluation of deterministic fault injection for fault-tolerant protocol testing</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0d393de31edae3113cecc83042fc36a3-79b42392e64cce7f16cef069cc72f111">
        <akt:full-name>K. Echtle</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-549ce1aa336d8b24f4f1925d5f25c851-79b42392e64cce7f16cef069cc72f111">
        <akt:full-name>Y. Chen</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A deterministic test strategy consisting of deterministic fault injection at the message level is investigated. Messages sent by faulty units are replaced by such wrong messages that cause all program parts of the faultless protocol units to be executed subsequently. Since this well-aimed fault injection poses complex problems, heuristics based on the program flow of previous injections of wrong messages is dynamically applied. The program parts to be tested are selected with increasing granularity until either a design error is found or sufficient structural coverage is reached, which reflects the portion of tested program parts. Using a simplified program model, an algebraic analysis of the structural coverage and the design error coverage, which is the probability to reveal an existing design error, is carried out. It is shown that fault-tolerant protocol testing by deterministic fault injection achieve better coverages than by random fault injection</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146695.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>protocols</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146696">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Program fault tolerance based on memory access behavior</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-be47d82b06a7339c23b1994a6a285053-33f81522a4526660f042a9877a8a3ebf">
        <akt:full-name>N.S. Bowen</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0ec2cf85233e1fc733856281ce15e9d1-54980d5d550395544b15585eb98f16ad">
        <akt:full-name>D.K. Pradhan</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Fault observability based on the behavior of the memory references is studied. As opposed to traditional studies that view memory as one large entity that must completely work to be considered reliable, this study emphasizes the usage patterns of a particular program's memory. Expressions for the successful execution of a program that takes into account the usage of the data are developed. Three variations that depend on whether the program's storage is pre-allocated, dynamically allocated, or constrained in allocation are presented. A theory is proposed to explain the phenomenon that increased workloads lead to increased failure rates, which has been observed in several studies. The model is used to study several program traces, and is shown that increased workloads could cause an increase of the observed failure rates in the range of 27% to 53%</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146696.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146698">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Distributed reconfiguration and recovery in the advanced architecture on-board processor</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b7f4d251de48da8de1ae7256e494cbee-ff071331ae1ce2079231803acae0c994">
        <akt:full-name>M.J. Iacoponi</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a7abc8ca003ce9071e51e10a91dd5cab-ff071331ae1ce2079231803acae0c994">
        <akt:full-name>S.F. McDonald</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The reconfiguration and recovery approach employed in the advanced architecture on-board processor (AAOP), a fault-tolerant multiprocessor for space applications, is presented. The AAOP is designed to accommodate large numbers of processing elements organized in a distributed fault-tolerant system. The operation of distributed reconfiguration is discussed, and the recovery time is analyzed. Performance of the reconfiguration algorithm under inconsistent observer conditions and against multiple faults is considered. the chordal skiplink ring topology employed in the AAOP is analyzed with respect to its node-pair distance distribution as a function of the number of faults injected. Extensions of this topology are also considered. These would reduce the network diameter and increase fault robustness but also increase the network management overhead</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146698.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146699">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>On the reconfiguration of memory arrays containing clustered faults</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f1258a7fd8201ab0be5875475ae9c67b-256da67ebc7a13d4397ed9e568931b9d">
        <akt:full-name>D.M. Blough</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Reconfiguration of memory arrays using spare rows and spare columns, a useful technique for yield enhancement of memories, is considered under a compound probabilistic model that shows clustering of faults. It is shown that the total number of faulty cells that can be tolerated when clustering occurs is larger than when faults are independent. It is shown that an optimal solution to the reconfiguration problem can be found in polynomial time for a special case of the clustering model. Efficient approximation algorithms are given for the situation in which faults appear in clusters only and the situation in which faults occur both in clusters and singly. It is shown through simulation that the computation time required by this algorithm to repair large arrays containing a significant number of clustered faults is small</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146699.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>memory architecture</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>storage management</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146700">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Reconfiguration algorithm for fault-tolerant arrays with minimum number of dangerous processors</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-adf4a1df71c0aea0377685f66e3c7998-88b63aa5e62366738a9712d7b759abec">
        <akt:full-name>C. Chen</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3552edcf9e2e874ca81764f08eba92eb-88b63aa5e62366738a9712d7b759abec">
        <akt:full-name>A. Feng</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b445b5d5de65a43467fadd701624fc13-611d1c85ae9a3e074e427d894381dc69">
        <akt:full-name>T. Kikuno</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-89d3b7dd777e8dc9d30cf5f67971a505-88b63aa5e62366738a9712d7b759abec">
        <akt:full-name>K. Torii</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>An algorithm for a reconfiguration problem (called the SPA problem) for &lt;e1&gt;n&lt;/e1&gt;x&lt;e1&gt;n&lt;/e1&gt; ordinary processors using spare processors is presented. The SPA problem is to find an assignment of spare processors to faulty processors that minimizes the number of dangerous processors. Here, dangerous processors are nonfaulty processors for which there remains no spare processor to be assigned if one more fault occurs. An &lt;e1&gt;O&lt;/e1&gt;(&lt;e1&gt;n&lt;/e1&gt;2) algorithm is developed for a basic SPA problem where 2&lt;e1&gt;n&lt;/e1&gt; spare processors are provided. An extension of the SPA problem is defined, and several interesting properties are clarified in order to solve it. In the extension, the spare processors ae assumed to become faulty</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146700.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146702">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A distributed fault tolerant architecture for nuclear reactor and other critical process control applications</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7a7045811a8b7be1db4671be5925945a-a196721769d10ee30e3f59dc2895e818">
        <akt:full-name>M. Hecht</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-99cee3623970ce1d387946e3a5ad9576-a196721769d10ee30e3f59dc2895e818">
        <akt:full-name>J. Agron</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0161d4306db9375d1b262302ff453833-a196721769d10ee30e3f59dc2895e818">
        <akt:full-name>H. Hecht</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-151750ac27cb4c853048ce94158da6cb-eef8482e5a4952a06655a83bbd7691b9">
        <akt:full-name>K.H. Kim</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A distributed fault tolerant system for process control that is based on an enhancement of the distributed recovery block (DRB) is described. Fault tolerance provisions in the system cover software faults by use of the DRB; hardware faults by means of replication and the DRB; system software faults by means of replication, loose coupling, periodic status messages, and a restart capability; and network faults by means of replication and diverse interconnection paths. Maintainability is enhanced through an automated restart capability and logging function resident on a system supervisor node. The system, called the extended distributed recovery block, or EDRB, has been implemented and integrated into a chemical processing system</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146702.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer architecture</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>nuclear engineering computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>process computer control</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>real-time systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146703">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Approaches to design of temporary blackout handling capabilities and an evaluation with a real-time tightly coupled network testbed</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-151750ac27cb4c853048ce94158da6cb-eef8482e5a4952a06655a83bbd7691b9">
        <akt:full-name>K.H. Kim</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-bc4d52fb478dac60a554038ffb474b4e-cd030f2b45fa07035423428d19fc44f6">
        <akt:full-name>W.J. Guan</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ba08e5845fb554b14b0922d60d5941c6-cd030f2b45fa07035423428d19fc44f6">
        <akt:full-name>A. Damm</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-98908c0302ee95d4bfee1305c6029473-cd030f2b45fa07035423428d19fc44f6">
        <akt:full-name>J.A. Rohr</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The problem of designing real-time tightly coupled networks (TCNs) that can survive through temporary blackout (TB) events that disrupt orderly operation of electronic components and erase the contents of all registers and RAMs is treated. Three approaches are considered. The first, in existence for some time although not practiced extensively, relies on the software designer for highly application-dependent design of all parts of TB handling procedures. The second is a fully application-transparent approach to state saving based on the use of recoverable regions. The third, a compromise between the first two approaches, uses time-driven insertion of saving points and relies on the software designer to determine the membership of the state vector. An experiment that involved designing TB handling capabilities into a real-time TCN testbed using each approach is reported. The testbed-based evaluation results validated the practicality of the two new approaches and indicated the complementary relationship between them and the first approach</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146703.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer networks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>real-time systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146704">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The role of formal methods in the requirements analysis of safety-critical systems: a train set example</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-56789882614ed0eef4aa79da36f7a376-a3692f687fdd2b734ae0a90716971f14">
        <akt:full-name>A. Saeed</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-bbbc444424abcf9be8ce430c10e7956f-a3692f687fdd2b734ae0a90716971f14">
        <akt:full-name>R. de Lemos</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-dc734b5ef7f926a30e2a76bd6cce2316-2ba9030b54c44ffb3596ffd6b7449e56">
        <akt:full-name>T. Anderson</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A general framework for the formal specification and verification of the critical requirements in the development of safety-critical systems is presented. The framework is based on a clear separation of the mission and critical issues during requirements analysis. Analysis of the critical issues is performed in two phases. The first phase identifies those real world properties relevant to the critical requirements: the physical laws or rules of operation, and the system hazards. In the second phase, the interface between the system and its environment is identified, and the behavior required at this interface is specified. The utilization of different formal models, namely, a logical formalism (timed history logic) and a net formalism (predicate-transition nets), respectively, is proposed for the two phases. To illustrate the framework, an example based on a train set crossing is presented</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146704.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>formal specification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program verification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>real-time systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146706">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>System level diagnosis: Combining detection and location</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5ba7587ccd6d340468fb83ea2c4b7e7a-4364fdb68266edb7b0ec9cf7dcb70760">
        <akt:full-name>N.H. Vaidya</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0ec2cf85233e1fc733856281ce15e9d1-54980d5d550395544b15585eb98f16ad">
        <akt:full-name>D.K. Pradhan</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The problem of system recovery from a large number of faults is addressed. Correlated transient upsets can corrupt the state of a large number of nodes (subsystems). In such a condition, locating faulty nodes can be difficult due to the large number of periodic tests that may have to be carried out. A new approach to system level diagnostics that combines fault detection and location and can detect the fault condition in the event of large number of faults is proposed. Detection allows alternate techniques of diagnosis or at the very least a safe shut-down. This approach is termed safe diagnosis as it provides a measure of safety for critical systems. It is demonstrated that safe diagnosis can be achieved with a small incremental cost. Results that characterize systems that admit a specified level of safe diagnosis are included. Diagnosis algorithms for such systems are presented. It is shown that the complexity of safe diagnosis algorithms is comparable to the diagnosis algorithms for systems performing only fault location</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146706.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault location</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>formal specification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146707">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The &lt;e1&gt;t&lt;/e1&gt;(&lt;e1&gt;n&lt;/e1&gt;-1)-diagnosability and its applications to fault tolerance</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-98413914872435e9e48333bc30be80be-008684770d367499c0f8cae4d409f498">
        <akt:full-name>J. Xu</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A system composed of &lt;e1&gt;n&lt;/e1&gt; units is said to be &lt;e1&gt;t&lt;/e1&gt;/( &lt;e1&gt;n&lt;/e1&gt;-1)-diagnosable if, given any complete collection of test results, the set of faulty units can be isolated to within a set of at most &lt;e1&gt;n&lt;/e1&gt;-1 units provided that the number of faulty units does not exceed &lt;e1&gt;t&lt;/e1&gt;. Based on some recently discovered properties of &lt;e1&gt;t&lt;/e1&gt;/(&lt;e1&gt;n&lt;/e1&gt;-1)-diagnosability, the author examines three canonical classes of systems-chains, loop and &lt;e1&gt;H&lt;/e1&gt;2r,n systems-and presents optimal &lt;e1&gt;t&lt;/e1&gt;/(&lt;e1&gt;n&lt;/e1&gt;-1) diagnosable configurations for these classes. Incorporating these results into the scheme of D.M. Blough and A. Pelc (see 20th Inst. Symp. on Fault-Toler. Computing, pp.316-323 (1990)), the author gives an improved diagnosis and repair algorithm for constant-degree multiprocessor systems. A software fault tolerance scheme that utilizes &lt;e1&gt;t&lt;/e1&gt;(&lt;e1&gt;n&lt;/e1&gt;-1)-diagnosis technique is also proposed</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146707.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessing systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146708">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Design of multiprocessor systems for concurrent error detection and fault diagnosis</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-391a1fd1c1aafc7a28b7300a3276afeb-0b8416082105e9d9699f2f51937ee759">
        <akt:full-name>B. Vinnakota</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-73885f0e72beb9ed0735ce153bd80e1e-0b8416082105e9d9699f2f51937ee759">
        <akt:full-name>N.K. Jha</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Results on the design of systems using algorithm-based fault tolerance (ABFT), a low-overhead fault tolerance scheme for high-speed parallel processing systems, are presented. Bounds on the diagnosability of the system and the number of checks needed to design a unit system of given capability are derived. A procedure for forming the target fault-tolerant system from the unit system is introduced. The procedure is applicable to a wide range of systems in which processors may share data elements. The applications of the design scheme are illustrated through examples</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146708.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>error detection</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault location</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessing systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel processing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146709">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
        <support:year-of>1991</support:year-of>
        <support:has-pretty-name>1991</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Integrity S2: a fault-tolerant Unix platform</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-cfeb5de6e2f5cb28bd8a93b49e0b5d78-290e65ef11763d32d77b249cbef0aa31">
        <akt:full-name>D. Jewett</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A description is given of Integrity S2, a fault-tolerant, Unix-based computing system designed and implemented to provide a highly available, fault-tolerant computing platform for Unix-based applications. Unlike some other fault tolerant computing systems, no additional coding at the user-level is required to take advantage of the fault-tolerant capabilities inherent in the platform. The hardware is an RISC-based triple-modular-redundant processing core, with duplexed global memory and I/O subsystems. The goals for this machine, the system architecture, its implementation and resulting performance, and the hardware and software techniques incorporated to achieve fault tolerance are discussed. Fault tolerance has been accomplished without compromising the programmatic interface, operating system or system performance</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-3916" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1991</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=3916</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1991'>
            <support:year-of>1991</support:year-of>
            <support:has-pretty-name>1991</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/341/3916/00146709.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>Unix</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reduced instruction set computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00243614">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1992'>
        <support:year-of>1992</support:year-of>
        <support:has-pretty-name>1992</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Branch recovery with compiler-assisted multiple instruction retry</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-cf305cc1f919b9a74aede6d4525cb216-ae0312c143f2fc719ad9eac789f00b71">
        <akt:full-name>N.J. Alewine</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6eb403c1584e8ceb20ff146cff381a61-ae0312c143f2fc719ad9eac789f00b71">
        <akt:full-name>S.-K. Chen</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-bce970acd2da3f0becec51e9897fec9b-ae0312c143f2fc719ad9eac789f00b71">
        <akt:full-name>C.-C. Li</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fb38f502674924925e2c4a2e8880d1bc-978117774e048d6deaba362337d7988c">
        <akt:full-name>W.K. Fuchs</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3bdf83cf7373eb39283a685e6240f8ab-ae0312c143f2fc719ad9eac789f00b71">
        <akt:full-name>W.-M. Hwu</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A compiler-assisted approach to implementing multiple instruction retry has recently been developed by C.-C. J Li et al. (1991). They extend compiler-assisted multiple instruction retry to include a broad class of code execution failures. Five benchmarks were used to measure the performance penalty of hazard resolution. Results indicate that the enhanced pure software approach can produce performance penalties consistent with existing hardware techniques. A combined compiler/hardware resolution strategy is also described and was evaluated. Experimental results indicate a lower performance penalty than with either a totally hardware or totally software approach</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-6274" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1992</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=6274</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1992'>
            <support:year-of>1992</support:year-of>
            <support:has-pretty-name>1992</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/420/6274/00243614.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315616">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Durable memory RS/6000 system design</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d451c9fc1bd9f3f2b1aad72d31d1197f-8c9d0d94746f146b852a0d2e6a1dd598">
        <akt:full-name>M. Abbott</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9c7e93285b4bca074dc6f768cc020c7e-713b8747ace9da464157ba46a0378f46">
        <akt:full-name>D. Har</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fea7e19d50c6d0b4b440131dd26efc7a-8c9d0d94746f146b852a0d2e6a1dd598">
        <akt:full-name>L. Herger</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-cc0fa7959f5c23d3dd64d0509fc85353-8c9d0d94746f146b852a0d2e6a1dd598">
        <akt:full-name>M. Kauffmann</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d5e8c8fb5c289191938a7a81f42527d1-713b8747ace9da464157ba46a0378f46">
        <akt:full-name>K. Mak</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-097f2ccde0a586b2448f589797c4a461-8c9d0d94746f146b852a0d2e6a1dd598">
        <akt:full-name>J. Murdock</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-067174b1be60de150addd4a5ad59e0a8-713b8747ace9da464157ba46a0378f46">
        <akt:full-name>C. Schulz</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-90544a4431d694ba746128b001ef59e3-8c9d0d94746f146b852a0d2e6a1dd598">
        <akt:full-name>T.B. Smith</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2fd1ace81cf813335e00a3dd06d70f1c-713b8747ace9da464157ba46a0378f46">
        <akt:full-name>B. Tremaine</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2385cd5ac530266019aeeeebfdff68ea-8c9d0d94746f146b852a0d2e6a1dd598">
        <akt:full-name>D. Yeh</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-de871de86dcd1aa7f31b40f4da8f0964-8c9d0d94746f146b852a0d2e6a1dd598">
        <akt:full-name>L. Wong</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The DM/6000 prototype is a fault-tolerant/durable-memory RS/6000. The main storage of this system is battery backed so as to maintain memory content across prolonged power interruptions. In addition, there are no single points of failure, and all likely multiple failure scenarios are covered. The prototype is intended to match the data integrity and availability characteristics of RAID5 disks. Redundancy is managed in hardware and in transparent to the software; application programs and the operating system (AIX) can run unmodified. The prototype is based on the IBM PowerPC 601 microprocessor operating at 80 MHz and is equivalent in performance and software appearance to a conventional 4-way shared bus, cache coherent, symmetric multiprocessor (SMP), with 4 gigabytes of non-volatile main storage</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315616.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>data integrity</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>integrated memory circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>microprocessor chips</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>redundancy</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315617">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Test pattern generation for path delay faults in synchronous sequential circuits using multiple fast clocks and multiple observation times</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5487c398e59bbeffcfd97acf4cf22759-17993b0aade44c398bb017628635dcc3">
        <akt:full-name>P. Uppaluri</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f762deaf1836e8c1f1e137d2a1bc6daf-17993b0aade44c398bb017628635dcc3">
        <akt:full-name>I. Pomeranz</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-965dc2d124659a370908152afc40e8f5-17993b0aade44c398bb017628635dcc3">
        <akt:full-name>S.M. Reddy</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The problem of test generation for path delay faults in synchronous sequential circuits is addressed. In existing testing methods, a single fast clock cycle is used to activate path delay faults and a fault is said to be detected only if the fault free response is different from the faulty response at a single output and at a specified time unit in the test sequence. We refer to these methods as single fast clock cycle and single observation time testing methods. We show that testable faults may exist, which are untestable using a single fast clock cycle and a single observation time. Such faults are testable when multiple fast clock cycles and/or multiple observation times are used. A test generation procedure is given that uses multiple fast clock cycles and multiple observation times. Experimental results are presented on MCNC synthesis benchmarks to demonstrate the effectiveness of the proposed strategy in increasing the fault coverage and reducing the test length</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315617.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>sequential circuits</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315618">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Dynamic state and objective learning for sequential circuit automatic test generation using recomposition equivalence</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-650a783e92d88c74408ea15ff8845301-75281ab2affd52cb82eab7a2addb8339">
        <akt:full-name>Xinghao Chen</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-221d5d1d3aa4ffcbe0a1f9e3aab5b4ca-75281ab2affd52cb82eab7a2addb8339">
        <akt:full-name>M.L. Bushnell</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Automatic test pattern generation (ATPG) for sequential circuits involves making decisions in the state and combinational search spaces defined by a sequential circuit. The search spaces are exponential in the memory elements and primary inputs, respectively, making exhaustive search impractical. Since the circuit topology does not change, ATPG search for different faults may share identical decision spaces. However, existing sequential circuit ATPG algorithms are not capable of recognizing identical search decision spaces. Consequently, they reenter previously-explored decision spaces. We propose a dynamic learning algorithm that identifies previously-explored decision spaces during reverse-time sequential circuit test generation based on decomposition equivalences. This algorithm runs two and 3.3 times faster than GENTEST and HITEC, respectively, on the 1989 ISCAS benchmarks, compresses 24% of the learned information and identifies 85% of all previously-explored decision spaces by state covering. We provide theorems with proofs, examples and results</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315618.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>combinatorial circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>learning systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>search problems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>sequential circuits</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315619">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Checkpoint/rollback in a distributed system using coarse-grained dataflow</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-eeadadeaa871d9bdffc34d79ba8512dd-f7f02c726db4c12d77a3052bd03381a5">
        <akt:full-name>D. Cummings</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ecad4ee3893f34384a1ce1ab0cce600c-f7f02c726db4c12d77a3052bd03381a5">
        <akt:full-name>L. Alkalaj</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The Common Spaceborne Multicomputer Operating System (COSMOS) is a spacecraft operating system for distributed memory multiprocessors, designed to meet the on-board computing requirements of long-life interplanetary missions. One of the main features of COSMOS is software-implemented fault-tolerance, including 2-way voting, 3-way voting, and check point/rollback. This paper describes the COSMOS distributed checkpoint/rollback approach, which exploits the fact that a COSMOS application program is based on a coarse-grained dataflow programming paradigm and therefore most of the state of a distributed application program is contained in the data tokens. Furthermore, all computers maintain a consistent view of this dynamic state, which facilitates the implementation of a coordinated checkpoint</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315619.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>aerospace computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>concurrency control</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>distributed memory systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>operating systems (computers)</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>space vehicles</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315620">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Highly available cluster: a case study</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-734b8c6399127f55be0ea8457e2cc1c3-0a6da8e5d8ad36fe307f203c46316bf7">
        <akt:full-name>A. Azagury</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-62494865494502ccbd9f564c0b1b5d0b-0a6da8e5d8ad36fe307f203c46316bf7">
        <akt:full-name>D. Dolev</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c6f3f8c51dfd5ace7a4896c92d8b47bd-0a6da8e5d8ad36fe307f203c46316bf7">
        <akt:full-name>G. Goft</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7fa9d9ec9da569baf70663d4e70955e2-0a6da8e5d8ad36fe307f203c46316bf7">
        <akt:full-name>J. Marberg</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1dd3fd5eb2020a904c7d60be9eb35dd4-0a6da8e5d8ad36fe307f203c46316bf7">
        <akt:full-name>J. Satran</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The methodology and design of a system that provides highly available data in a cluster is presented. A highly available cluster consists of multiple machines interconnected by a common bus. Data is replicated at a primary and one or more backup machines. Data is accessed at the primary, using a location independent mechanism that ensures data integrity. If the primary copy of the data fails, access is recovered by switching to a backup copy. Switchover is transparent to the application, hence called seamless switchover. The fault model is fail-stop. The entire cluster is resilient to at least single failures. Designating data as highly available is selective in scope, and the overhead of replication and recovery is incurred only by applications that access highly available data. An experimental prototype was implemented using IBM AS/400 machines and a high-speed bus with fiber-optic links</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315620.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>data integrity</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>distributed databases</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>local area networks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system buses</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315621">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Optimal fault-tolerant leader election in chordal rings</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d18002c73c606cb01183983a5d6ace57-e9c5940e67b00b9445038ee174acb492">
        <akt:full-name>B. Mans</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-25ce69ed1bdcee4270767db2530ba580-e9c5940e67b00b9445038ee174acb492">
        <akt:full-name>N. Santoro</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Chordal rings (or circulant graphs) are a popular class of fault-tolerant network topologies which include rings and complete graphs. For this class, the fundamental problem of leader election has been extensively studied assuming either a fault-free system or an upper-bound on the number of link failures. We consider chordal rings where an arbitrary number of lines has failed and a processor can only detect the status of its incident links. We shows that a leader election protocol in a faulty chordal ring requires only O(n log n) messages in the worst-case, where n is the number of processors. Moreover, we show that this is optimal. If the network is not partitioned, the algorithm will detect it and will elect a leader. In case the failures have partitioned the network a distinctive element will be determined in each active component and will detect that a partition has occurred; depending on the application, these distinctive elements can thus take the appropriate actions</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315621.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>message passing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessor interconnection networks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel architectures</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315622">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault-tolerant routing strategy in hypercube systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9bd69d96d831c4bc457c3039a097849b-6f2c535ae9d14034562055d3d1ba1ec9">
        <akt:full-name>Ge-Ming Chiu</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-aec68b8f3137c39b53a0f6ffe2aac856-6f2c535ae9d14034562055d3d1ba1ec9">
        <akt:full-name>Shui-Pao Wu</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We investigate fault-tolerant routing which aims at finding feasible minimal paths in a faulty hypercube. The concept of an unsafe node is adopted to identify nodes that may cause routing difficulties. We propose a set of stringent criteria to reduce the number of fault free nodes that are labeled unsafe. Routing efficiency can thus be improved. An algorithm is presented to facilitate the routing of messages. It only requires each node to maintain information about its local state, whereby each node is in one of four states. The issue of deadlock freeness is also addressed. Furthermore, an alternative deadlock-free routing algorithm, which requires a constant of five virtual networks in wormhole routing, is presented</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315622.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315623">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Connectivity and fault tolerance of multiple-bus systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9f127cc12b058eb126609fe1704b4011-9b6e0dc2abd7e009f85a379717071dbd">
        <akt:full-name>Hung-Kuei Eu</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fddaa90ad00ac08ad1c2fd80936eaa56-9b6e0dc2abd7e009f85a379717071dbd">
        <akt:full-name>J.P. Nayes</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We study multiple-bus computer systems that are fault tolerant in the sense that processors remain connected in the presence of component faults such as faulty processors and buses, and faulty links between processors and buses which may represent partial bus failures. We propose several graph-theoretic models for this purpose. A processor-bus-link (PBL) graph is introduced to represent a multiple-bus system component adjacency graphs derived from the PBL graph exhibit the connectivity of the system's components, We then transform the problem of analyzing fault tolerance of multiple-bus systems into the simpler problem of finding the node connectivity of component adjacency graphs. Minimum critical fault sets, each of which is a minimum set of faulty components whose removal disconnects processors, are also characterized</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315623.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>graph theory</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessing systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system buses</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315624">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Training techniques to obtain fault-tolerant neural networks</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c2fe4e8fdc29e601e7feae1577ef70ca-16968aea60f18593cd78e5ffc1656604">
        <akt:full-name>Ching-Tai Chin</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b451915c2e1da1f04e292ef7c00a467e-16968aea60f18593cd78e5ffc1656604">
        <akt:full-name>K. Mehrotra</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-611674b92ecf8ec05661f663300e6666-16968aea60f18593cd78e5ffc1656604">
        <akt:full-name>C.K. Mohan</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4317fc5839f0f141b6901ebbc08f77e7-16968aea60f18593cd78e5ffc1656604">
        <akt:full-name>S. Rankat</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>This paper addresses methods of improving the fault tolerance of feedforward neural nets. The first method is to coerce weights to have low magnitudes during the backpropagation training process, since fault tolerance is degraded by the use of high magnitude weights; at the same time, additional hidden nodes are added dynamically to the network to ensure that desired performance can be obtained. The second method is to add artificial faults to various components (nodes and links) of a network: during training. The third method is to repeatedly remove nodes that do not significantly affect the network: output, and then add new nodes that share the load of the more critical nodes in the network. Experimental results have shown that these methods can obtain better robustness than backpropagation training, and compare favorably with other approaches</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315624.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>backpropagation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>feedforward neural nets</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>learning (artificial intelligence)</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315625">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Experimental evaluation of the fail-silent behavior in computers without error masking</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1720fd2fb1ef438764ef5d3fcf30c7d6-fc41063b639c1b0866ee09156301a9af">
        <akt:full-name>H. Madeira</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d755502a9e2fff3e24f2e43744bbbca1-fc41063b639c1b0866ee09156301a9af">
        <akt:full-name>J.G. Silva</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Traditionally, fail-silent computers are implemented by using massive redundancy (hardware or software). In this research we investigate if it is possible to obtain a high degree of fail-silent behavior from a computer without hardware or software replication by using only simple behavior based error detection techniques. It is assumed that if the errors caused by a fault are detected in time it will be possible to stop the erroneous computer behavior, thus preventing the violation of the fail-silent model. The evaluation technique used in this research is physical fault injection at the pin level. Results obtained by the injection of about 20000 different faults in two different target systems have shown that: in a system without error detection up to 46% of the faults caused the violation of the fail-silent model; in a computer with behavior based error detection the percentage of faults that caused the violation of the fail-silent mode was reduced to values from 2.3% to 0.4%; the results are very dependent on the target system, on the program under execution during the fault injection and on the type of faults</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315625.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer debugging</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error handling</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>redundancy</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315634">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Behavioral synthesis of testable designs</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7c99347267e8c6ffa9aa1ae5fb419755-7364f2d88ce4240ed8b7caf9588745d1">
        <akt:full-name>A. Mujumdar</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ac8e5d40d6692950aaa4fac21adcfc2f-7364f2d88ce4240ed8b7caf9588745d1">
        <akt:full-name>R. Jain</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-11953abaa2c90e97d5c720afc03a1457-7364f2d88ce4240ed8b7caf9588745d1">
        <akt:full-name>K. Saluja</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>High-level synthesis tools automatically produce RTL designs from algorithmic specifications. These designs, however, are not necessarily easy to test. In this paper we present TBINET, an algorithm for module and register binding, which generates RTL designs having low testability overheads. It obtains a heuristic solution to the binding problem by mapping it onto a sequence of minimum cost network flow problems which can be solved very quickly. A cost function that considers the testability of the design is defined in the paper. The results of experiments on various benchmarks show that the designs produced by our binding algorithm are indeed easier to test as compared to circuits designed without testability considerations</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315634.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>design for testability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>formal specification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic CAD</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>shift registers</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315635">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Architectural timing verification and test for super scalar processors</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d145a85083d303069bf0689e2cbde97f-06df5e0709eb7c00c1ff47aa91e58d2f">
        <akt:full-name>P. Bose</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We address the problem of verification and testing of super scalar processors, from the point of view of correctness of [Bprogram execution time. Trace-driven architectural si[Bmulation methods are commonly used in current industrial practice to estimate cycles-per-instruction performance of a candidate processor organization, prior to actual implementation. We present a novel set of strategies for testing the timing correctness of processors as represented in an architectural timing model ("timer"). We focus on two main aspects of the theory: (a) deriving architectural test sequences to cover possible failure modes, defined in the context of a pipeline flow state transition fault model; and (b) deriving loop test kernels to verify steady-state (periodic) behavior of pipeline flow, against analytically predicted signatures. We develop the theory in the context of an example super scalar processor and its timer model</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315635.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>VLSI</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>computer testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>formal verification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>integrated circuit testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>microprocessor chips</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>pipeline processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>virtual machines</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315636">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Implementing fault tolerance with an attribute and functional based model</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-db6c44c64e7688d3588fe52c7865a58d-d37f0be5c671612c42c9d2aea3b45742">
        <akt:full-name>M. Suzuki</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-72dcabe4a7f208ece3fc8f3d1bdeb445-09e3209ac74b205692435838921a1eb7">
        <akt:full-name>T. Katayama</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a73d2c4a816791955a4b73ffa332255e-d37f0be5c671612c42c9d2aea3b45742">
        <akt:full-name>R.D. Schlichting</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Programs constructed using techniques that allow software or operational faults to be tolerated are typically written using an imperative computational model. Here, an alternative is described in which such programs are written using an attribute and functional based model called FTAG. The basic model is introduced, followed by a description of mechanisms that allow a variety of standard fault tolerance techniques to be realized in a straightforward way. Techniques that can be accommodated include replication and checkpointing to tolerate operational faults, and recovery blocks and N-version programming to tolerate software faults. Several examples are given to illustrate these techniques, including a replicated name server and a fault-tolerant sort that uses recovery blocks. These examples also serve to highlight the advantages of FTAG when compared to traditional imperative approaches, such as a declarative style, separation of semantic and syntactic definitions and the simplicity of a functional foundation. Finally an outline of how this model can be implemented in a computer system containing multiple processors is given</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315636.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessing systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315637">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The performance of two-phase commit protocols in the presence of site failures</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-bd8da885aec858b497528627086a5280-e06e3a273175fcc3c20f0ed7ae511a47">
        <akt:full-name>M.L. Liu</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1eeee5e17baa7a3771165086dc80bfb5-e06e3a273175fcc3c20f0ed7ae511a47">
        <akt:full-name>D. Agrawal</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-cd41cd757e32c5604ba1dc18cdb07e79-203d3dad08c13722395a27e0440de292">
        <akt:full-name>A. El Abbadi</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Much of the existing literature on the two phase commit protocol is restricted to discussing and analyzing the protocol (and its variants) in the absence of failure. Very little, especially in quantitative terms, has been written about its performance in the presence of site failures. We use a simulation test bed of a distributed database system to quantify the differences in the performances of four 2PC protocols (the generic 2PC, presumed commit, presumed abort, and early prepare). Our study covers both the no-failure case and the case of site failures. We present a number of interesting experimental results. One is that the performance of these protocols is highly dependent on the message-processing latency at the transaction coordinator site. Another is that the presumed abort protocol does not necessarily yield better performance in the presence of site failures</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315637.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>concurrency control</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>distributed databases</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>protocols</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>storage management</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>transaction processing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315638">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>On the effectiveness of residue code checking for parallel two's complement multipliers</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-903c754096c9e741c66de5f9d7807b6b-88bfcd99f8a4485dc2749c1af02006e9">
        <akt:full-name>U. Sparmann</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f76b811fa428e2358e9d52dd9a352ba0-3011d44766b8724fa47442cf9b9fd2f8">
        <akt:full-name>S.M. Reddy</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The effectiveness of residue code checking for on-line error detection in parallel two's complement multipliers has up to now only been evaluated experimentally for few architectures. In this paper a formal analysis is given for most of the current multiplication schemes. Based on this analysis it is shown which check bases are appropriate, and how the original scheme has to be extended for complete error detection at the input registers and Booth recording circuitry. In addition, we argue that the hardware overhead for checking can be reduced by approximately one half if a small latency in error detection is acceptable. Schemes for structuring the checking logic in order to guarantee it to be self-testing, and thus achieve the totally self-checking goal for the overall circuit, are also derived</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315638.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>digital arithmetic</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error detection</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiplying circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel algorithms</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315639">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Balanced codes for noise reduction in VLSI systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d1e0b6d902ecb35564dd675aa2eea62a-445b080a15c85bc9684506a1e8d43d02">
        <akt:full-name>L. Tallini</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4223c4d0e560e3b7e36438db4f624708-f65d2ab58e980de721c14b5aacc7c0b3">
        <akt:full-name>L. Merani</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a0392234f049693b1fedb025d91a345a-ae627ebbf8f37687b7f75087685a7fc7">
        <akt:full-name>B. Bose</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>In a balanced code each codeword contains equal number of 1's and 0's. In this paper, methods for the construction of balanced codes, which use parallel encoding/decoding are described. The codes use fewer check bits and less hardware complexity than the existing codes</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315639.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>VLSI</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>codes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>computational complexity</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315640">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A SEC-BED-DED code with byte plus bit error detection</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-588c2739b43b194e96e18587912a2515-ff73ab769bcb1731b69848a82b7b83fb">
        <akt:full-name>L.A. Dunning</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A code is presented which is designed to protect a 64 bit word, consisting of 8 bytes of 8 bits each, against both byte errors and single bit errors occurring in computer memories. Two check bytes are appended to give an overall length of 80 bits. The code then provides the often studied SEC-BED-DED level of error protection; that is, single error correction, byte error detection and double error detection are available simultaneously. In addition, the code detects a byte error together with a single random error occurring concurrently in another byte. Some implementation issues such as systematic versus separable encoding are considered</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315640.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>encoding</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error detection codes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315641">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A service policy for real-time customers with (m,k) firm deadlines</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-02ab51fb0f85f7ab91ecdf973cf8a3d8-62b31ce1a49770fe1a77bb3dc5f797dd">
        <akt:full-name>M. Hamdaoui</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a687bf25756dfd3c981e6255f17d21e4-62b31ce1a49770fe1a77bb3dc5f797dd">
        <akt:full-name>P. Ramanathan</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The problem of scheduling multiple streams of realtime customers is addressed in this paper. The paper first introduces the notion of (m, k)-firm deadlines to better characterize the timing constraints of real-time streams. More specifically, a stream is said to have (m, k)-firm deadlines if at least m out of any k consecutive customers must meet their deadlines. Note that, the notion of (m, k)-firm deadlines is a generalization of firm and soft deadlines. In particular, m=k=1 characterizes a stream with firm deadlines. A large value for k with m/k equal to the maximum allowable loss percentage can be used to represent a stream with soft deadlines. A stream with (m, k)-firm deadlines will experience a dynamic failure if fewer than m out of any k consecutive customers meet their deadlines. The paper proposes a policy for scheduling N such streams on a single server to reduce the probability of dynamic failure. The basic idea of the proposed policy is to assign higher priorities to customers from streams which have had too many recent missed deadlines. The paper proposes a heuristic for assigning these priorities. The effectiveness of the approach is evaluated through simulation under various customer arrival and service patterns. The evaluation shows that by properly assigning the priorities one can substantially reduce the probability of dynamic failure</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315641.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>real-time systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>scheduling</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315642">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Roll-forward and rollback recovery: performance-reliability trade-off</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0ec2cf85233e1fc733856281ce15e9d1-54980d5d550395544b15585eb98f16ad">
        <akt:full-name>D.K. Pradhan</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5ba7587ccd6d340468fb83ea2c4b7e7a-4364fdb68266edb7b0ec9cf7dcb70760">
        <akt:full-name>N.H. Vaidya</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Performance and reliability achieved by a modular redundant system depend on the recovery scheme used. Typically, gain in performance using comparable resources results in reduced reliability. Several high performance computers are noted for small mean time to failure. Performance is measured here in terms of mean and variance of the task completion time, reliability being a task-based measure defined as the probability that a task is completed correctly. Two roll-forward schemes are compared with two rollback schemes for achieving recovery in duplex systems. The roll-forward schemes discussed here are based on a roll-forward checkpointing concept. Roll-forward recovery schemes achieve significantly better performance than rollback schemes by avoiding rollback in most common fault scenarios. It is shown that the roll-forward schemes improve performance with only a small loss in reliability as compared to rollback schemes</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315642.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315643">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Performability-driven adaptive fault tolerance</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-071142ea091ce8fff1cafbfb66dcfc54-0694b8c483ade7456ea2d33b3697dcd0">
        <akt:full-name>A.T. Tai</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We introduce a performability-driven realization of adaptive fault tolerance. The object system for the investigation is a multiprocessor system in a real-time context accommodating parallel computation and two fault tolerance schemes, namely, recovery blocks (RB) and distributed recovery blocks (DRB). The optimality criterion is directly specified in terms of a preferability measure, based on which adaptive rules are generated to govern the utilization of RB and DRB during system's operation. The analysis shows that performability concepts and modeling methods enable us to manage the tradeoffs among system attributes in a formal manner and lead to effective realization of adaptive fault tolerance</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315643.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessing systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315644">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Checking linked data structures</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3da1d499d70d1918890471fcae38b952-9704561c02eebb0d98132c7286f7e7ed">
        <akt:full-name>N.M. Amato</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f909f00214d6f1ccc16c7b881924346e-9704561c02eebb0d98132c7286f7e7ed">
        <akt:full-name>M.C. Loui</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>In the program checking paradigm, the original program is run on the desired input, and its output is checked by another program called a checker. Recently, the notion of program checking has been extended from its original formulation of checking functions to checking a sequence of operations which query and alter the state of an object external to the program, e.g., checking the interactions between a client and the manager (server) of a data structure. In this expanded paradigm, the checker acts as an intermediary between the client, which generates the requests, and the server, which processes them. The checker is allowed a small amount of reliable memory and may provide a probabilistic guarantee of correctness for the client. We present off-line and on-line checkers for data structures such as linked lists, trees, and graphs. Previously, the only data structures for which such checkers existed were random access memories, stacks, and queues</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315644.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>data structures</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program verification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315645">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Systematic incorporation of efficient fault tolerance in systems of cooperating parallel programs</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-cbc5cf87f32643181eb9037b4de96af4-fe326ad4729c0d1510c94d2369810e7a">
        <akt:full-name>I-Ling Yen</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b8586185a2d4de9f94e387c45a49211b-fe326ad4729c0d1510c94d2369810e7a">
        <akt:full-name>F.B. Bastani</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Cooperating parallel programs are being increasingly used in critical applications that require both high performance and high reliability. A promising technique for simultaneously achieving these objectives is to embed the fault tolerance within the program instead of superimposing it via external mechanisms. We develop one such approach for a group of processes that cooperate via shared data structures. The scheme uses data structures having two or more invariant assertions. When the strong invariant is true, the performance is good. When it is false, the performance may be adversely affected, but it is guaranteed that the system will operate correctly provided the weak invariant is true. The algorithms are designed to ensure that processor failures will never cause the weak invariant to be false and to restore the strong invariant within a finite number of recovery actions. We develop a robust task handling mechanism to support the approach and illustrate it for three common data structures</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315645.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>data structures</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel programming</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315646">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Checking mergeable priority queues</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-08f5b7250324b6fada2ae266e94d2373-5b074db3c40832ec31ecc92ffae26dec">
        <akt:full-name>J.D. Bright</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5b5812688041995be5bebb49f6299e08-5b074db3c40832ec31ecc92ffae26dec">
        <akt:full-name>G.P. Sullivan</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We present an efficient algorithm which can check the answers given by the fundamental abstract data types priority queues and mergeable priority queues. This is the first linear-time checker for mergeable priority queues. These abstract data types are widely used in routing, scheduling, simulation, computational geometry and many other algorithmic domains. We have implemented our answer checker and have performed experiments comparing the speed of our checker to recently benchmarked priority queue and mergeable priority queue implementations, and our checker is substantially faster than the best of these implementations</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315646.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>abstract data types</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>algorithm theory</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>merging</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315647">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Modeling and analysis of system dependability using the System Availability Estimator</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6c539b6ac8a186832370322783258cbe-bfafd3069e382d83bdc7f0687fe1d6f5">
        <akt:full-name>A.M. Blum</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ba69a25f7989df316c886e253989db06-4c123e97f533bd084403551e516eadcc">
        <akt:full-name>A. Goyal</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c18b991d80909f5af2c994ff570572d5-e6989c2d260cb63aa18507bdd798d338">
        <akt:full-name>P. Heidelberger</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-accf301bb1a888ea1bfd9391ce87f954-bfafd3069e382d83bdc7f0687fe1d6f5">
        <akt:full-name>S.S. Lavenberg</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d8787e4c921684b2c658faba48ff993b-4c123e97f533bd084403551e516eadcc">
        <akt:full-name>M.K. Nakayama</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c5a6a216297ccdda26f84546daf5f320-1c38f1cd4504c98e3eaa1936558f5e2d">
        <akt:full-name>P. Shahbuddin</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>This paper reviews the System Availability Estimator (SAVE) modeling program package. SAVE is used to construct and analyze models of computer and communication systems dependability. The SAVE modeling language consists of a few constructs for describing the components in a system, their failure and repair characteristics, the interdependencies between components, and the conditions on the individual components for the system to be considered available. SAVE parses an input file and creates a Markov chain model. For small models numerical solution methods can be used, but for larger models (the state space grows exponentially with the number of components in the model), fast simulation techniques using importance sampling have to be used. We provide software demonstrations using both these techniques</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315647.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>Markov processes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>systems analysis</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315648">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Implementation of high availability mechanisms in the air traffic control SIR-S system</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4b4ca08cef9c279dc1b54374657519d7-b2c2cc6222b74ea8a9c76a0b47fded75">
        <akt:full-name>E. Amadio</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0c18f7e3178b254429e181e7cb6317e9-b2c2cc6222b74ea8a9c76a0b47fded75">
        <akt:full-name>P. Iaboni</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fdb56037739b0ba93364d96343b42f52-b2c2cc6222b74ea8a9c76a0b47fded75">
        <akt:full-name>M. La Manna</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-46f256a09b367d4d06784db865ee96f0-b2c2cc6222b74ea8a9c76a0b47fded75">
        <akt:full-name>P. Mariano</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>This paper describes the implementation of the mechanisms used to achieve a high level of availability in the SIR-S system through a duplicated Master-Slave configuration. In case of a fault in the Master Node, the Slave Node can carry on the operations as close as possible to the scheduled sequence, in order to match the time optimization criteria with a maximum of overall delay of about 5 msec</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315648.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>air traffic computer control</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>delays</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315649">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Automatic verifying approach for product specification using FTA</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-11d7592f8426ee9dfd8ce4e95a4e09cb-df72dd30af471884f2c1b6951302577f">
        <akt:full-name>T. Fukaya</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-db1702d40202806ebbc2d251d0d8ae08-df72dd30af471884f2c1b6951302577f">
        <akt:full-name>M. Hirayama</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e005dd33d9407b111b57d0e5b4bd5d63-df72dd30af471884f2c1b6951302577f">
        <akt:full-name>Y. Mihara</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We propose a verification method for software specification. In order to avoid software faults, our method derives safety assertions using FTA, computes the behavioral graph of specification and analyzes statically whether this graph satisfies safety assertions. Moreover, when there exists an assertion which can not hold, our method localizes software design faults</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315649.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>formal specification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>formal verification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315650">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Concurrent error-detection and modular fault-tolerance in a 32-bit processing core for embedded space flight applications</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-892a7e76c46e7eef356441322f4e7d57-8761ef71f9ca278ec1ef22f87b47867b">
        <akt:full-name>J. Gaisler</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>This paper describes the concurrent error-detection methods employed in the ERC32, a 32-bit processing core for embedded space flight applications. The processor core consists of three devices; an integer unit, a floating point unit and a memory controller. All three devices are provided with internal concurrent error-detection, mainly to detect transient errors. Over 98% of all latched errors are detected. Depending on the error location, errors can be removed by instruction retry or by software intervention without loss of context. A program flow control mechanism is provided to detect execution anomalies due to undetected errors. To further increase the error-detection coverage, each device can be operated in master/checker mode</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315650.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>aerospace computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error detection</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>microprocessor chips</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315651">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>On codeword testing of two-rail and parity TSC checkers</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f76b811fa428e2358e9d52dd9a352ba0-3011d44766b8724fa47442cf9b9fd2f8">
        <akt:full-name>S.M. Reddy</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f762deaf1836e8c1f1e137d2a1bc6daf-83214b99a523b5ccdff4284db8a71f8b">
        <akt:full-name>I. Pomeranz</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ac8e5d40d6692950aaa4fac21adcfc2f-83214b99a523b5ccdff4284db8a71f8b">
        <akt:full-name>R. Jain</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We propose a method to test totally self-checking (TSC) two-rail and parity checkers to detect multiple faults using codewords as test patterns. Earlier methods that considered multiple line stuck-at faults in TSC checkers proposed solutions requiring the use of non-code inputs. The disadvantage of using non-code inputs to test a checker is that if the checker is integrated into the circuit being monitored, then special additional hardware is necessary to generate such inputs. Hardware to generate noncodeword tests is not required by the proposed procedure. Even though we have shown that the method proposed is applicable to multiple line stuck-at, multiple stuck-open, gate and path delay faults, in this paper we report the details for multiple line stuck-at faults only</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315651.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>circuit reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>codes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315652">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>SEU-tolerant SRAM design based on current monitoring</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-642d130eca2d302750a9d186474fb167-49af1f974b63d20f0343cc55bfbe4525">
        <akt:full-name>F. Vargas</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7d48505aa96ff117f6606f6a72f25786-58c43b843f8903d4e97bcf8b31e8d4ba">
        <akt:full-name>M. Nicolaidis</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We present a new technique to improve the reliability of SRAMs used in space radiation environments. This technique deals with the SRAM power-bus monitoring by using built-in current sensor (BICS) circuits that detect abnormal current dissipation in the memory power-bus. This abnormal current is the result of a single-event upset (SEU) in the memory and it is generated during the inversion of the state of the memory cell being upset. The current checking is performed on the SRAM columns and it is combined with a single-parity bit per RAM word to perform error correction</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315652.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>SRAM chips</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error correction</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error detection</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315653">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Concurrent error detection in self-timed VLSI</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1b3424f87ef59e78d94bcfdc8b49f803-bc79feaccabd61888e535cd1d9ad1007">
        <akt:full-name>D.A. Rennels</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-bd2c276cdbc6cb1036e42b53a623c7b1-bc79feaccabd61888e535cd1d9ad1007">
        <akt:full-name>Hyeongil Kim</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>This paper examines architectural techniques for providing concurrent error detection in self-timed VLSI pipelines. Signal pairs from Differential Cascode Voltage Switch Logic are compared with a checker that is composed of a tree of dual-rail (morphic) comparators to detect errors and signal completion. An efficient implementation is shown that compares favorably in speed and area with conventional completion signal generators. A simple pipeline is examined with error checkers at each computation stage and hand-shaking control circuits that are modified to improve error detection. Its error-detecting properties are discussed, and preliminary error simulation results are presented. Based on these studies we have concluded that self-timed logic offers considerable fault-tolerance potential due to its built-in redundancy that can be effectively exploited for error checking</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315653.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>VLSI</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>circuit reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error detection</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>integrated circuit testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315654">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Device-level transient fault modeling</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c89aa0a086d5aa161ee1a405374982a9-46abcfe3614743115f7786a25835cbed">
        <akt:full-name>G.L. Ries</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6c9dbdab632aedeb0ba17e572839a859-46abcfe3614743115f7786a25835cbed">
        <akt:full-name>G.S. Choi</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6122ee67de7692816e4883ba5ebf39cb-46abcfe3614743115f7786a25835cbed">
        <akt:full-name>R.K. Iyer</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>This paper examines the accuracy of a discrete logic-level fault model often assumed in gate-level or discrete timing simulation. The analysis is done by comparing the faulty behavior predicted by the discrete model to that predicted by a circuit-level SPICE model whose accuracy is generally accepted. The comparison is made at both the subcircuit level, by measuring latch errors, and the system level, by measuring pin errors and data register errors, using the Motorola MC68000 as the target system. The results of the analysis show that the behavior predicted by the discrete model varies significantly from that of the circuit-level model when the injection site has multiple propagation paths to the circuit outputs (or latches) or is an internal node of one of the logic gates, even if the pulse width of the discrete transient is carefully chosen. However, the two models can be made to match for injection sites that are gate inputs or outputs and have only a single propagation path to circuit outputs. The differences in the latch errors predicted by the two models at the subcircuit level lead to over a 40% difference in the number of predicted pin errors and a 50% difference in the number of data errors predicted at the system level</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315654.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>circuit analysis computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>discrete event simulation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315655">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>On microprocessor error behavior modeling</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f8c32ec6cba3201af1ad3ab2ebc21f3f-800d485f838d88484055b0e7350eba84">
        <akt:full-name>M. Rimen</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-abe30fc7d25323509c5f040a1d239899-800d485f838d88484055b0e7350eba84">
        <akt:full-name>J. Ohlsson</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d7f4b8bc8469812f50b0d767f3a26535-800d485f838d88484055b0e7350eba84">
        <akt:full-name>J. Torin</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A microprocessor error behavior function (EBF) is introduced, mapping faults into errors on the functional level. The errors are obtained using a functional model of the processor. By applying the EBF to a fault and instruction distribution, it is possible to obtain the corresponding error distribution. A case study is described, in which (i) the EBFs for simulated bit-flip and pin-level faults are designed and used to compare the bit-flip and pin-level fault models, and (ii) the obtained error distribution for the bit-flip faults is used in an error injection experiment on the functional level to emulate these faults. For the processor used in the case study, it was found that only 9-12% of the bit-flip faults could be emulated using pin-level faults, while a tentative evaluation of the possibility to emulate bit-flip faults with software-implemented fault injection showed that 98-99% could be emulated. Finally, the results of the emulated bit-flip errors corresponded well to the real results obtained using bit-flip faults, thus indicating that the injected errors are good approximations of the faults</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315655.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault location</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>integrated circuit testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>microprocessor chips</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315656">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault injection into VHDL models: the MEFISTO tool</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0963447d615424f95e56897f77808cca-46dded763fdb2c5147302532c4781f35">
        <akt:full-name>E. Jenn</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fc69f9dc4d1600f0764ff4e7f8f0bdb1-d4e58035a15283a956f7801f2b782aa3">
        <akt:full-name>J. Arlat</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f8c32ec6cba3201af1ad3ab2ebc21f3f-46dded763fdb2c5147302532c4781f35">
        <akt:full-name>M. Rimen</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-abe30fc7d25323509c5f040a1d239899-46dded763fdb2c5147302532c4781f35">
        <akt:full-name>J. Ohlsson</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f05f830b16d1cc59d3a8ffd7ca64ee03-46dded763fdb2c5147302532c4781f35">
        <akt:full-name>J. Karlsson</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>This paper focuses on the integration of the fault injection methodology within the design process of fault-tolerant systems. Due to its wide spectrum of application and hierarchical features, VHDL has been selected as the simulation language to support such an integration. Suitable techniques for injecting faults into VHDL models are identified and depicted. Then, the main features of the MEFISTO environment aimed at supporting these techniques are described. Finally, some preliminary results obtained with MEFISTO are presented and analyzed</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315656.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>formal verification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software tools</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>specification languages</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315658">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Diagnosis of processor arrays</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0f1adfa3e95dbfa115084955d0dacd1d-d57658ad91ba440066ba074ff91dc784">
        <akt:full-name>L. Baldelli</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4712fc94769416d74fcf5197410c93e2-d57658ad91ba440066ba074ff91dc784">
        <akt:full-name>P. Maestrini</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>This paper introduces an approach to diagnosis of processor arrays, assuming that processors are horizontally, vertically and diagonally connected to their neighbors. The proposed algorithm subdivides the array into clusters containing nine processors and requires three steps. In the first step each cluster executes tests according to a rosace pattern, and clusters for which all test results were zero are classified as Z-Cs. The remaining cluster, which contain at least one fault, are classified NZ-Cs. In the second step. Z-Cs are combined into aggregates (ZACS) and one Z-ACs is identified as a fault-free core of the array. The third step leads to identification of the state (of faulty or non faulty) of more nodes. The diagnosis is proved to be correct, although possibly incomplete, assuming that the number of faults is less that a bound T, which is an increasing function of the size of the array</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315658.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic arrays</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessing systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>sequential circuits</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315659">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Algorithm-based fault location and recovery for matrix computations</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1c9e477d1f3c8c284ec354f63cab0af4-194da23e2012476a100ec951d98c3fe3">
        <akt:full-name>A. Roy-Chowdhury</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-37fa5881bead9f26c4f49dd416f07d79-f364c4a7a3de3591e08829489d8f5e77">
        <akt:full-name>P. Banerjee</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Previous algorithm-based methods for developing reliable versions of numerical algorithms have mostly concerned themselves with error detection. A truly fault tolerant algorithm, however, needs to locate errors and recover from them once they are located. In a parallel processing environment, this corresponds to locating the faulty processors and recovering the data corrupted by the faulty processors. In our paper, we discuss in detail fault tolerant version of a matrix multiplication algorithm. The ideas developed in the derivation of the fault-tolerant matrix multiplication algorithms may be used to derive fault-tolerant versions of other numerical algorithms. We outline how two other numerical algorithms, QR factorization and Gaussian Elimination may be made fault-tolerant using our approach. Our fault model assumes that a faulty processor can corrupt all the data it possesses. We present error coverage and overhead results for the single faulty processor case for fault-locating and fault-tolerant versions of three numerical algorithms on an Intel iPSC/2 hypercube multicomputer</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315659.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>matrix algebra</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel algorithms</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315660">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Replication and allocation of task modules in distributed real-time systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6ea265a9e8426b009b111a22d5a346a2-72af3e26a814d9068e0d6db9f66c4696">
        <akt:full-name>Chao-Ju Hou</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6ea265a9e8426b009b111a22d5a346a2-72af3e26a814d9068e0d6db9f66c4696">
        <akt:full-name>K.G. Shin</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>This paper addresses the problem of replicating and allocating periodic task modules to processing nodes (PNs) in distributed real-time systems subject to task precedence and timing constraints. The probability that all tasks can be completed before their deadlines-termed as the probability of no dynamic failure (PND)-is used as the performance-related reliability measure. Modules which are critical in meeting task deadlines are then selected using the critical path analysis. To provide the timing correctness embedded in PND, both original and replicated task modules are not only assigned to PNs, but also scheduled on each PN so as to meet the deadlines of all tasks. The module allocation scheme uses (1) the branch-and-bound method to implicitly enumerate all possible allocations while effectively pruning unnecessary search paths; and (2) the module scheduling scheme to schedule the modules assigned to each PN. Several numerical examples are presented to illustrate the proposed scheme</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315660.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>critical path analysis</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>real-time systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>redundancy</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>resource allocation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>scheduling</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315661">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Analysis of a fault-tolerant multiprocessor scheduling algorithm</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2c77514c527d7030f2ffc2e397eed0b2-6051de1916ba303314b3095c0e8440c1">
        <akt:full-name>D. Mosse</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-76426a32712ed5e3eabcc1b33795090d-6c8f1e0885efab1b430621de403e7236">
        <akt:full-name>R. Melhem</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4f55f7c0609bb1fc25ed5c1ac755ef59-d0b97049cbf692ade86e89c13e49ae85">
        <akt:full-name>S. Ghosh</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Fault tolerance is an important aspect of real-time computer systems, since timing constraints must not be violated. When dealing with multiprocessor systems, fault tolerance becomes an even greater requirement, since there are more components that can fail. We present the analysis of a fault tolerant scheduling algorithm for real-time applications on multiprocessors. Our algorithm is based on the principles of primary/backup tasks, backup overloading (i.e., scheduling more than a single backup in the same time interval), and backup deallocation (i.e., reclaiming the resources unused by backup tasks in case of fault-free operation). A theoretical model is developed to study a particular class of applications and certain backup and overloading strategies. The proposed scheme can tolerate a single fault of any processor at any time, be it transient or permanent. Simulation results offer evidence of little loss of schedulability due to the addition of the fault tolerance capability. Simulation is also used to study the length of time needed for the system to recover from a fault (i.e., the time when the system is again able to tolerate any fault)</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315661.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessing programs</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessing systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>real-time systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>scheduling</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00315662">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
        <support:year-of>1994</support:year-of>
        <support:has-pretty-name>1994</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Effects of resource utilization monitoring in fault recovery</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-63cc2bf8b4c84ad514f8481d0b5f4d26-b538e7a09a2c69735c81cea7e9667b9f">
        <akt:full-name>T.R. Sarnaik</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-20544f276e54d280ce59c2a92757e33d-b538e7a09a2c69735c81cea7e9667b9f">
        <akt:full-name>A.K. Somani</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We develop a technique to reduce the time to perform online tests and diagnose faulty units and reduce the recovery time when a fault occurs in a system. A clue is given to the tester about possible faulty locations. Thus only a fraction of the resources within a system needs to be tested. This is accomplished by keeping track of the resources used by an application program when it executes. We demonstrate that a significant reduction in test time can be achieved, in particular for cache and memory subsystems. This technique can improve response time and meet more deadlines in soft real-time systems when the system employs online tests and recovery schemes. We develop this technique further and support our analysis using trace-driven simulation. We discuss ways to implement the resource utilization vector (RUV) scheme in a system, and show how the RUV scheme is used to improve the forward error recovery process</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-7613" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1994</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=7613</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1994'>
            <support:year-of>1994</support:year-of>
            <support:has-pretty-name>1994</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/951/7613/00315662.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>buffer storage</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>computer testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault location</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>online operation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>real-time systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>resource allocation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system monitoring</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>vectors</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466944">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Dependability at the user interface</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-04ad25481b9b99c11907d21d20ec14b1-ee8a01adbd18966b5ae272a42f3f1c38">
        <akt:full-name>R.A. Maxion</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ae048831d09a769cd247287d355295de-ee8a01adbd18966b5ae272a42f3f1c38">
        <akt:full-name>A.L. deChambeau</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Even if a system's hardware and software underpinnings are completely reliable, errors at the user interface can cripple or destroy a mission, often with catastrophic consequences. Little attention has been paid to handling faults and errors at the user interface their causes and remediations are little understood and methods of predeployment fault detection in user interfaces are almost nonexistent. The paper presents a working definition of a user interface defect, and a robust method for detecting defects automatically. An experimental methodology for empirical testing and validation is given. Results show that while manifestations of defects may be many, only a few root causes are responsible for them</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466944.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault diagnosis</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>user interfaces</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466945">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Measuring robustness of a fault tolerant aerospace system</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e7cfdb9603192d71f786d12abe308060-c54aa66ac6638e8b8d84e3644692a36b">
        <akt:full-name>C.P. Dingman</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-649142126b4c27fcfe15aade2ec668a9-c54aa66ac6638e8b8d84e3644692a36b">
        <akt:full-name>J. Marshall</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4eba2bc7fb235c73aca57ecd0bdbf595-b42c148767c85bbbb0f88e8fa5736fe1">
        <akt:full-name>D.P. Siewiorek</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>In commercial literature, the meaning of the term fault tolerant has become vague. We describe a system used to measure the robustness of a fault tolerant aerospace system developed at IBM, present the data collected during the project, and report conclusions and areas for future work</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466945.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>aerospace computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>special purpose computers</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466946">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Modeling and testing a critical fault-tolerant multi-process system</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3536acb08f7de823a6332dcfb2e0bc08-2e25049b73030d584fde6d210ec5cedf">
        <akt:full-name>R. Riter</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The paper discusses modeling and fault insertion testing of the Boeing 777 "fly-by-wire" Primary Flight Computer (PFC) system. The 777 PFC was modeled to perform a behavior analysis. The simulation model includes all systems communicating with the Primary Flight Computers (PFC). The simulation environment allows errors to be injected into the communication portion of the model and into selected PFC internal variables. The model is used to test the system response to errors in the PFC input data and to PFC internal errors. The behavior analysis tests have been chosen to stress the fault tolerant design and to investigate PFC anomalies encountered during either laboratory tests or during flight test. The effects of both input and PFC internal errors were studied and the effects of asynchronous communication were examined. The paper is composed of the following: 1. Introduction which briefly describes both the airplane "fly-by-wire" features and the simulation. 2. PFC description which gives more details about the PFC. 3. Failure model. 4. Simulation description which describes the simulation environment and facilities. 5. Fault-tolerant testing which gives some examples. 6. Summary</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466946.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>aerospace simulation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>aerospace testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>aircraft computers</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>aircraft control</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>computer testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>digital simulation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>errors</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>modelling</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466947">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>On the development of fault-tolerant on-board control software and its evaluation by fault injection</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ba1f6bca199a99a98d550a9f285390c8-1b4c1d147c9d11c2f9c9d9cccbf4ced8">
        <akt:full-name>T. Vardanega</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6b7b0e1d672698de23f63037d89ab064-1b4c1d147c9d11c2f9c9d9cccbf4ced8">
        <akt:full-name>P. David</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-bbace55c19d176584ecdbd4a052704a7-1b4c1d147c9d11c2f9c9d9cccbf4ced8">
        <akt:full-name>J.-F. Chane</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f249477431c53c6052ec406388d30bee-1b4c1d147c9d11c2f9c9d9cccbf4ced8">
        <akt:full-name>W. Mader</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4049e1704652453550450d31afd518a2-1b4c1d147c9d11c2f9c9d9cccbf4ced8">
        <akt:full-name>R. Messaros</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fc69f9dc4d1600f0764ff4e7f8f0bdb1-d4e58035a15283a956f7801f2b782aa3">
        <akt:full-name>J. Arlat</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>As commercial drivers promote the integration of functions of different criticality into a limited set of processing elements, software plays an increasingly important role on board today's satellites. This trend questions the adequacy of the traditional development process and calls for a design and validation approach capable of achieving the required dependability without blowing the development costs. This paper reports on the most innovative features of an integrated project aimed at designing a software-intensive fault tolerance approach suitable for embedded flight control systems, and at assessing its efficiency by means of a non-intrusive software-implemented fault injection prototype tool</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466947.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>aerospace computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>aerospace control</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>artificial satellites</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>real-time systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>satellite communication</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software engineering</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>special purpose computers</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466948">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault tolerance in concurrent object-oriented software through coordinated error recovery</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f93d29c33f72ca9a326b2eb67fad2be1-fb80c32c056ff62dfc9677b5f30572db">
        <akt:full-name>Jie Xu</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-21757c2767705194600b55ff6b0ef692-8e31fda3b228612b025d4309d150465d">
        <akt:full-name>B. Randell</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-40ae1f6c63ee0ede28e72ddc6623219e-6f666edd18aa0b59fc7f6f452c4a71d8">
        <akt:full-name>A. Romanovsky</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5d816814b5c5ba6c1c34a00706878559-1e427d6bbb6d2bb2aa5434059d6c58f4">
        <akt:full-name>C.M.F. Rubira</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-43d3f80b63f09611689ba8a37d4b1c63-1e427d6bbb6d2bb2aa5434059d6c58f4">
        <akt:full-name>R.J. Stroud</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-724d0329472083d867629afe26f69cc5-63dde3a34d11d79c23f2bcb5dfdf0e30">
        <akt:full-name>Zhixue Wu</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Presents a scheme for coordinated error recovery between multiple interacting objects in a concurrent object-oriented system. A conceptual framework for fault tolerance is established based on a general object concurrency model that is supported by most concurrent object-oriented languages and systems. This framework integrates two complementary concepts-conversations and transactions. Conversations (associated with cooperative exception handling) are used to provide coordinated error recovery between concurrent interacting activities whilst transactions are used to maintain the consistency of shared resources in the presence of concurrent access and possible failures. The serialisability property of transactions is exploited in order to help prevent unexpected information smuggling. The proposed framework is illustrated by means of a case study, and various linguistic and implementation issues are discussed</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466948.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>concurrency control</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>exception handling</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>object-oriented programming</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466949">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Implementing fault tolerant applications using reflective object-oriented programming</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-810420fb0ababc6375871d5685271ef8-98e4b322e908a89118c8c6ceea906ce5">
        <akt:full-name>J. Fabre</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-608c705acb1343be14259a6474a5ab4b-63dde3a34d11d79c23f2bcb5dfdf0e30">
        <akt:full-name>V. Nicomette</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-df220e3da13c065bb761e1bfe2754d3d-63dde3a34d11d79c23f2bcb5dfdf0e30">
        <akt:full-name>T. Perennou</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-43d3f80b63f09611689ba8a37d4b1c63-1e427d6bbb6d2bb2aa5434059d6c58f4">
        <akt:full-name>R.J. Stroud</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-724d0329472083d867629afe26f69cc5-63dde3a34d11d79c23f2bcb5dfdf0e30">
        <akt:full-name>Zhixue Wu</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Shows how reflection and object-oriented programming can be used to ease the implementation of classical fault tolerance mechanisms in distributed applications. When the underlying runtime system does not provide fault tolerance transparently, classical approaches to implementing fault tolerance mechanisms often imply mixing functional programming with non-functional programming (e.g. error processing mechanisms). The use of reflection improves the transparency of fault tolerance mechanisms to the programmer and more generally provides a clearer separation between functional and non-functional programming. The implementations of some classical replication techniques using a reflective approach are presented in detail and illustrated by several examples, which have been prototyped on a network of Unix workstations. Lessons learnt from our experiments are drawn and future work is discussed</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466949.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>Unix</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>functional programming</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>object-oriented programming</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466950">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Software schemes of reconfiguration and recovery in distributed memory multicomputers using the actor model</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9884e7d3cef74c2614ea46a923bfcfbd-f364c4a7a3de3591e08829489d8f5e77">
        <akt:full-name>M. Peercy</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-37fa5881bead9f26c4f49dd416f07d79-f364c4a7a3de3591e08829489d8f5e77">
        <akt:full-name>P. Banerjee</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Ideally, a multicomputer system should cope with a processor failure by reconstructing itself-and the application running on itself-in order to maintain the available computational power of the remaining processors. We discuss the continuance of running applications through permanent processor failures. We take advantage of the characteristics of the actor model of parallel computation and dynamically checkpoint the activity of the application. Consequently, the runtime system is able to continue an application through multiple nonconcurrent processor failures. We have implemented our techniques through modifications of the runtime system of the parallel language Charm on an Intel iPSC/s hypercube. After discussing the theory and implementation, we give measurements of overhead due to fault tolerance for a number of applications and demonstrate continuance of the applications after injection of one or more faults</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466950.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed memory systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>hypercube networks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel languages</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reconfigurable architectures</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466951">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Design verification of a super-scalar RISC processor</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f7da3973759e235e53cc5ff4b26aada0-b143e481793be7e9aa8f4c981e275566">
        <akt:full-name>B. Turumella</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6969cc9834448eb16b9664e6f4406f1d-b143e481793be7e9aa8f4c981e275566">
        <akt:full-name>A. Kabakibo</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-37593f4a5bea6092699dff5a8405870e-b143e481793be7e9aa8f4c981e275566">
        <akt:full-name>M. Bogadi</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-de5bc55aa4502abc15d2d7ea4c1d19ef-b143e481793be7e9aa8f4c981e275566">
        <akt:full-name>K. Menon</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-49d0be19df74aa61f178fbd919f98ac5-b143e481793be7e9aa8f4c981e275566">
        <akt:full-name>S. Thusoo</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b04d5d1525be34813a7a3b6b5249716d-b143e481793be7e9aa8f4c981e275566">
        <akt:full-name>L. Nguyen</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e4eed238bd6bccedb2e0323ee82c7b3f-b143e481793be7e9aa8f4c981e275566">
        <akt:full-name>N. Saxena</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-436aac48aba51a913d92e7a16637d73a-b143e481793be7e9aa8f4c981e275566">
        <akt:full-name>M. Chow</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The paper provides an overview of the design verification methodology for HaL's Sparc64 processor development. This activity covered approximately two and a half years of design development time. Objectives and challenges are discussed and the verification methodology is described. Monitoring mechanisms that give high observability to internal design states, novel features that increase the simulation speed, and tools for automatic result checking are described. Also presented for the first time, is an analysis of the design defects discovered during the verification process. Such an analysis is useful in augmenting verification programs to target common design defects</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466951.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer architecture</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>computer testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>formal verification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>integrated circuit testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reduced instruction set computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software tools</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>virtual machines</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466952">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Error detection and handling in a superscalar, speculative out-of-order execution processor system</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e4eed238bd6bccedb2e0323ee82c7b3f-35bec3697bb889ff5bd187e45078478f">
        <akt:full-name>N. Saxena</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-736f61130df656eac560313e2f482da5-35bec3697bb889ff5bd187e45078478f">
        <akt:full-name>Chien Chen</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-eba207efe5d6131b16562d7ff62dbf01-35bec3697bb889ff5bd187e45078478f">
        <akt:full-name>R. Swami</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-23c0f73a889eab1fce2ce81c7d8ea8de-35bec3697bb889ff5bd187e45078478f">
        <akt:full-name>H. Osone</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-49d0be19df74aa61f178fbd919f98ac5-35bec3697bb889ff5bd187e45078478f">
        <akt:full-name>S. Thusoo</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b60a509033deeb7d7b0b9fb8009e3490-35bec3697bb889ff5bd187e45078478f">
        <akt:full-name>D. Lyon</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ab490826bc1c269aa32c2d5970cd2518-35bec3697bb889ff5bd187e45078478f">
        <akt:full-name>D. Chang</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d0cc659e7f03d8b60777156fff3a5f2c-35bec3697bb889ff5bd187e45078478f">
        <akt:full-name>A. Dharmaraj</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-79bd58b9e5d85550a47d676b6d84c1e3-35bec3697bb889ff5bd187e45078478f">
        <akt:full-name>N. Patkar</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-06ef325c4a6fc2ed143f34bf4d43e107-35bec3697bb889ff5bd187e45078478f">
        <akt:full-name>Y. Lu</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8bf342f1ffd3e3bc5c66f03b18245acd-35bec3697bb889ff5bd187e45078478f">
        <akt:full-name>B. Chia</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The HaL SPARC64 Processor, the first 64-bit SPARC-V9 architecture implementation, uses several techniques to ensure a high degree of system reliability, error detection, and error recovery. The CPU of the multi-chip module processor has a superscalar, speculative issue unit, and an out-of-order execution datapath. These two processor components complicate the maintenance of precise state in the event of errors. By exploiting the SPARC-V9 architectural features, and the micro-architecture for speculative execution, SPARC64 maintains precise state in the event of exceptions and errors, logs and reports errors, and facilitates error detection during full system bringup. The paper presents details of error detection and handling in the CPU, the cache system, and the Memory Management Unit(MMU). The HaL R1 system also implements a fault-secure memory system design. The memory system corrects all single-bit errors, detects double bit errors, detects single address line failures, and detects all single dynamic RAM (DRAM) chip failures. Certain debug features have been added to the system that are useful during system bring-up</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466952.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>DRAM chips</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>computer architecture</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>computer debugging</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>digital storage</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error detection</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error handling</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multichip modules</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program debugging</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>storage units</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466953">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Why optimistic message logging has not been used in telecommunications systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8da3e8709afd68db92d6186a1364852c-f589c8a9fd28aa1556f4bd8bdb4932cd">
        <akt:full-name>Yennun Huang</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ff3ce6add4115b858c08dfe2272ef770-b8c30eee470137261dd6873194bf945e">
        <akt:full-name>Yi-Min Wang</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Much of the literature on message logging and checkpointing in the past decade has been based on a so-called optimistic approach that places more emphasis on failure-free overhead than recovery efficiency. Our experience has shown that most telecommunications systems use a pessimistic approach because the main purpose of using message logging and checkpointing is to achieve fast and localized recovery, and the failure-free overhead of a pessimistic approach can often be made reasonably low by exploiting application-specific information</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466953.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>client-server systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>message switching</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>protocols</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>recording</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>telecommunication computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466954">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The ELEKTRA railway signalling system: field experience with an actively replicated system with diversity</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-272b9848e4dd921876f6914d80131aef-f601ec50578c5cd1a53ff0ac95753a2e">
        <akt:full-name>H. Kantz</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fd60b3c7030ac4169c1227979a002d3a-f601ec50578c5cd1a53ff0ac95753a2e">
        <akt:full-name>C. Koza</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Since the beginning of the century, Alcatel Austria has been the main supplier of railway signalling products in Austria. In 1985, Alcatel Austria began developing the electronic interlocking system ELEKTRA. In order to meet the stringent safety requirements for railway interlocking applications, a two channel system based on design diversity has been developed. High availability and reliability are achieved by using actively triplicated redundancy with on-line recovery. In 1989, the first system was put into operation. About 15 railway interlocking systems are in operation and further installations are ongoing. The paper presents the fault tolerance mechanisms used for design faults as well as physical faults. The experience gained with these concepts is also discussed</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466954.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>railways</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>redundancy</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>safety</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>safety-critical software</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>signalling</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>traffic engineering computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466955">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Stopping rules for the operational testing of safety-critical software</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-dc42349d437cb67986483761abab4a5f-d4e6dde16024dcf9695e252b80d64d42">
        <akt:full-name>B. Littlewood</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-12ad469ce3936cada2642fe83293ccac-92e4d4548033410fd9ceb60e02258d3f">
        <akt:full-name>D. Wright</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>It has been proposed to conduct a test of a software safety system for a nuclear reactor by subjecting it to demands that are statistically representative of those it meets in operational use. The intention behind the test is to acquire a high confidence (99%) that the probability of failure on demand is smaller than 10-3. To this end the test takes the form of executing about 5000 demands and requiring that all of these are successful. In practice if is necessary to consider what happens if the software fails the test and is repaired. We argue that the earlier failure information needs to be taken into account in devising the form of the test that the modified software needs to pass-essentially that after such failure the testing requirement might need to be more stringent (i.e. the number of tests that must be executed failure-free should increase). We examine a Bayesian approach to the problem, for this stopping rule based upon a required bound for the probability of failure on demand, as above, and also for a requirement based upon a prediction of future failure behaviour. We show that the first approach seems to be less conservative than the second, and argue that the second should be preferred for practical application</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466955.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>Bayes methods</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fission reactor operation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fission reactor safety</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>nuclear engineering computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>probability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>protection</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>safety-critical software</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466956">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Evaluation of software dependability based on stability test data</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-07ce46e8db392c711e4f2c28558f0c73-357dad94743413d03cd73d9f79e93a6e">
        <akt:full-name>Dong Tang</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7a7045811a8b7be1db4671be5925945a-98cf52d8a12e53d1ff3695cbd9c0832b">
        <akt:full-name>M. Hecht</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The paper discusses a measurement-based approach to dependability evaluation of fault-tolerant, real-time software systems based on failure data collected from stability tests of an air traffic control system under development. Several dependability analysis techniques are illustrated with the data: parameter estimation, availability modeling of software from the task level, applications of the parameter estimation and model evaluation in assessing availability, identifying key problem areas, and predicting required test duration for achieving desired levels of availability and quantification of relationships between software size, the number of faults, and failure rate for a software unit. Although most discussion is focused on a typical subsystem, Sector Suite, the discussed methodology is applicable to other subsystems and the system. The study demonstrates a promising approach to measuring and assessing software availability during the development phase, which has been increasingly demanded by the project management of developing large, critical systems</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466956.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466957">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Measurement of failure rate in widely distributed software</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-cb9bfe73f6f41da8f792ce4bbef8d641-51923806f1a8483cebbb26ffbd181eaf">
        <akt:full-name>R. Chillarege</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9b2ce45fc80b12ae128bb561354294c7-9b7d15b0c6006dcfb557786f5c26db13">
        <akt:full-name>S. Biyani</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8612fbd3ebf41962157819e8c7ee113e-9b7d15b0c6006dcfb557786f5c26db13">
        <akt:full-name>J. Rosenthal</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>In the history of empirical failure rate measurement, one problem that continues to plague researchers and practitioners is that of measuring the customer perceived failure rate of commercial software. Unfortunately, even order of magnitude measures of failure rate are not truly available for commercial software which is widely distributed. Given repeated reports on the criticality of software, and its significance, the industry flounders for some real baselines. The paper reports the failure rate of a several million line of code commercial software product distributed to hundreds of thousands of customers. To first order of approximation, the MTBF reaches around 4 years and 2 years for successive releases of the software. The changes in the failure rate as a function of severity, release and time are also provided. The measurement technique develops a direct link between failures and faults, providing an opportunity to study and describe the failure process. Two metrics, the fault weight, corresponding to the number of failures due to a fault and failure window, measuring the length of time between the first and last fault, are defined and characterized. The two metrics are found to be higher for higher severity faults, consistently across all severities and releases. At the same time the window to weight ratio, is invariant by severity. The fault weight and failure window are natural measures and are intuitive about the failure process. The fault weight measures the impact of a fault on the overall failure rate and the failure window the dispersion of that impact over time. These two do provide a new forum for discussion and opportunity to gain greater understanding of the processes involved</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466957.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software metrics</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466958">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>VAX/VMS event monitoring and analysis</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0ba2ee175eab6358293b3827a9b3dd39-6c64898d76f9c721c69419d3a6748af9">
        <akt:full-name>M.F. Buckley</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4eba2bc7fb235c73aca57ecd0bdbf595-b42c148767c85bbbb0f88e8fa5736fe1">
        <akt:full-name>D.P. Siewiorek</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Event logs can be used effectively to improve computer system availability. Uses include retrospective and predictive diagnosis; fault management; failure rate estimation; and trend analysis. Unfortunately, much of the research to date has been hampered by the lack of suitable event data, and occasionally by the incorrect interpretation of the available data. This research uses one of the largest sets of data, and the most intensive investigation of the monitoring process conducted to date, to examine event monitoring and analysis. 2.35 million events from 193 VAX/VMS systems covering 335 machine years were used. Examples are presented which show that monitoring deficiencies complicate the analyses, consume additional time, and make incorrect conclusions more likely. For example, incorrect handling of bogus timestamps changes the mean time between groups of events by an order of magnitude. An analysis procedure to identify defects is provided, along with design rules to create better quality logs</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466958.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault diagnosis</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>operating systems (computers)</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system monitoring</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>systems analysis</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466959">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Checking the integrity of trees</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-08f5b7250324b6fada2ae266e94d2373-5b074db3c40832ec31ecc92ffae26dec">
        <akt:full-name>J.D. Bright</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-26bb0b749f946c002b186625c01a82f6-a4304b994affbf4c1f46d83c44eb5dc4">
        <akt:full-name>G.F. Sullivan</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-336d3f1d7f40797fb9d50cb67de2a407-a4304b994affbf4c1f46d83c44eb5dc4">
        <akt:full-name>G.M. Masson</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We describe a general checking the integrity of data structures corrupted by memory faults. Our approach is based on a recursive checksum technique. Basic methods of using checksums have been previously seen to be useful for detecting faults at the bit or word level; among our results is their extension to the node level. The major contributions of our paper are threefold. First, we show how the recursive checksum procedure can be applied to tree data structures that are dynamically changing, whereas the previous work concentrated on trees that were static in their structure. This results in a asymptotic improvement in running time for applications where it; is natural to model the underlying data as a tree. Second, we present a C++ implementation of this scheme. Significantly, it is seen that our software can be used with existing applications which manipulate trees with only minor modification of the application programs. Finally, we have performed fault injection experiments which confirm the fault detection capability of our integrity checking approach</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466959.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>data integrity</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault diagnosis</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>recursive functions</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>tree data structures</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466960">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>On-line error monitoring for several data structures</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-08f5b7250324b6fada2ae266e94d2373-5b074db3c40832ec31ecc92ffae26dec">
        <akt:full-name>J.D. Bright</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-26bb0b749f946c002b186625c01a82f6-a4304b994affbf4c1f46d83c44eb5dc4">
        <akt:full-name>G.F. Sullivan</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We present several examples of programs which efficiently monitor the answers from queries performed on data structures to determine if any errors are present. Our paper includes the first efficient on-line error monitor for a data structure designed to perform nearest neighbor queries. Applications of nearest neighbor queries are extensive and include learning, categorization, speech processing, and data compression. Our paper also discusses on-line error monitors for priority queues and splittable priority queues. On-line error monitors immediately detect if an error is present in the answer to a query. An error monitor which is not on-line may delay the time of detection until a later query is being processed which may allow the error to propagate or may cause irreversible state changes. On-line monitors can allow a more rapid and accurate response to an error</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466960.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>data compression</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>data structures</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program diagnostics</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>queueing theory</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>speech processing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466961">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Software rejuvenation: analysis, module and applications</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8da3e8709afd68db92d6186a1364852c-3d16ddf8147ab42c05ef53c309a5a335">
        <akt:full-name>Y. Huang</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5652cdac0a68322d81e7bfc161a87ad5-0cb9abc36f85221ff0a1bba5c23ab752">
        <akt:full-name>C. Kintala</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b55d7e791c8ab14d1122aa772e1e1b9d-3d16ddf8147ab42c05ef53c309a5a335">
        <akt:full-name>N. Kolettis</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ad85e8063657064aa64166ce65dbd19e-3d16ddf8147ab42c05ef53c309a5a335">
        <akt:full-name>N.D. Fulton</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Software rejuvenation is the concept of gracefully terminating an application and immediately restarting it at a clean internal state. In a client-server type of application where the server is intended to ran perpetually for providing a service to its clients, rejuvenating the server process periodically during the most idle time of the server increases the availability of that service. In a long-running computation-intensive application, rejuvenating the application periodically and restarting it at a previous checkpoint increases the likelihood of successfully completing the application execution. We present a model for analyzing software rejuvenation in such continuously-running applications and express downtime and costs due to downtime during rejuvenation in terms of the parameters in that model. Threshold conditions for rejuvenation to be beneficial are also derived. We implemented a reusable module to perform software rejuvenation. That module can be embedded in any existing application on a UNIX platform with minimal effort. Experiences with software rejuvenation in a billing data collection subsystem of a telecommunications operations system and other continuously-running systems and scientific applications in AT&amp;T are described</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466961.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>Unix</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>client-server systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>financial data processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>invoicing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>operating systems (computers)</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software engineering</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>telecommunication computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466962">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Design fault tolerance in operating systems based on a standardization project</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-966752d48d477bcaad3b46b4a7f72176-46eb5f6325b71f6d38ef910fecc0add1">
        <akt:full-name>A. Watanabe</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-61d2a4fb6756a0bffb9db8f1bed32c4c-46eb5f6325b71f6d38ef910fecc0add1">
        <akt:full-name>K. Sakamura</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We are exploring an MLDD (Multi-Layered Design Diversity) architecture that applies natural design diversity to an application program layer, an operating system layer, and a hardware layer based on the TRON standardization project. We have devised a backward error recovery mechanism for the operating system layer, and to implement it, we have developed a mechanism that automatically exchanges diverse operating system implementations. The paper presents an error-check generation method for the operating system layer. In this method, which is called SBACCG (Specification-Based Adaptive Consistency Checks Generation), one set of consistency checks is derived from a formal specification, and the checks are adapted to each implementation. We experimentally evaluated the effectiveness of our backward error recovery mechanism that uses the error checks generated through SBACCG</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466962.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>formal specification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>operating systems (computers)</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>safety-critical software</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software engineering</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>standardisation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466963">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Completely asynchronous optimistic recovery with minimal rollbacks</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7c30dca75bbdbf998548e3ff3483f01f-1f9a09ae92d66140e1a487174ae6ddff">
        <akt:full-name>S.W. Smith</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6176ef6c1e83eb909c996c235a1e2324-1f9a09ae92d66140e1a487174ae6ddff">
        <akt:full-name>D.B. Johnson</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-043e09213442eca2bff98ac839fb710a-3e7184481ea092b2d8c2f59aedb59c2b">
        <akt:full-name>J.D. Tygar</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Consider the problem of transparently recovering an asynchronous distributed computation when one or more processes fail. Basing rollback recovery on optimistic message logging and replay is desirable for several reasons, including not requiring synchronization between processes during failure-free operation. However previous optimistic rollback recovery protocols either have required synchronization during recovery, or have permitted a failure at one process to potentially trigger an exponential number of process rollbacks. We present an optimistic rollback recovery protocol that provides completely asynchronous recovery, while also reducing the number of times a process must roll back in response to a failure to at most one. This protocol is based on comparing timestamp vectors across multiple levels of partial order time</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466963.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>protocols</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466964">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Algorithm-based diskless checkpointing for fault tolerant matrix operations</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-628bae06a0529438cf46da51babfb1a6-10b2bde9c93b8f48d63f109b35281cb5">
        <akt:full-name>J.S. Plank</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fee5826b04ea897da86a08772d099301-422e08645f88d95e9c8be28c042646da">
        <akt:full-name>Youngbae Kim</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-490472555a6b0688b637ab896e5b6601-422e08645f88d95e9c8be28c042646da">
        <akt:full-name>J.J. Dongarra</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The paper is an exploration of diskless checkpointing for distributed scientific computations. With the widespread use of the "network of workstations" (NOW) platform for distributed computing, long-running scientific computations need to tolerate the changing and often faulty nature of NOW environments. We present high-performance implementations of several algorithms for distributed scientific computing, including Cholesky factorization, LU factorization, QR factorization, and preconditioned conjugate gradient. These implementations are able to run on PVM networks of at least N processors, and can complete with low overhead as long as any N processors remain functional. We discuss the details of how the algorithms are tuned for fault-tolerance, and present the performance results on a PVM network of SUN workstations, and on the IBM SP2</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466964.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>conjugate gradient methods</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>local area networks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>matrix algebra</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>natural sciences computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>subroutines</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>workstations</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466965">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault simulation of IDDQ tests for bridging faults in sequential circuits</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0098cb0790eaecd47e0f10cbc6278cc8-a46533414a20d80554e77c819607bec7">
        <akt:full-name>P. Thadikaran</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-bc28591acff9e6048891151ee6c58228-a46533414a20d80554e77c819607bec7">
        <akt:full-name>S. Chakravarty</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6ff95ad97726b9b35b9d314d75335ddc-372682cb0a814d448007c2a8f0d82dee">
        <akt:full-name>J. Patel</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The notion of indistinguishable pairs is introduced. Two methods to compute such pairs-an explicit scheme and an implicit scheme-are presented. The resulting fault simulation algorithms, list-based scheme and tree-based scheme are compared using a variety of faultlists and test sets. The performance of the tree-based scheme is found to be superior to the list-based scheme. Applications where the list-based scheme perform better are discussed</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466965.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>circuit analysis computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>digital simulation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault diagnosis</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault trees</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>list processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>sequential circuits</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466966">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A new diagnosis approach for short faults in interconnects</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f1d15bfbd9cc99c94245a16b97a39df9-7b0f4407f0a47dab7ea5bba1b63a0cae">
        <akt:full-name>Chao Feng</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2bee94828115d790353089598dbeed75-5bf7bbcfe3260af5f331a362ba08c453">
        <akt:full-name>Wei Kang Huang</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d64e84213dc1ff51bc0db52b9a828a01-584f39ba19e8eb43ff9771281f4592e0">
        <akt:full-name>F. Lombardi</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Existing one-step diagnosis approaches for faults in interconnects either yield a long test sequence, or use a non-generalized procedure to generate a shorter test sequence. We propose a new diagnosis approach for short faults in interconnects. The pin-adjacency fault model is assumed. By using a divide-and-conquer strategy, our approach can generate a very compact test vector sequence which can diagnose an unrestricted number of short faults. Our experiments for three benchmarks as well as large random interconnects (up to 50,000 nets) show that our approach can achieve more than 50% savings in the length of the generated test sequence. This can significantly save the diagnosis cost for boundary-scan testing. An adaptive diagnosis approach is further proposed to dynamically truncate the originally generated test sequence based on the current information of faulty nets. The performance of our adaptive approach in terms of the on-line test generation time and the resulting test sequence length is better than for existing adaptive diagnosis approaches when the fault rate is not very small, such as in a new product line. If a low complexity for the ATE is of major importance, then the proposed one-step approach is the best choice</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466966.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>adaptive systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>boundary scan testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>computer testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>divide and conquer methods</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault diagnosis</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessor interconnection networks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>problem solving</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>sequences</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466967">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Node covering, error correcting codes and multiprocessors with very high average fault tolerance</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d750dc101814879e91ac33b3842e6725-16daac8bde00f828a9030c49a04118fb">
        <akt:full-name>S. Dutt</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-75698c651a052d9e7446bbac5175f569-9b101fc3613732f0a1349f56f7f2da60">
        <akt:full-name>N.R. Mahapatra</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Most previous work on fault-tolerant (FT) multiprocessor design has concentrated on deterministic k-fault-tolerant (k-FT) designs in which exactly k spare processors and some spare switches and links are added to construct multiprocessors that can tolerate any k processor faults. However, after k faults are reconfigured around, much of the extra links and switches can remain unutilized. We show how to use the node-covering principle of Dutt and Hayes (1992) and error correcting codes in order to construct probabilistic designs with very high average fault tolerance but low wiring and switch overhead. This design methodology is applicable to any multiprocessor interconnection topology. We also obtain the deterministic fault tolerance for these designs and develop efficient layout strategies for them</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466967.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>error correction codes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessor interconnection networks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reconfigurable architectures</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>switches</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>switching circuits</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466968">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A class of optimal fixed-byte error protection codes for computer systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-31f8276351682e93960ef032a2488137-f5384f3cced90f7908f9d307facd7bd5">
        <akt:full-name>E. Fujiwara</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-985b4c9760d80ffd19226ca0261fb985-4643290ee1c7bd8cf9a496cd523a483a">
        <akt:full-name>N. Kitakami</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Error control codes are now being successfully applied to computer systems, especially to memory systems. This paper proposes a new class of error control codes to protect the fixed-byte in computer words from errors. The fixed-byte stores valuable and important information such as control and address information in communication messages or pointer information in database words. `Fixed-byte' means the clustered information digits in the word whose position is determined in advance. As a simple class of these unequal error protection codes, this paper proposes two types of optimal fixed-byte error protection codes: single-bit error correction and fixed b-bit byte error correction (SEC-FbEC) codes and single-bit error correction, double-bit error detection, and fixed b-bit byte error detection (SEC-DED-FbED) codes. The obtained optimal SEC-FbEC codes where byte length b=7 bits and information length k=64 bits, for example, require a check-bit length of only 8 bits, which is the same as that of the conventional SEC-DED codes with k=64 bits</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466968.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer architecture</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error correction codes</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466969">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Gracefully degrading systems using the bulk-synchronous parallel model with randomised shared memory</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9b57959a9e21ea0377f2ac043f050f17-b51627cafe9a8cf8863c01bc1b219ef3">
        <akt:full-name>A. Savva</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4f0059f064ae06b94f703ae57479af72-049ac8dcdf97ce913d8ca1a7b43c04e7">
        <akt:full-name>T. Nanya</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The bulk-synchronous parallel model (BSPM) was proposed as a bridging model for parallel computation by Valiant (1990). By using randomised shared memory (RSM), this model offers an asymptotically optimal emulation of the PRAM. By using the BSPM with RSM, we show how a gracefully degrading massively parallel system can be obtained through: memory duplication to ensure global memory integrity, and to speed up the reconfiguration; a global reconfiguration method that restores the logical properties of the system, after a fault occurs. We assume fail-stop processors, single faults, no spare processors, and no significant loss of network throughput as a result of faults. Work done during reconfiguration is shared equally among the live processors, with minimal coordination. The overhead of the scheme and the graceful degradation achieved depend on the program being executed. We evaluate the reconfiguration, overhead, and graceful degradation of the system experimentally</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466969.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>memory architecture</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel architectures</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel machines</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>random-access storage</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reconfigurable architectures</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>shared memory systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466970">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A recoverable distributed shared memory integrating coherence and recoverability</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-51f5b2c37fe89715404a0f9cbca87465-280443ed3647873e1dc3d52fa6a3c897">
        <akt:full-name>A.-M. Kermarrec</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-946ee36dca25d0b180430c962b2aa0ee-9555b46b03e5df6e0d090f60130ecd47">
        <akt:full-name>G. Cabillic</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-163b115c62704678d4f7f83f9d07db3f-9555b46b03e5df6e0d090f60130ecd47">
        <akt:full-name>A. Gefflaut</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-39d49080a67dc948c5c0d870a2e5fd6a-9555b46b03e5df6e0d090f60130ecd47">
        <akt:full-name>C. Morin</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-985722daed9d5d8895d949d2c3beccc3-4bdcb3d250f52c7c9265cdaa4d7f5efe">
        <akt:full-name>I. Puaut</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Large-scale distributed systems are very attractive for the execution of parallel applications requiring a huge computing power. However, their high probability of site failure is unacceptable, especially for long time running applications. In this paper, we address this problem and propose a checkpointing mechanism relying on a recoverable distributed shared memory (DSM) in order to tolerate single node failures. Although most recoverable DSMs require specific hardware to store recovery data, our scheme uses standard memories to store both current and recovery data. Moreover, the management of recovery data is merged with the management of current data by extending the DSM's coherence protocol. This approach takes advantage of the data replication provided by a DSM in order to limit the amount of transferred pages during the checkpointing. The paper also presents an implementation and a preliminary performance evaluation of our recoverable DSM on a 56-node Intel Paragon</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466970.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed memory systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>large-scale systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>shared memory systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466971">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Reduced overhead logging for rollback recovery in distributed shared memory</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0da1d2e4a8755c3a334705d3ec8bfc68-641addff9248758d693941d88f0bd895">
        <akt:full-name>G. Suri</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e03c8c3c130ca57ae83805afcc346408-641addff9248758d693941d88f0bd895">
        <akt:full-name>B. Jannsens</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fb38f502674924925e2c4a2e8880d1bc-978117774e048d6deaba362337d7988c">
        <akt:full-name>W.K. Fuchs</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Rollback techniques that use message logging and deterministic replay can be used in parallel systems to recover a failed node without involving other nodes. Distributed shared memory (DSM) systems cannot directly apply message-passing logging techniques because they use inherently nondeterministic asynchronous communication. This paper presents new logging schemes that reduce the typically high overhead for logging in DSM. Our algorithm for sequentially consistent systems tracks rather than logs accesses to shared memory. In an extension of this method to lazy release consistency, the per-access overhead of tracking has been completely eliminated. Measurements with parallel applications show a significant reduction in failure-free overhead</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466971.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>data loggers</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>distributed memory systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>shared memory systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466972">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Componentwise decomposition for an efficient reliability computation of systems with repairable components</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-89e7f505a823e96ace9b3f5550e28388-e5c88be8adf45f581c225015682cb4c0">
        <akt:full-name>M. Balakrishnan</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2a111934fbac2ead56739753abe119c6-3d57674779de0cf4a808f7690a85ef94">
        <akt:full-name>K. Trivedi</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Fault trees and Markov chains are commonly used for dependability modeling. Markov chains are powerful in that various kinds of dependencies can be easily modeled that fault tree models have difficulty capturing, but the state space grows exponentially in the number of components. Fault tree models are adequate for computing the reliability of nonrepairable systems, but a state space description becomes necessary for repairable systems due to induced dependencies (even when all failure and repair processes are otherwise independent). We demonstrate that a decomposition approach can be used to avoid a full-system Markov reliability model for repairable systems with independent failure and repair processes. For an n-component system, n 3-state sub-models can replace a full-system monolithic model. This is an approximation because the parameters used in the sub-model are approximately derived from the monolithic model</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466972.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>Markov processes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault trees</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>state-space methods</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466973">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Dependability assessment using binary decision diagrams (BDDs)</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2536ee0e0279ada2d44c9144ee24d5a4-4dfeb9051f45f86cb22874eb1a855a01">
        <akt:full-name>S.A. Doyle</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-33f6471dd18607ea5120d618beef02a3-4dfeb9051f45f86cb22874eb1a855a01">
        <akt:full-name>J.B. Dugan</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Presents the DREDD (Dependability and Risk Evaluation using Decision Diagrams) algorithm which incorporates coverage modeling into a BDD solution of a combinatorial model. BDDs, which do not use cutsets to generate system unreliability, can be used to find exact solutions for extremely large systems. The DREDD algorithm takes advantage of the efficiency of the BDD solution approach and increases the accuracy of a combinatorial model by including consideration of imperfect coverage. The usefulness of combinatorial models, long appreciated for their logical structure and concise representational form, is extended to include many fault-tolerant systems previously thought to require more complicated analysis techniques in order to include coverage modeling. In. This paper, the DREDD approach is presented and applied to the analysis of two sample systems, the F18 flight control system and a fault-tolerant multistage interconnection network</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466973.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>combinatorial mathematics</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>diagrams</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multistage interconnection networks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reliability theory</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466974">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Feasibility and effectiveness of the algorithm for overhead reduction in analog checkers</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-44a25e197d194e5804b63091a38f0d12-93540ba771158c9dacda6588f2dc8294">
        <akt:full-name>Yingquan Zhou</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4d3b92149bc9e397ca98ec22d344fb18-93540ba771158c9dacda6588f2dc8294">
        <akt:full-name>M.W.T. Wong</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e82099ba7a35ea1810b7ffe23db450af-93540ba771158c9dacda6588f2dc8294">
        <akt:full-name>Yinghua Min</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Self-checking in analog circuits is more difficult than in digital circuits. The technique proposed by A. Chatterjee (1993) can address concurrent error detection and correction in linear analog circuits and hence the reliability of the original circuit is greatly improved. However, hardware overhead is an important issue in this technique, which has never been addressed before. This paper proposes an algorithm for reduction of hardware overhead in the analog checker, and also presents a series of theoretical results, including the concept of all-non-zero solutions and several existence conditions of such solutions. As the basis of the algorithm, these results are new in the mathematical world and can be used to verify the feasibility and effectiveness of the algorithm. Without changing the original circuit, the proposed algorithm can not only reduce the number of passive elements, but also the number of analog operators so that the error detection circuitry in the checker has optimal hardware overhead</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466974.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>analogue circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error detection</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault diagnosis</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466975">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Towards totally self-checking delay-insensitive systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-378766a3e9cd4d2ca1f108866cba753e-b7f4b3447426ac0a48302983e99dcfcf">
        <akt:full-name>S.J. Piestrak</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4f0059f064ae06b94f703ae57479af72-049ac8dcdf97ce913d8ca1a7b43c04e7">
        <akt:full-name>T. Nanya</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Considers designing quasi-delay-insensitive (QDI) combinational circuits (CCs), a class of self-timed (asynchronous) circuits. The necessity of coding both inputs and outputs of any QDI CC by using unordered codes naturally leads to inverter-free realization. The analysis of behavior of a QDI CC with input errors leads to the observation that it is impossible to avoid the so-called late detection problem. The new set of correct definitions of the code-disjoint QDI CC and of the totally self-checking (TSC) QDI CC is introduced. The detailed analysis of the behavior of a faulty QDI system with internal permanent faults shows that: (1) late detection, (2) the possibility of occurrence of invalid transitions, and (3) premature completion, seem to be the inherent properties of any QDI CC, which preclude its fault-secure (hence TSC) implementation for some single stuck-at faults. The first ever self-testing code-disjoint completion checker is proposed. Finally, an extensive study of designing self-testing code-disjoint QDI CCs is presented</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466975.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>codes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>combinational circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>delays</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>encoding</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault diagnosis</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466976">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Implicit signature checking</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-abe30fc7d25323509c5f040a1d239899-2f446336573da445833fa5bba887f6bb">
        <akt:full-name>J. Ohlsson</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f8c32ec6cba3201af1ad3ab2ebc21f3f-2f446336573da445833fa5bba887f6bb">
        <akt:full-name>M. Rimen</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Proposes a control flow checking method that assigns unique initial signatures to each basic block in a program by using the block's start address. Using this strategy, implicit signature checking points are obtained at the beginning of each basic block, which results in a short error detection latency (2-5 instructions). Justifying signatures are embedded at each branch instruction, and a watchdog timer is used to detect the absence of a signature checking point. The method does not require the building of a program flow graph and it handles jumps to destinations that are not fixed at compile/link-time, e.g. subroutine calls using function pointers in the C language. This paper includes a generalized description of the control flow checking method, as well as a description and evaluation of an implementation of the method</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466976.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>error detection</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program control structures</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system monitoring</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466977">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A switch-level algorithm for simulation of transients in combinational logic</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ed0c631f951cf83e15f69898010d5c0d-de677eff524b24c52dc47bedbc036c8e">
        <akt:full-name>P. Dahlgren</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7ad6877152f2a1c55d16df6043c029d8-de677eff524b24c52dc47bedbc036c8e">
        <akt:full-name>P. Liden</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A two-step switch-level algorithm for fault simulation of transients in CMOS networks is presented. The first step models the fault propagation locally from the fault injection site to the subsequent CMOS blocks. It is shown that the pulse width of a transient is a vital parameter in the propagation process. A first-order RC network model for the prediction of the width of transients is used. The second step consists of a set of rules for the propagation of fully developed transients through basic CMOS blocks. The fact that transients may fade out during propagation is efficiently modeled by taking into account their pulse widths. The proposed algorithm shows good agreement with electrical-level simulations in predicting the effects of device-level transients</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466977.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>CMOS integrated circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>circuit analysis computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>combinational circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic CAD</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>transients</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466978">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Combining software-implemented and simulation-based fault injection into a single fault injection method</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b58cdb0a99240e15b201a03318a47aca-52a438c59324b09f40472de2b87dcdd4">
        <akt:full-name>J. Guthoff</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c00a294b60bf2eb53865931d5e425f6a-52a438c59324b09f40472de2b87dcdd4">
        <akt:full-name>V. Sieh</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Fault/error injection has emerged as a valuable means for evaluating the dependability of a system. In particular, software-based techniques (which can be described as software-implemented and simulation-based techniques) have become very popular because of the relative simplicity of injecting faults. After discussing the advantages and drawbacks of these techniques, two approaches are introduced which try to overcome crucial problems when using software-based fault injection techniques. The first one improves the accuracy of software-implemented fault injection experiments. The second one offers detailed insights into the system dynamics in the presence of faults. With this knowledge, the number of fault injections (a major concern in simulation-based fault injection) can be significantly reduced. These approaches can be joined together, offering accuracy of fault injection results as well as transparency of the system dynamics in the presence of faults. A case study is shown in which the de facto dependability properties of a standard component, a Motorola MC88100 RISC processor, are evaluated</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466978.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>digital simulation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>microprocessor chips</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reduced instruction set computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466979">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Optimal recovery point insertion for high-level synthesis of recoverable microarchitectures</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f1258a7fd8201ab0be5875475ae9c67b-256da67ebc7a13d4397ed9e568931b9d">
        <akt:full-name>D.M. Blough</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-13606e12034a7053dcb0da518ba382b8-9af7d8ad880bdecc7e74709004eb6ac7">
        <akt:full-name>F.J. Kurdahi</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c4b2f3ba9c5f581cc961d7abe33a57c7-9af7d8ad880bdecc7e74709004eb6ac7">
        <akt:full-name>S.Y. Ohm</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The paper considers the problem of automatic insertion of recovery points in recoverable microarchitectures. Previous work on this problem provided heuristic algorithms that attempted either to minimize computation time with a bounded hardware overhead or to minimize hardware overhead with a bounded computation time. We present efficient algorithms that provide provably optimal solutions for both of these formulations of the problem. These algorithms take as their input a scheduled control-data flow graph describing the behavior of the system and they output either a minimum-time or a minimum-cost set of recovery point locations. We demonstrate the performance of our algorithms using some well-known benchmark control-data flow graphs. Over all parameter values for each of these benchmarks, our optimal algorithms are shown to perform as well as, and in many cases better than, the previously proposed heuristics</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466979.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer architecture</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>data flow graphs</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>high level synthesis</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic CAD</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466980">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Synthesizing finite state machines for minimum length synchronizing sequence using partial scan</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ee922cef6ece1aa50e2fc03436e59db0-c368d09b3188094b7806d3e1e0229c5c">
        <akt:full-name>Ning Jiang</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8c4a0edee57aaa6db5a4415b2ccb351c-c368d09b3188094b7806d3e1e0229c5c">
        <akt:full-name>R.M. Chou</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-583e845329bab667378f87353818cf3a-5ed53424bb32ef32b05f16e684ba4291">
        <akt:full-name>E.K. Saluja</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The goal is to synthesize an FSM with the objective to minimize the number of scanned flip-flops while requiring a minimum number of system clocks to reach the synchronizable state. An algorithm for selecting state variables for scanning while minimizing the length of the synchronizing sequence based on the reverse-order-search technique is presented. Extra transitions may be required to avoid possible lock-in conditions if the initial state is an invalid state for the machines where the number of states is not a power of 2. Experimental results show that the proposed method guarantees synchronizability and testability through the proper state assignment with reasonable hardware overhead for the benchmark circuits</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466980.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>automatic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>finite state machines</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>flip-flops</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>search problems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>sequential circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>state assignment</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>switching functions</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>synchronisation</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466981">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Synthesis for testability by sequential redundancy removal using retiming</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-09a1d5e10166e11179984dd310574f82-6be7838c523e3ff5795480a853b79457">
        <akt:full-name>H. Yotsuyanagi</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e421d9d864a410c2c01bb41bb98fa388-fa1b9077cbd8a5c74271241cd622e620">
        <akt:full-name>S. Kajihara</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d6b361c66dc6964630f4e9984d3fb47a-763d8b08c50f2fcc227dc7e079228cc8">
        <akt:full-name>K. Kinoshita</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The existence of sequential redundancy degrades testability of sequential circuits. By using retiming which rearranges flip-flops, some sequential redundancy is converted into combinational redundancy, which can be easily identified and removed by a combinational test generation technique. Retiming is utilized for two purposes: one is for finding sequential redundancy and another is for reducing the number of flip-flops. Applying retiming and redundancy removal techniques concurrently, testability of sequential circuits is enhanced. Experimental results for ISCAS'89 benchmark circuits show the effectiveness of this method for optimizing circuits</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466981.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>design for testability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>flip-flops</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>redundancy</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>sequential circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>timing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466982">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A flexible ServerNet-based fault-tolerant architecture</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-69a8e32ea40358a7c394cf2c098e96be-201f02706d314d601356963119394999">
        <akt:full-name>W.E. Baker</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-68ea57cbcf8a33d7acb6017c2942316a-eeb0840d69eff9e029821822a1db7dd1">
        <akt:full-name>R.W. Horst</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-744f71db5444a12946dd704b351eeb5a-201f02706d314d601356963119394999">
        <akt:full-name>D.P. Sonnier</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-37562f9062d2f1634978aeda400eabca-201f02706d314d601356963119394999">
        <akt:full-name>W.J. Watson</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The paper introduces a new fault-tolerant architecture that combines the best attributes of the software fault-tolerant Tandem NonStop systems with the hardware fault-tolerant integrity systems. This architecture is based on the ServerNet System Area Network (SAN). ServerNet, formerly called TNet, is a packetized byte-serial multistage network that supports both I/O and interprocessor traffic in fault-tolerant systems. Dual-ported CPUs and VO controllers connect to independent subnetworks in a variety of different network topologies. Systems can expand either through shared or distributed memory multiprocessing. A separate maintenance system controls system initialization, online configuration changes, and error reporting. The architecture's flexibility makes it suitable for a wide range of environments with varying requirements for performance, fault tolerance, and software compatibility</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466982.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer architecture</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>data integrity</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>distributed memory systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>input-output programs</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multistage interconnection networks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>shared memory systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software maintenance</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466983">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Availability and performance evaluation of database systems under periodic checkpoints</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a2187f4bfa3868be3feb37e668080baa-e14598a42cea26a690d66f422883bc1d">
        <akt:full-name>R.V. Campos</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-bd827c59e28b376ea08f4f397f67f8c8-e14598a42cea26a690d66f422883bc1d">
        <akt:full-name>E. de Souza e Silva</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Checkpointing roll back and recovery is a common technique to insure data integrity, to increase availability and to improve the performance of transaction oriented database systems. Parameters such as the the checkpointing frequency and the system load have an impact on the overall performance and it is important to develop accurate models of the system under study. We find expressions for the system availability and for the expected response time of the transactions from a model that, unlike previous analytical work, takes into account the dependency among the recovery times between two checkpoints. Furthermore, our model can incorporate details concerning the contention for the system resources</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466983.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>data integrity</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>database theory</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software performance evaluation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>transaction processing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466984">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A model for the analysis of the fault injection process</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d13b6f0432f1af2d85d259e4ea1d8c24-0e5608c55701d59b772b2d3061c6f9d0">
        <akt:full-name>A. Steininger</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-dd0e0c5791a8285611ac1d62d051bc48-0e5608c55701d59b772b2d3061c6f9d0">
        <akt:full-name>H. Schweinzer</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Results of fault injection experiments performed under different conditions can only be related to each other, if their interpretation is based on a thorough understanding of activation and propagation of faults and errors. We analyze these processes by applying a special layer model of a computing system. Our aim is to model the transformation of a fault on a signal line into a system failure as the propagation of erroneous information through multiple layers. Two specific layers that describe the fault activation process have been sufficiently completed and are presented here. A quantification for these is derived and different applications are summarized. Excellent correspondence between analytical results based on modeling and experimental data is found. A prediction of fault activation with high accuracy is possible, as well as a quantitative evaluation of the effect of synchronizing fault injection</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466984.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466985">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Process allocation for load distribution in fault-tolerant multicomputers</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-aec0f18004fcab1237a442e91c169665-a2827619b2eed38f391f0748d225c4e5">
        <akt:full-name>Jong Kim</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-764dd50545772b3bda7a8ff8ce3449a2-5eca2eaa3a127da71f96c2d37de76584">
        <akt:full-name>Heejo Lee</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3816a84b56c8f830ca9b6053440d5dee-a2827619b2eed38f391f0748d225c4e5">
        <akt:full-name>Sunggu Lee</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>In this paper, we consider a load-balancing process allocation method for fault-tolerant multicomputer systems that balances the load before as well as after faults start to degrade the performance of the system. In order to be able to tolerate a single fault, each process (primary process) is duplicated (i.e. has a backup process). The backup process executes on a different processor from the primary, checkpointing the primary process and recovering the process if the primary process fails due to the occurrence of a fault. In this paper, we first formalize the problem of load-balancing process allocation and show that it is an NP-hard problem. Next, we propose a new heuristic process allocation method and analyze the performance of the proposed allocation method. Simulations are used to compare the proposed method with a process allocation method that does not take into account the different load characteristics of the primary and backup processes. While both methods perform well before the occurrence of a fault in a primary process, only the proposed method maintains a balanced load after the occurrence of such a fault</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466985.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computational complexity</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessor interconnection networks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>resource allocation</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466986">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A fault-tolerant protocol for location directory maintenance in mobile networks</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-25e6b19661e31386631bce631203141e-d5847d20aa886f0f080c2d7d180d4023">
        <akt:full-name>S. Rangarajan</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d117648110440e9b1eafedbfad524196-12fed59886a1e6e6a4ed7c47f804561b">
        <akt:full-name>K. Ratnam</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4c2212c63d0c133eb8e2dd865276289b-12fed59886a1e6e6a4ed7c47f804561b">
        <akt:full-name>A.T. Dahbura</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>In this paper, we present a fault-tolerant protocol for maintaining location directories in mobile networks. The protocol tolerates base station failures and also allows for consistent location information to be maintained about mobile hosts that switch off and arbitrarily reappear in some other part of the network. Further, the protocol tolerates the corruption of a logical time stamp that is part of any protocol where new location information has to be distinguished from old location information when a location directory is updated. We formally show that the protocol maintains consistent location information and does not overwrite new location information with old location information. The protocol can be hierarchically organized to reduce the message overhead incurred by location directory updates</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466986.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>protocols</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466987">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault-tolerant clock synchronization for distributed systems using continuous synchronization messages</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-28ce06a2c99179b6bfc77ca668a5c591-601d53c8364c601887957ac0c48252df">
        <akt:full-name>A. Olson</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6ea265a9e8426b009b111a22d5a346a2-72af3e26a814d9068e0d6db9f66c4696">
        <akt:full-name>K.G. Shin</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-717d258ad90e6e9e518b2b6a79f900b5-601d53c8364c601887957ac0c48252df">
        <akt:full-name>B.J. Jambor</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We present a probabilistic synchronization algorithm which sends periodic synchronization messages, instead of periodic bursts of synchronization messages as other algorithms do. Our "continuous" approach therefore avoids the burst network loads of other algorithms. Nodes always have current estimates of other nodes' clocks, allowing them to monitor the state of system synchronization, and adjust their clocks as needed. The algorithm is fault-tolerant, and may be easily adapted to a wide variety of systems and networks. We analyze and simulate the algorithm's performance on a 64-node hypercube, and show that the algorithm provides tight synchronization while imposing only a light load on the network</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466987.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>synchronisation</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466988">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Self-stabilizing mutual exclusion in the presence of faulty nodes</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-11e3bf32d0b5cf588b14643f841495f8-3ac40cfbe8e9123dfc517f79c10cbd50">
        <akt:full-name>R.W. Buskens</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5d5ac08c93b6ddd3df7ec2258fd1e912-467e83ecf903ef9675ea8be41746ed14">
        <akt:full-name>Jr. Bianchini, R.P.</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The paper presents the RatchetFT distributed fault tolerant mutual exclusion algorithm for processor rings. RatchetFT is self-stabilizing, in that if mutual exclusion is lost due to any sequence of online failures and repairs of processors, mutual exclusion will eventually be regained. This research demonstrates that self-stabilization can be achieved in the presence of faulty processors, provided that these faulty processors always appear to behave incorrectly. Self-stabilization is achievable even if faulty processor behavior is not restricted to transient failures or other simple failure models. The key results of the paper include the specification of RatchetFT and a detailed sketch of its correctness proof</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466988.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed algorithms</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>self-adjusting systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466989">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>ARMOR: analyzer for reducing module operational risk</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-23cf08b56fa8f39f2b55b2ced9f73778-34c4b915034b8e80c1060807061ff113">
        <akt:full-name>M.R. Lu</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-285cf9c217c39cf299537148cfc762e7-34c4b915034b8e80c1060807061ff113">
        <akt:full-name>J.S. Yu</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-711032501fb33c33dc84d50732b09d32-34c4b915034b8e80c1060807061ff113">
        <akt:full-name>E. Keramidas</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1318d8956fd1756ba6854741e57e4371-34c4b915034b8e80c1060807061ff113">
        <akt:full-name>S.R. Dalal</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>ARMOR (Analyzer for Reducing Module Operational Risk) is a software risk analysis tool which automatically identifies the operational risks of software program modules. ARMOR takes data directly from project database, failure database, and program development database, establishes risk models according to several risk analysis schemes, determines the risks of software programs, and displays various statistical quantities for project management and engineering decisions. Its enhanced user interface greatly simplifies the risk modeling procedures and the usage learning time. The tool can perform the following tasks during project development, testing, and operation: establish promising risk models for the project under evaluation; measure the risks of software programs within the project; identify the source of risks and indicate how to improve software programs to reduce their risk levels; and determine the validity of risk models from field data</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466989.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>program testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>project management</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>risk management</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software metrics</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466990">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Dependability modelling in a prototype development framework</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-cd9c26df6f7ef8dbb559f75c93a5c4f9-78d4682ab160b95f4c14914c665f706a">
        <akt:full-name>J.M. Bass</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b37a405110d504ba810980922c438363-78d4682ab160b95f4c14914c665f706a">
        <akt:full-name>S. Metge</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e628dde70d78233b3a6e25bbf214a5a8-78d4682ab160b95f4c14914c665f706a">
        <akt:full-name>A. Browne</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-947afdfe0f4607c36aac48c75528e0ef-78d4682ab160b95f4c14914c665f706a">
        <akt:full-name>P.R. Croll</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e7cd4c2c9b59fb5dc50bc4728db7ecc5-78d4682ab160b95f4c14914c665f706a">
        <akt:full-name>P.J. Fleming</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The Development Framework provides a highly automatic translation from a specification to an implementation. The specification is in a popular, graphical control engineering notation typically representing a system with stringent reliability requirements and hard real time constraints. An interface has been constructed between the Development Framework and the commercially available dependability modelling tool, SURF-2. This tool is designed to support an evaluation based design approach. Multiple design solutions can be compared to assess the implications of design decisions on the dependability of the system under development. The software demonstration will show how the interface between the Development Framework and SURF-2 is used to model the inclusion of selected fault tolerant mechanisms in the system under development</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466990.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>control engineering</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>control system analysis computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>control systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>formal specification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>real-time systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466991">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>OBDD-based optimization of input probabilities for weighted random pattern generation</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3684eced89d81e1d2b69193a72de477f-343ca3e5e03e5230934751a586f8d5de">
        <akt:full-name>R. Krieger</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6bd97141e0262ba2a7c2c40d5b92d9dd-6241d66118cfb59b27a91cab0fda07d6">
        <akt:full-name>B. Becker</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-97537b9a30a6e3033706f419c31a7bc4-343ca3e5e03e5230934751a586f8d5de">
        <akt:full-name>C. Okmen</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Numerous methods have been devised to compute and to optimize fault detection probabilities for combinational circuits. The methods range from topological to algebraic. In combination with OBDDs, algebraic methods have received more and more attention. Recently, an OBDD based method has been presented which allows the computation of exact fault detection probabilities for many combinational circuits. We combine this method with strategies making use of necessary assignments (computed by an implication procedure). The experimental results show that the resulting method leads to a decrease of the time and space requirements for computing fault detection probabilities of the hard faults by a factor of 4 on average compared to the original algorithm. By this means it is now possible to efficiently use the OBDD based approach also for the optimization of input probabilities for weighted random pattern testing. Since in contrast to other optimization procedures this method is based on the exact fault detection probabilities we succeed in the determination of weight sets of superior quality, i.e. the test application time (number of random patterns) is considerably reduced compared to previous approaches</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466991.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>combinational circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>decision theory</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault diagnosis</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>optimisation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>probability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>random processes</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466992">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>LOCSTEP: a logic simulation based test generation procedure</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5842d5907bfb5169ef884ebf560ad04e-31c48571d7e050aaa47a5be0c054d0e7">
        <akt:full-name>I. Pomeranz</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f76b811fa428e2358e9d52dd9a352ba0-3011d44766b8724fa47442cf9b9fd2f8">
        <akt:full-name>S.M. Reddy</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We present a method to generate test sequences that detect large numbers of faults (close to or higher than the number of faults that can be detected by deterministic methods) at a cost which is significantly lower than any existing test generation procedure. The generated sequences can be used alone or as prefixes to deterministic test sequences. To generate the sequences, we study the test sequences generated by several deterministic test generation procedures. We show that when deterministic test sequences are applied, the fault free circuits go through sequences of state transitions that have distinct characteristics which are independent of the specific circuit considered. Test sequences with the same characteristics are generated by using logic simulation only on the fault free circuit and considering several random patterns as candidates for inclusion in the test sequence at every time unit. By fault simulating these sequences, we find that the fault coverage achieved is very close to the fault coverage achieved by deterministic sequences and sometimes even higher. In most cases the fault coverage is higher than the fault coverage achieved by nondeterministic procedures based on genetic optimization</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466992.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>circuit analysis computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic CAD</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466993">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Systematic validation of pipeline interlock for superscalar microarchitectures</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1d8c7ba6fc6cbca65f616289f536a801-b73d57c7d50643781fc3b23cdd769955">
        <akt:full-name>T.A. Diep</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7d3ba03bf3c6a3362457b488cbf84afd-89faf3b8a8a00b1411632592e9c97ad4">
        <akt:full-name>J.P. Shen</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The paper presents a new approach to microarchitecture validation that adopts a paradigm analogous to that of automatic test pattern generation (ATPG) for digital logic testing. In this approach, the microarchitecture is rigorously specified in a set of machine description files. Based on these files, all possible pipeline hazards can be systematically identified Using this hazard list (analogous to a fault list for ATPG), specific sequences of instructions (analogous to test patterns) are automatically generated and constitute the test program. The execution of this test program validates the correct detection and resolution of all interinstruction dependences by the microarchitecture's pipeline interlock mechanism. Actual software tools have been developed for the automatic construction of the hazard list and the automatic generation of the test sequences. These explicitly generated can achieve higher sequences coverage in fewer cycles than adhoc approaches. 100% coverage of the hazard list can be ensured. These tools have been applied to four contemporary superscalar processors, namely the Alpha AXP 21064 and 21164 microprocessors, and the PowerPC 601 and 620 microprocessors</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466993.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>automatic test software</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel architectures</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>pipeline processing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466994">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Interactive consistency algorithms based on voting and error-correcting codes</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-87828182354a1b49d8306893aa0c4a7c-e700f6423d78d2858e571902e3ce7034">
        <akt:full-name>T. Krol</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>This paper presents a new class of synchronous deterministic non authenticated algorithms for reaching interactive consistency (Byzantine agreement). The algorithms are based on voting and error correcting codes and require considerably less data communication than the original algorithm, whereas the number of rounds and the number of modules meet the minimum bounds. These algorithms based on voting and coding are defined and proved on the basis of a class of algorithms, called the dispersed joined communication algorithms</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466994.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>data communication</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>data integrity</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>deterministic algorithms</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error correction codes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>interactive systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466995">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Optimal resiliency against mobile faults</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5f56cf45ab69b173c2830754e4c6c2f4-a57edfe59c3a62e8d2896753735827e8">
        <akt:full-name>H. Buhrman</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ec87999dcda526f2732867acdd439c86-a57edfe59c3a62e8d2896753735827e8">
        <akt:full-name>J.A. Garay</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-09b4ce65f8ef6118e7cdee4ec82304b5-a57edfe59c3a62e8d2896753735827e8">
        <akt:full-name>J.-H. Hoepman</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We consider a model where malicious agents can corrupt hosts and move around in a network of processors. We consider a family of mobile fault models MF(t/n-1,ρ). In MF(t/n-1,ρ) there are a total of n processors, the maximum number of mobile faults is t, and their roaming pace is ρ (for example, ρ=3 means that it takes an agent at least 3 rounds to "hop" to the next host). We study in these models the classical testbed problem for fault tolerant distributed computing: Byzantine agreement. It has been shown that if ρ=1, then agreement cannot be reached in the presence of even one fault, unless one of the processors remains uncorrupted for a certain amount of time. Subject to this proviso, we present a protocol for MF(1/3,1), which is optimal. The running time of the protocol is O(n) rounds, also optimal for these models</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466995.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer network reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>protocols</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466996">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault tolerance in safety critical automotive applications: cost of agreement as a limiting factor</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-aaab4ee8d62653ccd90a8cd72e77846b-cd9ab8a6b80458673f6986d15af03f51">
        <akt:full-name>S. Poledna</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The high availability and safety requirements for automotive electronics are currently almost exclusively addressed by application specific engineering solutions to fault tolerance rather than by systematic approaches. Currently, systematic approaches are ruled out because of cost. The reason for this is that a systematic approach to fault tolerance requires: replication of components; and communication between replicated components to achieve agreement despite nondeterminism. While replicated components become more and more available with the connection of different control units by means of a multiplex bus, it is shown that the cost of agreement on sensor inputs will become the limiting factor for systematic approaches to fault tolerance. For that reason a new agreement algorithm is introduced which considers the problem of agreement and sensor inputs in an integrated fashion. This algorithm takes advantage of the a priori knowledge on the maximum deviation of replicated sensor inputs. Optimality of this algorithm is shown with respect to the minimum number of bits for agreement. This algorithm allows broader application of systematic fault tolerance to automotive applications. The result of this work will be used for a prototype implementation of a safety critical automotive application</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466996.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>automobiles</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>automotive electronics</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>real-time systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>safety-critical software</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466997">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault-tolerance for off-the-shelf applications and hardware</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8211bedaa3ab9bc7e9dc3ce09c20f458-c12d29bc7649de51fffb37c4072789d5">
        <akt:full-name>M. Russinovich</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7bc6c82a0ddaf8edd9e7781035cb9d5d-c12d29bc7649de51fffb37c4072789d5">
        <akt:full-name>Z. Segall</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The concept of middleware provides a transparent way to augment and change the characteristics of a service provider as seen from a client. Fault tolerant policies are ideal candidates for middleware implementation. We have defined and implemented operating system based middleware support that provides the power and flexibility needed by diverse fault tolerant policies. This mechanism, called the sentry, has been built into the UNIX 4.3 BSD operating system server running on a Mach 3.0 kernel. To demonstrate the effectiveness of the mechanism several policies have been implemented using sentries including checkpointing and journaling. The implementation shows that complex fault tolerant policies can be efficiently and transparently implemented as middleware. Performance overhead of input journaling is less than 5% and application suspension during the checkpoint is typically under 10 seconds in length. A standard hard disk is used to store journal and checkpoint information with dedicated storage requirements of less than 20 MB</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466997.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>Unix</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>operating systems (computers)</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466998">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The Totem system</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8f324d7feeed79ba443773104e7048d6-f735d33801b9c5cdc03182e5bc47936e">
        <akt:full-name>L.E. Moser</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-29895cc1660dbde0f5a1261cf192340b-f735d33801b9c5cdc03182e5bc47936e">
        <akt:full-name>P.M. Melliar-Smith</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-729c0f88333401365a47e00683347fd5-f735d33801b9c5cdc03182e5bc47936e">
        <akt:full-name>D.A. Agarwal</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-77341dd759ac74eabcaf2e6688b80ce5-f735d33801b9c5cdc03182e5bc47936e">
        <akt:full-name>R.K. Budhia</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8235e130dd3c1552eabf5d0c2c0e194d-f735d33801b9c5cdc03182e5bc47936e">
        <akt:full-name>C.A. Lingley-Papadopoulos</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b1a407b8f4442aabb30305b7e9b0b98d-f735d33801b9c5cdc03182e5bc47936e">
        <akt:full-name>T.P. Archambault</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The Totem system supports fault-tolerant applications in which distributed processes cooperate to perform a common task and in which replicated data must be updated consistently in the presence of asynchrony and faults. Reliable totally ordered delivery of messages to processes within process groups is provided on a single local-area network or over multiple local-area networks interconnected by gateways. Message ordering is consistent across the entire network, despite processor and communication faults, without requiring all processes to deliver all messages. The Totem system handles processor failure and recovery, as well as network partitioning and remerging, and provides membership and topology maintenance services</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466998.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>LAN interconnection</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>local area networks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>message passing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00466999">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Checkpointing and its applications</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ff3ce6add4115b858c08dfe2272ef770-b8c30eee470137261dd6873194bf945e">
        <akt:full-name>Yi-Min Wang</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8da3e8709afd68db92d6186a1364852c-f589c8a9fd28aa1556f4bd8bdb4932cd">
        <akt:full-name>Yennun Huang</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1dc04274a0d844b9d269af85d79914c1-0ea745268ffe8a55466abc154af1e3e3">
        <akt:full-name>Kiem-Phong Vo</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0b787931198cbe840a56221969e0030a-0ea745268ffe8a55466abc154af1e3e3">
        <akt:full-name>Pe-Yu Chung</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5652cdac0a68322d81e7bfc161a87ad5-0cb9abc36f85221ff0a1bba5c23ab752">
        <akt:full-name>C. Kintala</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The paper describes our experience with the implementation and applications of the Unix checkpointing library libckp, and identifies two concepts that have proven to be the key to making checkpointing a powerful tool. First, including all persistent states, i.e., user files, as part of the process state that can be checkpointed and recovered provides a truly transparent and consistent rollback. Second, excluding part of the persistent state from the process state allows user programs to process future inputs from a desirable state, which leads to interesting new applications of checkpointing. We use real-life examples to demonstrate the use of libckp for bypassing premature software exits, for fast initialization and for memory rejuvenation</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00466999.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>Unix</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>operating systems (computers)</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software libraries</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00467000">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Efficient failure recovery in multi-disk multimedia servers</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5f2efb85a552d0973e94260603330ecd-7aa26f180da1dc8578ba07d74aaeb5f9">
        <akt:full-name>H.M. Vin</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-19419e5bfbdf09266cb878dd187e4ba1-7aa26f180da1dc8578ba07d74aaeb5f9">
        <akt:full-name>P.J. Shenoy</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-74a8622b3adbcb10fbc2d0c925e39fbc-7aa26f180da1dc8578ba07d74aaeb5f9">
        <akt:full-name>S. Rao</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>In this paper, we present a novel disk failure recovery method that utilizes the inherent redundancy in video streams (rather than error-correcting codes) to ensure that the user-invoked on-the-fly failure recovery process does not impose any additional load on the disk array. We also present a disk array architecture that enhances the scalability of multimedia servers by: (1) integrating the recovery process with the decompression of video streams, and thereby distributing the reconstruction process across the clients; and (2) supporting graceful degradation in the quality of recovered images with increase in the number of disk failures</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=9797</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3246/9797/00467000.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multimedia systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>redundancy</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532603">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>DEPENDABLE COMPUTING AND FAULT TOLERANCE : CONCEPTS AND TERMINOLOGY</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b1f7976cad30dd3a4f5c0ec55161bf81-5c3de59ea98c77ce8f741bc8cc53f22b">
        <akt:full-name>J-C. Laprie</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532603.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532604">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>THE STAR (SELF-TESTING-AND-REPAIRING) COMPUTER: AN INVESTIGATION OF THE THEORY AND PRACTICE OF FAULT</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-01eb7559f37fb267f5fa24086caa7f77-1e5dbdc8746ddf946519ab7abf8d132e">
        <akt:full-name>A. Avizienis</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-62abcc07d59834f61a717ba5b4ba2970-1e5dbdc8746ddf946519ab7abf8d132e">
        <akt:full-name>G.C. Gilley</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-45b124ad976b4452fb3ce9db7b9407b5-1e5dbdc8746ddf946519ab7abf8d132e">
        <akt:full-name>F.P. Mathur</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1b3424f87ef59e78d94bcfdc8b49f803-1e5dbdc8746ddf946519ab7abf8d132e">
        <akt:full-name>D.A. Rennels</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-98908c0302ee95d4bfee1305c6029473-1e5dbdc8746ddf946519ab7abf8d132e">
        <akt:full-name>J.A. Rohr</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-99399c91b6880fb1855cef8dcf5007ac-1e5dbdc8746ddf946519ab7abf8d132e">
        <akt:full-name>D.K. Rubin</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532604.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532605">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>THE ARCHlTECTURAL ELEMENTS OF A SYMMETRIC FAULT-TOLERANT MULTIPROCESSOR</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3a02bc362aaabe72d4494d2c314db86b-2e7c14bbb7686e0ca90e9d71ecfaad52">
        <akt:full-name>Jr. Hopkins, A.L.</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-322bd0526e125396d2729d466b523273-2e7c14bbb7686e0ca90e9d71ecfaad52">
        <akt:full-name>III Smith, T.B.</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532605.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532606">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A STUDY OF STANDARD BUILDlNG BLOCKS FOR THE DESIGN OF FAULT-TOLERANT DlSTRIBUTED COMPUTER SYSTEMS</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1b3424f87ef59e78d94bcfdc8b49f803-d1be196e3d7e14f56ef6cd21c9b74312">
        <akt:full-name>D.A. Rennels</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-87ce6c55dcfebb59c86669cf1a48f8c2-d1be196e3d7e14f56ef6cd21c9b74312">
        <akt:full-name>A. Avlzienls</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ae3217fb2eb84770b9ca25e5c101db89-d1be196e3d7e14f56ef6cd21c9b74312">
        <akt:full-name>M. Ercegovac</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532606.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532607">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>SIFT: System Design and Implementation</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2be1f968d99e92c92d22b25c7dea148a-e34ed91b14216ec642f92e5c912bb6ee">
        <akt:full-name>C.B. Weinstock</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532607.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532608">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>THE</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ef10017a92bad8d836c229d4c56e7c96-983cd8a79a826d6850c89f0ce2d5f7c1">
        <akt:full-name>Th. Krol</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532608.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532609">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Error Recoverable and Securable Data Communicatlon for ComPuter Network</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0935b8b1ee338ae56af29740febfa490-d60c05e11220c668a1b586ff7e8dbb94">
        <akt:full-name>Y. Koga</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-bea65e1a4e30456a9a102ab7e7015384-d60c05e11220c668a1b586ff7e8dbb94">
        <akt:full-name>E. Fukushika</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0b78618562b816ce13a503225264dd51-d60c05e11220c668a1b586ff7e8dbb94">
        <akt:full-name>K. Yoshihara</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532609.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532610">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>HIGHLY RELIABLE LOOP COMPUTER NETWORK SYSTEM BASED ON AUTONOMOUS DECENTRALIZATION CONCEPT</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4f288144d57126d5451068f5e4e63e77-667851ee7a1b57c7b5612360c5e5598c">
        <akt:full-name>H. Ihara</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6f699eeb980fbd55e88e86a4c8533d60-667851ee7a1b57c7b5612360c5e5598c">
        <akt:full-name>K. Mori</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532610.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532611">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>THE ARCHITECTURE OF MARS</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9fb7034cdd709632a2d606810fba119f-3dd17666ef30f1a37fd7434a1fef374c">
        <akt:full-name>H. Kopetz</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8f9ee74d1482defb83077785d2834092-3dd17666ef30f1a37fd7434a1fef374c">
        <akt:full-name>W. Merker</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532611.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532612">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The Delta-4 Approach to Dependability in Open Distributed Computing Systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3820994679b359e92472ccd2a5f08e43-95501339b4da38d04035c935b150e48e">
        <akt:full-name>D. Powell</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4123be2cd1c3da9c6c8f6ba03ba1e718-0fe880c76ba842e71195992d4363ec5c">
        <akt:full-name>G. Bonn</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-765b8259ff460d088ca03b0cc2091c3f-0fe880c76ba842e71195992d4363ec5c">
        <akt:full-name>D. Seaton</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b51d8091f5eba400faba77c8520cc157-0fe880c76ba842e71195992d4363ec5c">
        <akt:full-name>P. Verissimo</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e3e523afebbb4dd72ec70407d6146111-0fe880c76ba842e71195992d4363ec5c">
        <akt:full-name>F. Waeselynck</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532612.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005328">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault Tolerant Parallel Processor Architecture Overview</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a18d1cd9cabd7fa73757dcb03217e2f9-3e24650a7dadb1c7b2a721f75401fb23">
        <akt:full-name>R.E. Harper</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5a4ee8671e8db1d129c28e110f300b9e-3e24650a7dadb1c7b2a721f75401fb23">
        <akt:full-name>J.H. Lala</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fbf3e5e0da5fd12771043c9d31992ba5-3e24650a7dadb1c7b2a721f75401fb23">
        <akt:full-name>J.J. Deyst</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532613.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532614">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Design and Reconfiguration Strategies for Near-Optimal k-fault-tolerant Tree Architectures</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d750dc101814879e91ac33b3842e6725-16daac8bde00f828a9030c49a04118fb">
        <akt:full-name>S. Dutt</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-16bc99ed51f546c35e3b9addc9eb6c5b-2378817c07b1d343bba6566b285eca04">
        <akt:full-name>J.P. Hayes</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532614.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146709">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Integrity S2: A Fault-Tolerant Unix Platform</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-cfeb5de6e2f5cb28bd8a93b49e0b5d78-290e65ef11763d32d77b249cbef0aa31">
        <akt:full-name>D. Jewett</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532615.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532616">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>OBSERVER A CONCEPT FOR ON-LINE DETECTION OF CONTROL ERRORS IN CONCURRENT SYSTEMS</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8a0dc223c3f0470d796ab3ca44bae6d2-8da4fd0ccbe35626b21e04b1f89f6295">
        <akt:full-name>J.M. Ayache</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a01f8814524200b790c8c4f931e2de29-8da4fd0ccbe35626b21e04b1f89f6295">
        <akt:full-name>P. Azema</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c1ff2707268337f1424e74bf2937b92e-8da4fd0ccbe35626b21e04b1f89f6295">
        <akt:full-name>M. Diaz</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532616.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532617">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>TRANSIENT UPSETS IN MICROPROCESSOR CONTROLLERS</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-84242b4069dadacef5d839d008083b87-9219f1ed0ee0465e31d38f8602cf40e1">
        <akt:full-name>R.E. Glaser</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-336d3f1d7f40797fb9d50cb67de2a407-9219f1ed0ee0465e31d38f8602cf40e1">
        <akt:full-name>G.M. Masson</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532617.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532618">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>WATCHDOG PROCESSORS AND CAPABILITY CHECKING</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b51a99a0e8cb518db1d22a5c611f7555-fd14020a7f381db8903538d6db5585d1">
        <akt:full-name>M. Namjoo</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f19a915e9133b52735f2afb437062cfd-fd14020a7f381db8903538d6db5585d1">
        <akt:full-name>E.J. HcCluskey</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532618.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532619">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>LOW COST SCHEMES FOR FAULT TOLERANCE IN MATRIX OPEBATIONS WITH PROCESSOR ABBAYS</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0e8b0ba312cdeabd464753526b0a3617-10a63ebed4902c5060fc06b486316cb9">
        <akt:full-name>K-H.K. Huang</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a2844d70249531c6afca9a96023f8078-10a63ebed4902c5060fc06b486316cb9">
        <akt:full-name>J.A. Abraham</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532619.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532620">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Processor Monitoring Using Asynchronous Signatured Instruction Streams</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fd17339679efe80659e9e20cf4ad8aee-ce6d54b4dc62f42631f6471b41b1ab69">
        <akt:full-name>J.B. Eifert</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-315fe4e1b9410457977589f3d1c17894-ce6d54b4dc62f42631f6471b41b1ab69">
        <akt:full-name>J.P. Shen</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532620.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532621">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>N-VERSION PROGRAMMINC: A FAULT-TOLERANCE APPROACH TO RELlABlLlTY OF SOFTWARE OPERATlON</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fe939757c814052313b86b6112608463-57af81f074facc2e42fbc13ce4a3a09b">
        <akt:full-name>Liming Chen</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-01eb7559f37fb267f5fa24086caa7f77-57af81f074facc2e42fbc13ce4a3a09b">
        <akt:full-name>A. Avizienis</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532621.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532622">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>EXCEPTION HANDLING AND SOFTWARE-FAULT TOLERANCE</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-07824e4560cf42e260dc3aa850485bde-6518924c50f63ce881fdf817a55a127d">
        <akt:full-name>F. Cristian</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532622.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532623">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A Compendium of Robust Data Structures</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b90d9c165c2cd91aad0713af5a5eff02-0dd8fe733d6f516e1ebae7591bc403c0">
        <akt:full-name>J.P. Black</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-52462c83c82d750d02da4264bd41f5aa-0dd8fe733d6f516e1ebae7591bc403c0">
        <akt:full-name>D.J. Taylor</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1764b1bfc82a3b5ad748b3435cddacef-0dd8fe733d6f516e1ebae7591bc403c0">
        <akt:full-name>D.E. Morgon</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532623.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532624">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>An Evaluation of Software Fault Tolerance in a Practical System</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-dc734b5ef7f926a30e2a76bd6cce2316-36b6c2adf83be8ca2ed26152e90005ba">
        <akt:full-name>T. Anderson</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e580ab50b2a2e76467edeed5b99a5b08-36b6c2adf83be8ca2ed26152e90005ba">
        <akt:full-name>P.A. Barrett</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-460e550a874e1a6efe2ef23564be3733-36b6c2adf83be8ca2ed26152e90005ba">
        <akt:full-name>D.N. Balliwell</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-95ced00c32d4dfcd6e2c31effe38ae7a-36b6c2adf83be8ca2ed26152e90005ba">
        <akt:full-name>M.R.B. Moulding</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532624.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005291">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>IN SEARCH OF EFFECTIVE DIVERSITY: A SIX-LANGUAGE STUDY OF FAULT-TOLERANT FLIGHT CONTROL SOFTWARE</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-01eb7559f37fb267f5fa24086caa7f77-77dd22f5f8fdbc60c53010129bc34d09">
        <akt:full-name>A. Avizienis</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-70828c69ea34633b1351b9e188437cde-77dd22f5f8fdbc60c53010129bc34d09">
        <akt:full-name>M.R. Lyu</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a501bc94666bae53bddba55b94e45fdd-77dd22f5f8fdbc60c53010129bc34d09">
        <akt:full-name>W. Schutz</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532625.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532626">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>RELIABILITY MODELING FOR FAULT TOLERANT COMPUTERS</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-739caa526cae10415d3ec8efdef78cd6-a2caf015abaac6586848b01184160169">
        <akt:full-name>W.G. Bouricius</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6d892855270058ce31d9cbeb6c24a2f3-a2caf015abaac6586848b01184160169">
        <akt:full-name>W.C. Carter</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7ec0ba95ac789535d888508c02e68a5e-a2caf015abaac6586848b01184160169">
        <akt:full-name>D.C. Jessep</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-06411a6236c322e22368253ca5904a9b-a2caf015abaac6586848b01184160169">
        <akt:full-name>P.R. Schneider</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1cacf0213356e61730ba148dfb42ac82-a2caf015abaac6586848b01184160169">
        <akt:full-name>A.B. Wadia</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532626.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532627">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>PERFORMANCE RELATED RELIABILITY MEASURES FOR COMPUTING SYSTEMS</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-807d368513532bb77835c75d87bf7578-b1696ec4ee27ad90f70c08f3c1576372">
        <akt:full-name>Beaudry</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532627.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532628">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>ON EVALUATlNG THE PERFORMABlLlTY OF DEGRADABLE COMPUTlNG SYSTEMS</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c896b45782496b2554abeb72c5585889-3cd183b4fc8f9aa3f07252498ddbda04">
        <akt:full-name>J.F. Meyer</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532628.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532629">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>SURF A PROGRAM FOR DEPENDABILITY EVALUATlON OF COMPLEX FAULT-TOLERANT COMPUTING SYSTEMS</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9083c4c4af7741e932adb0a05d44c98c-4d96f57a3d582b1409f6388b3d5fb85f">
        <akt:full-name>A. Costes</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2668079377740588e0bea1725cf41019-4ff2b70e2ee2edfa494c8307e26c97c4">
        <akt:full-name>J.E. Doucet</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-554526b8a82bf813f043e20a7f9c33b3-ef3756145ba76d7fefbbd37da3c0abd3">
        <akt:full-name>C. Landrault</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b1f7976cad30dd3a4f5c0ec55161bf81-5c3de59ea98c77ce8f741bc8cc53f22b">
        <akt:full-name>J.c. Laprie</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532629.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532630">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>ARLES 81: A RELIABILITY AND LIFE--CYCLE EVALUATTON TOOL FOR FAULT-TOLERANT SYSTEMS</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-088b113c907873a93eceb3f749b9324c-63c68ff1036a1cbffb8d2f76cf906514">
        <akt:full-name>S.V. Makam</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-01eb7559f37fb267f5fa24086caa7f77-63c68ff1036a1cbffb8d2f76cf906514">
        <akt:full-name>A. Avizienis</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532630.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532631">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>MODELING IMPERFECT COVERAGE IN FAULT-TOLERANT SYSTEMS</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-bca354a53da9cc88333df22671d6d25a-52962864357c412d6c719a3fc25e61d2">
        <akt:full-name>K. Trivedi</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-33f6471dd18607ea5120d618beef02a3-52962864357c412d6c719a3fc25e61d2">
        <akt:full-name>J.B. Dugan</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-313cac9ffc7034433659c67dbcc9e195-52962864357c412d6c719a3fc25e61d2">
        <akt:full-name>R. Geist</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-eb34c491bfa8f33e1d5135b5fe062c88-52962864357c412d6c719a3fc25e61d2">
        <akt:full-name>M. Smotherman</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532631.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532632">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>THE SYSTEM AVAILABlLITY ESTIMATOR</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ba69a25f7989df316c886e253989db06-970bfd92c72599a63a8f5f816470e736">
        <akt:full-name>A. Goyal</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6d892855270058ce31d9cbeb6c24a2f3-970bfd92c72599a63a8f5f816470e736">
        <akt:full-name>W.C. Carter</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d8efbbc854a3471edd731faa47342675-970bfd92c72599a63a8f5f816470e736">
        <akt:full-name>E. deSouza-e-Silva</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-accf301bb1a888ea1bfd9391ce87f954-970bfd92c72599a63a8f5f816470e736">
        <akt:full-name>S.S. Lavenberg</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532632.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532633">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A CONCEPTUAL MODEL OF MULTI-VERSION SOFTWARE</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-dc42349d437cb67986483761abab4a5f-d898836205dddda1383e7e83da96b398">
        <akt:full-name>B. Littlewood</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c445b83b99bdf3e1d8a5f1c9a734cbe0-d898836205dddda1383e7e83da96b398">
        <akt:full-name>D.R. Miller</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532633.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00005312">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>DEPENDABILITY EVALUATION OF SOFTWARE FAULT-TOLERANCE</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fc69f9dc4d1600f0764ff4e7f8f0bdb1-d4e58035a15283a956f7801f2b782aa3">
        <akt:full-name>J. Arlat</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-086850938f3e3a5b26a289d4d07c1740-cc0e53fc5119a8536cbba116db5a1a11">
        <akt:full-name>K. Kanoun</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b1f7976cad30dd3a4f5c0ec55161bf81-5c3de59ea98c77ce8f741bc8cc53f22b">
        <akt:full-name>J. Laprie</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532634.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532635">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>STAREX SELF-REPAIR ROUTINES: SOFTWARE RECOVERY IN THE JPL-STAR COMPUTER</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-98908c0302ee95d4bfee1305c6029473-48cdfcc98fabf7fe838663a646630dc1">
        <akt:full-name>J.A. Rohr</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532635.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532636">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>STATE RESTORATION IN DISTRIBUTED SYSTEMS</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-105dc76123950d3832dbba4433304ad3-5d4bed7e296fd0956b73bfb758db14b3">
        <akt:full-name>P.M. Berlln</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-21757c2767705194600b55ff6b0ef692-8e31fda3b228612b025d4309d150465d">
        <akt:full-name>B. Randell</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532636.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00089337">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>CATCH - Compiler-Assisted Techniques for Checkpointing</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-05db137018ca8f97c4dffca6cf2c9cf5-cfe6768f7e447ba537c32fe96e79efd4">
        <akt:full-name>Chung-Chi Jim Li</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3fcedb99619fa7ad2feaf5017679322c-cfe6768f7e447ba537c32fe96e79efd4">
        <akt:full-name>W.K. Fuchs</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532637.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146670">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault Tolerance in Parallel Implementations of Functional Languages</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4837f4153c44493fcaed4890b90c64f1-615b46ab6c9caea95a570259612b3616">
        <akt:full-name>R. Jagannathan</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-97df16ef16225feada18396f444bcf44-615b46ab6c9caea95a570259612b3616">
        <akt:full-name>E.A. Ashcroft</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532638.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532639">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Nonblocking and Orphan-Free Message Logging Protocols</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2fbc9b6502f1d9a66cdcda761fcc4799-ea93cd066f28f30ea1b729a64b1e243e">
        <akt:full-name>L. Alvisi</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7a8b622a0e97fd08edd7e070597e0654-2d28dccabdbe69d5489274b759eb5fe4">
        <akt:full-name>B. Hoppe</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e56bfdf44dee228a81cda2c5fe8d8a6b-538f2fb68213d54a75f3ea6e2aaeda28">
        <akt:full-name>K. Marzullo</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532639.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532640">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>REALIZATION OP FAIL-SAFE SEQUENTIAL MACHINES BY USING K-OUT-OF-N CODE</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-163ffd430b88313f8f6653cf24339835-687a4ff87015e1dbef4f2350a3a190be">
        <akt:full-name>Y. Tohma</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c6ccbad9bad24811618090aa33dac331-687a4ff87015e1dbef4f2350a3a190be">
        <akt:full-name>Y. Ohyana</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-47bc4f56a5d75fb5117c9be69913235f-687a4ff87015e1dbef4f2350a3a190be">
        <akt:full-name>R. Sakai</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532640.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532641">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Design of Totally Self-Checking Check Circuits for M-out of-N Codes</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-457a92c9e52644b9f8ae71ec1f503cce-efaaef14ffd80b982fa1dd0f1f761843">
        <akt:full-name>D.A. Anderson</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-13fd99fcd386a4a71779eb616625364c-efaaef14ffd80b982fa1dd0f1f761843">
        <akt:full-name>G. Metze</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532641.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532642">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>SHIFT REGISTERS DESIGNED FOR ON-LINE FAULT DETECTION</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5bc69abf889ca3bfcbcbc3d5bc8eb9b9-592fb752a22345b5164db15df3d4e6d4">
        <akt:full-name>D.K. Pradhan</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1739ed8b38367c1137b6c34edbe3670c-592fb752a22345b5164db15df3d4e6d4">
        <akt:full-name>M.Y. Hsiao</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-af0f44fa5cfe24189ee38b931ed6a76e-592fb752a22345b5164db15df3d4e6d4">
        <akt:full-name>A.M. Patel</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9dc17733718dcc05573766ea61c9ef61-592fb752a22345b5164db15df3d4e6d4">
        <akt:full-name>S.Y. Su</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532642.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532643">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A DESIGN FOR PROCESS STATE PRESERVATION ON STORAGE UNIT FAILURE</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b5aaae3a7fffd2c272045a0e702dfa04-829eafe4758872d974b4dd70e16a3ef0">
        <akt:full-name>J.A. Arulpragasam</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-707cd498ed03ed21ceba4e7ae58c8fd3-829eafe4758872d974b4dd70e16a3ef0">
        <akt:full-name>R.S. Swarz</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532643.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532644">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>ED/FI: A TECHNIQUE FOR IMPROVING COMPUTER SYSTEM RAS</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9d275cd81f947d6bc8c470bab773d4f8-56e157afe08866653076f5703e09c449">
        <akt:full-name>D.C. Bossen</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1739ed8b38367c1137b6c34edbe3670c-56e157afe08866653076f5703e09c449">
        <akt:full-name>M.Y. Hsiao</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532644.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532645">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>MULTIPLIER AMD DIVIDER ARRAYS WITH CONCURRENT ERROR DETECTION</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3ce602f237de91886e4936325cf4c7da-6b2ebf6554e9a70a0c4ec500e99dd9c3">
        <akt:full-name>J.H. Patel</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-815d1f877839c8754403e918d76bd449-6b2ebf6554e9a70a0c4ec500e99dd9c3">
        <akt:full-name>L.Y. Fung</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532645.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532646">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A GENERALIZED THEORY OF FAIL+SAFE SYSTEMS</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7d48505aa96ff117f6606f6a72f25786-23459aa6518eafd009e46157315d130d">
        <akt:full-name>M. Nicolaidis</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ca103cb59f1f181d83a30fb409a38e77-23459aa6518eafd009e46157315d130d">
        <akt:full-name>S. Noraz</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-14c28014948e4108f0686c6d2c54b3ac-23459aa6518eafd009e46157315d130d">
        <akt:full-name>B. Courtois</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532646.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532647">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>ON THE SPECIFICATION AND ANALYSIS OF LARGE DIGITAL FUNCTIONS</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e8ec0723b2624d422c3f4182c7118196-c01ca80f2cccd34aa7dc4a143b589181">
        <akt:full-name>S.B. Akers</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532647.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532648">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>AN ENHANCEMENT TO LSSD AND SOME APPLICATIONS OF LSSD IN RELIABILITY, AVAILABILITY, AND SERVICEABILIT</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-786f808701ca1e60d5e01bbf996b1f55-7c2a6a42f3321d434379881343e019a1">
        <akt:full-name>S. DasGupta</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5ffd8908ae51ec0791d58b486c79d50f-7c2a6a42f3321d434379881343e019a1">
        <akt:full-name>R.G. Walther</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-328e53b7efdedefc7549e5dd264a32bf-7c2a6a42f3321d434379881343e019a1">
        <akt:full-name>T.W. Williams</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1c5330cf5d3fd6847f1e6532ed62f3cf-7c2a6a42f3321d434379881343e019a1">
        <akt:full-name>E.B. Eichelberger</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532648.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532649">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>TEST SCHEDULING IN TESTABLE VLSI CIRCUITS</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-791b560f45212474a0058427b14f6753-72bd5af6f34a4f6529ec9f2ae36481d9">
        <akt:full-name>C.R. Kime</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-583e845329bab667378f87353818cf3a-72bd5af6f34a4f6529ec9f2ae36481d9">
        <akt:full-name>K.K. Saluja</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532649.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532650">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>ON THE DIAGNOSABILITY OF DIGITAL SYSTEMS</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4c59fcf2c179fc97eb7639851ce6eb78-4eb2d010542f28797bb72b7670af2a19">
        <akt:full-name>J.D. Russell</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-791b560f45212474a0058427b14f6753-4eb2d010542f28797bb72b7670af2a19">
        <akt:full-name>C.R. Kime</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532650.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532651">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>FAULT-DIAGNOSIS IN FULLY DISTRIBUTED SYSTEMS</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3aa6a4a3e4363d83822fdf870c52cdcc-75b3e74269eef49cd514dec07c8a383e">
        <akt:full-name>J.G. Kuhl</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-965dc2d124659a370908152afc40e8f5-75b3e74269eef49cd514dec07c8a383e">
        <akt:full-name>S.M. Reddy</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532651.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146665">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>An Adaptive Distributed System-Level Diagnosis Algorithm and Its Implementation</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-cf75fed24c40e01a4fb29011569680be-3ac40cfbe8e9123dfc517f79c10cbd50">
        <akt:full-name>Jr. Bianchini, R.</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-11e3bf32d0b5cf588b14643f841495f8-3ac40cfbe8e9123dfc517f79c10cbd50">
        <akt:full-name>R. Buskens</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532652.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532653">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>ANALYSIS OF LOGIC CIRCUITS WITH FAULTS USING INPUT SIGNAL PROBABILITIES</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9dda015b4a6853fb4c729afd462177a0-ee6291e1aeb066b54e8c04aa50c44804">
        <akt:full-name>K.P. Parker</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1d1885681f4c7201691ba1e351ded1a6-37c0f74ed469eb033452eea1da4eb7aa">
        <akt:full-name>E.J. Mccluskey</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532653.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532654">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A METHODOLOGY FOR FUNCTIONAL LEVEL TESTING OF MICROPROCESSORS</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6744ee0e5fce4ca154133cd8d50e20d6-8dd3c8e42fd86502f4a89bd0dbcbda25">
        <akt:full-name>S.M. Thatte</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a2844d70249531c6afca9a96023f8078-8dd3c8e42fd86502f4a89bd0dbcbda25">
        <akt:full-name>J.A. Abraham</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532654.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532655">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>APPLICATION ORIENTED MICROPROCESSOR TEST METHOD</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-313843c0d9b435c9f773d54a3ccc39b0-36745aa6a08bfd5d4f74637649905568">
        <akt:full-name>C. Robach</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7f2adbf49afde26b53f35dbf1e6b7292-36745aa6a08bfd5d4f74637649905568">
        <akt:full-name>G. Saucier</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532655.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532656">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>AN IMPLICIT ENUMERATION ALGORITHM TO GENERATE TESTS FOR COMBINATIONAL LOGIC CIRCUITS</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-cb1dbe0ed62e871b8efcc35e757aac0b-b6372c334098e0506ec0610c9cdc9bfa">
        <akt:full-name>P. Goel</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532656.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532657">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>RANDOM TESTING OF THE DATA PROCESSING SECTION OF A MICROPROCESSOR</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c8967540264a7e88f64bca023dfb97a3-7d551a0df74053a893fd544399548ed7">
        <akt:full-name>P. Thevenod-Fosse</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-bc67dc74e1deaaed3e65019533755a53-7d551a0df74053a893fd544399548ed7">
        <akt:full-name>R. David</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532657.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532658">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>ON THE ACCELERATION OF TEST GENERATION ALGORlTHMS</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b36466cca4ecc760d2ace0a9986c1388-8a3a209c1e642c2324ce564295967e34">
        <akt:full-name>H. Fujiwara</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f55c7c39b51d659c714419ce12d459f8-8a3a209c1e642c2324ce564295967e34">
        <akt:full-name>T. Shimono</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532658.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00146632">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>TEST GENERATION FOR SYNCHRONOUS SEQUENTIAL CIRCUITS USING MULTIPLE OBSERVATION TIMES</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a2a448651e9af494a0d4e970c1b9f354-3c89442309cd70551bb7805de68089cd">
        <akt:full-name>J. Pomeranz</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f76b811fa428e2358e9d52dd9a352ba0-3011d44766b8724fa47442cf9b9fd2f8">
        <akt:full-name>S.M. Reddy</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532659.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532660">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>WORKLOAD, PERFORMANCE, AND RELlABlLlTY OF DIGITAL COMPUTlNG SYSTEMS</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e3d57e99d0c00e80a716bfe1913ee517-8bed9592020c2cfb3c26a9f550733a5a">
        <akt:full-name>X. Castillo</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-97a44c315ec79ba478d4a8d9de226e97-8bed9592020c2cfb3c26a9f550733a5a">
        <akt:full-name>D.P. Siewiorek</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532660.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532661">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A STATISTICAL LOAD DEPENDENCY MODEL FOR CPU ERRORS AT SLAC</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6122ee67de7692816e4883ba5ebf39cb-cda47862f2e1b7f5ebcf0f85fd6accea">
        <akt:full-name>R.K. Iyer</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-69e1d5f32c43fe620a9853132aae6189-cda47862f2e1b7f5ebcf0f85fd6accea">
        <akt:full-name>D.J. Rossetti</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532661.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532662">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The Design Concepts and Operational Results of Fault-tolerant Computer Systems for the Shinkansen Tr</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5c1704292e493219ffb4a5168e5d3492-144afd0aa053129ff4d08d307a3cf42e">
        <akt:full-name>A. Hachiga</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b5089476e4e207a4d16890a9cdfea9a6-144afd0aa053129ff4d08d307a3cf42e">
        <akt:full-name>K. Akita</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b12e29aa99d19cf4ee2bcb25bd393bdc-144afd0aa053129ff4d08d307a3cf42e">
        <akt:full-name>Y. Hasegawa</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532662.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532663">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>FlAT -- Fault Injection Based Automated Testing Environment</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7bc6c82a0ddaf8edd9e7781035cb9d5d-3a98a5b0dc2e3a2ae4921d7b10071ff1">
        <akt:full-name>Z. Segall</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b9a4ba3c17d5a4702ff45f388cf301b2-3a98a5b0dc2e3a2ae4921d7b10071ff1">
        <akt:full-name>D. Vrsalovic</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-723bc3d6766f91020e51c95f76723e86-3a98a5b0dc2e3a2ae4921d7b10071ff1">
        <akt:full-name>D. Siewiorek</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-38e50be16578bc6a641904749ae20dee-63a4efce83f590859f15a4a781cd021f">
        <akt:full-name>D. Ysskin</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-911dea3eae4696270d78ce487bde5dcc-3a98a5b0dc2e3a2ae4921d7b10071ff1">
        <akt:full-name>J. Kownacki</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0d043cdec1404dffa803bc5aae2517cd-3a98a5b0dc2e3a2ae4921d7b10071ff1">
        <akt:full-name>J. Barton</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b230b8d0420c1e93bf0f1bcef4362040-3a98a5b0dc2e3a2ae4921d7b10071ff1">
        <akt:full-name>R. Dancey</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-380c159629a27e891215d91a950ec52f-3a98a5b0dc2e3a2ae4921d7b10071ff1">
        <akt:full-name>A. Robinson</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-65dfa2b5b1458e8930c07aede46da437-3a98a5b0dc2e3a2ae4921d7b10071ff1">
        <akt:full-name>T. Lin</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532663.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532664">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>FAULT INJECTION FOR DEPENDABILITY VALIDATION OF FAULT-TOLERANT COMPUTING SYSTEMS</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b341b9d5c6bc97d05a94381318e29050-5c3de59ea98c77ce8f741bc8cc53f22b">
        <akt:full-name>J. Arlat</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-950fb0afb6b8f14520cc66c0060fb752-ee17589e2f4e4807225d09aca7c72844">
        <akt:full-name>Y. Crouzet</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b1f7976cad30dd3a4f5c0ec55161bf81-5c3de59ea98c77ce8f741bc8cc53f22b">
        <akt:full-name>J. Laprie</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532664.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532665">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Simulation of Software Behavior Under Hardware Faults</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d3db6eb429318e31d6da626b45bf6261-4099117ab08edf209a72f40fb9c0c8b6">
        <akt:full-name>K.K. Goswami</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6122ee67de7692816e4883ba5ebf39cb-4099117ab08edf209a72f40fb9c0c8b6">
        <akt:full-name>R.K. Iyer</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532665.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532666">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A FAULT-TOLERANT DIGITAL CLOCKING SYSTEM</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-66d2b9901a6c768b0df5d601bb39ced1-11c592f7864e4d07fd21ca5f81795dc5">
        <akt:full-name>W.M. Daly</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3a02bc362aaabe72d4494d2c314db86b-11c592f7864e4d07fd21ca5f81795dc5">
        <akt:full-name>Jr. Hopkins, A.L.</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3f63774dbfd0089fbaa7e41dabf501fc-11c592f7864e4d07fd21ca5f81795dc5">
        <akt:full-name>J.F. McKenna</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532666.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532667">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>INTERACTIVE CONSISTENCY AND ITS IMPACT ON THE DESIGN IN TMR SYSTEMS</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-72916b866f3087bab16357340e4ccc8c-0f32ab49d1c15e68e5e2b7c813285d9a">
        <akt:full-name>S.G. Frison</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-dc809853c3ac04bacf3c3d12cfd47440-0f32ab49d1c15e68e5e2b7c813285d9a">
        <akt:full-name>J.H. Wensley</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532667.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532668">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>ATOMIC BROADCAST: FROM SIMPLE MESSAGE DIFFUSION TO BYZANTINE AGREEMENT</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-07824e4560cf42e260dc3aa850485bde-6518924c50f63ce881fdf817a55a127d">
        <akt:full-name>F. Cristian</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-55bd75b89ff6848260ad2032d7fbeb2e-b99a29acbfc9719109fe518d4a929432">
        <akt:full-name>H. Aghili</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-06ea407b2f8d1f076f28543b5a67a6b4-5a05ad6a35138a8daf34202aca85755a">
        <akt:full-name>R. Strong</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9210de6c341332fa38a98eb3e0ba1a6f-b99a29acbfc9719109fe518d4a929432">
        <akt:full-name>D. Volev</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532668.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532669">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
        <support:year-of>1995</support:year-of>
        <support:has-pretty-name>1995</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A Formally Verified Algorithm for Interactive Consistency Under a Hybrid Fault Model</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-028bec0122bcda9f022f2fe5519e486d-5915b11e47fb3f942d5de15993cb98ed">
        <akt:full-name>P. Lincoln</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3ea5ba8736fc85cf391da30109a2aa00-79dfc6703a4269986fdc153ec607a57c">
        <akt:full-name>J. Rushby</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-9797" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1995</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11214</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1995'>
            <support:year-of>1995</support:year-of>
            <support:has-pretty-name>1995</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3846/11214/00532669.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534589">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Reconfiguration and transient recovery in state machine architectures</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3ea5ba8736fc85cf391da30109a2aa00-79dfc6703a4269986fdc153ec607a57c">
        <akt:full-name>J. Rushby</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We consider an architecture for ultra-dependable operation based on synchronized state machine replication, extended to provide transient recovery and reconfiguration in the presence of arbitrary faults. The architecture allows processors suspected of being faulty to be placed on "probation." Processors in this status cannot disrupt other processors, but those that are nonfaulty or recovering from transient faults are able to remain synchronized with the other processors and with each other, can participate in interactively consistent exchange of data (i.e., Byzantine agreement), and can restore damaged state data by loading majority-voted copies from other processors. The processors that are not on probation are able to coordinate membership of their group and to take processors on and off probation. These properties are achieved even if all the processors on probation and some of the others exhibit Byzantine faults, provided a majority of all processors are nonfaulty. Key elements of the architecture are modified treatments for the problems of interactive consistency, clock synchronization, and group membership. Classical algorithms for these problems that tolerate t Byzantine faults among n processors are extended to tolerate t+p faults among n+p processors, partitioned into n "core members" and p "probationers," provided no more than t faults occur among the core members</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534589.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>automata theory</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessing systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel algorithms</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel architectures</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reconfigurable architectures</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>synchronisation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534590">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Recoverable mobile environment: design and trade-off analysis</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0ec2cf85233e1fc733856281ce15e9d1-54980d5d550395544b15585eb98f16ad">
        <akt:full-name>D.K. Pradhan</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5ba7587ccd6d340468fb83ea2c4b7e7a-4364fdb68266edb7b0ec9cf7dcb70760">
        <akt:full-name>P. Krishna</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5ba7587ccd6d340468fb83ea2c4b7e7a-4364fdb68266edb7b0ec9cf7dcb70760">
        <akt:full-name>N.H. Vaidya</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The mobile wireless environment poses challenging problems in designing fault-tolerant systems because of the dynamics of mobility, and limited bandwidth available on wireless links. Traditional fault-tolerance schemes, therefore, cannot be directly applied to these systems. Mobile systems are often subject to environmental conditions which can cause loss of communications or data. Because of the consumer orientation of most mobile systems, run-time faults must be corrected with minimal (if any) intervention from the user. The fault-tolerance capability must, therefore, be transparent to the user. The paper presents recovery schemes for the failure of a mobile host. It portrays the limitations of the mobile wireless environment, and their impact on recovery protocols. The adaptation of well-known recovery schemes are presented which suit the mobile environment. The performance of these schemes has been analyzed to determine those environments where a particular recovery scheme is best suited. The performance of the recovery schemes primarily depends on: the wireless bandwidth; the communication-mobility ratio of the user; and the failure rate of the mobile host</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534590.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer network reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>mobile communication</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>protocols</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>wireless LAN</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534591">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Evaluating quorum systems over the Internet</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-60a5bfc8ada8868d62f76d9dc401abcb-d73382d741911b3e7f02368e7b3dc595">
        <akt:full-name>Y. Amir</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-cc26f89bd41f7e3b32778577fbcd81bd-89c3296d1d260b57bb49ac2fb72863e2">
        <akt:full-name>A. Wool</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Quorum systems serve as a basic tool providing a uniform and reliable way to achieve coordination in a distributed system. They are useful for distributed and replicated databases, name servers, mutual exclusion, and distributed access control and signatures. Traditionally, two basic methods have been used to evaluate quorum systems: the analytical approach, and simulation. We propose a third, empirical approach. We collected 6 months' worth of connectivity and operability data of a system consisting of 14 real computers using a wide area group communication protocol. The system spanned two geographic sites and three different Internet segments. We developed a mechanism that merges the local views into a unified history of the events that took place, ordered according to an imaginary global clock. We then developed a tool called the Generic Quorum-system Evaluator (GQE), which evaluates the behavior of any given quorum system over the unified, real-life history. We compared fourteen dynamic and static quorum systems. We discovered that as predicted, dynamic quorum systems behave better than static systems. However we found that many assumptions taken by the traditional approaches are unjustified: crashes are strongly correlated, network partitions do occur even within a single Internet segment, and we even detected a brief simultaneous crash of all the participating computers</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534591.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>Internet</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>computer network reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>protocols</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534592">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A fault simulation method for crosstalk faults in synchronous sequential circuits</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-513878dddf84a250f7b530efe400d5f7-763d8b08c50f2fcc227dc7e079228cc8">
        <akt:full-name>N. Itazaki</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3ccec6baa842415a0438cf973bc3b80a-763d8b08c50f2fcc227dc7e079228cc8">
        <akt:full-name>Y. Idomoto</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d6b361c66dc6964630f4e9984d3fb47a-763d8b08c50f2fcc227dc7e079228cc8">
        <akt:full-name>K. Kinoshita</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>With the scaling down of VLSI size and the reducing switching time of logic gates, crosstalk faults become an important problem for testing. If a crosstalk pulse is excited by internal noise sources, the crosstalk pulse tends to be considered as harmless for synchronous sequential circuits, because generated crosstalk pulses on data lines can be eliminated by a clocking. However the crosstalk pulse generated on clock lines or reset lines can lead the circuit to erroneous operations. We analyze the crosstalk fault scheme, and contrive a fault simulator based on the scheme, in order to estimate the effect for the crosstalk fault. We consider the crosstalk fault as unexpected strong capacitive coupling between one data line and clock lines. Since we have to consider timing in addition to a logic value, a unit delay model is used in our fault simulation. Our experiments on some benchmark circuits show that fault activation rates and fault detection rates are widely varied corresponding to circuit characteristics. Up to 80% fault detection rates are obtained from our simulation with test vectors generated at random</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534592.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>circuit analysis computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>circuit reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>crosstalk</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>digital simulation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic CAD</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic gates</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>sequential circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>timing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534593">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Random pattern testing for sequential circuits revisited</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-46e25ad8ac3640eb26f0ed9f670ce805-1d80656ea41e9e7c1754484c11064587">
        <akt:full-name>L. Nachman</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-583e845329bab667378f87353818cf3a-5ed53424bb32ef32b05f16e684ba4291">
        <akt:full-name>K.K. Saluja</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e61fa36eac86bb5970aa5f532658077b-8d0329de768bd9a2e3757bff543d019f">
        <akt:full-name>S. Upadyaya</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0fbc536dee711ec0c239966f9dbd3565-1d80656ea41e9e7c1754484c11064587">
        <akt:full-name>R. Reuse</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Random pattern testing methods are known to result in poor fault coverage for most sequential circuits unless costly circuit modification methods are employed. We propose a novel approach to improve the random pattern testability of sequential-circuits. We introduce the concept of holding signals at primary inputs and scan flip-flops for a certain length of time instead of applying a new random vector at each clock cycle. When a random vector is held at the primary inputs of the circuit under test or at the scan flip-flops, the system clock is applied and the primary outputs of the circuit are observed. The number of clock cycles, k, for which each random input is held at a fixed value before applying the next random vector, is determined by using testability analysis or a test pattern generator for a very small number of lines or faults in the circuit. The lines of faults that are analyzed are the primary inputs to flip-flops. The information obtained from the testability analysis or test generator is used to determine the number k of clock cycles for which each random vector is to be held constant without changing the signal values. The algorithm consists of simulating a sequential circuit systematically, possibly with partial scan, in conjunction with the hold method. The method is low cost and the results of our experiment on the benchmark circuits show that it is very effective in providing fault coverage close to the maximum obtainable fault coverage using random patterns with full scan</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534593.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>circuit analysis computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>circuit reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>clocks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>digital simulation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>flip-flops</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic CAD</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>sequential circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>timing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534594">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Dynamic test compaction for synchronous sequential circuits using static compaction techniques</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5842d5907bfb5169ef884ebf560ad04e-31c48571d7e050aaa47a5be0c054d0e7">
        <akt:full-name>I. Pomeranz</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f76b811fa428e2358e9d52dd9a352ba0-3011d44766b8724fa47442cf9b9fd2f8">
        <akt:full-name>S.M. Reddy</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Short test sequences for synchronous sequential circuits are important in reducing test application time and memory requirements. In addition, dynamic test compaction, where heuristics to generate short test sequences are incorporated into the test generation process, may also reduce test generation time. This is due to the fact that a smaller number of test vectors needs to be generated. We present a dynamic test compaction procedure. The compaction heuristics we use are based on previously proposed static compaction techniques. Conventionally, static compaction is applied as a postprocessing step, after the test sequence has been generated. In the proposed procedure, static compaction techniques are used while the test sequence is being generated, to reduce the need for postprocessing, or static compaction. Compared to other dynamic compaction procedures that generate very short test sequences, the computational overhead involved in the proposed procedure is significantly lower, yet short test sequences are obtained. The proposed techniques can be incorporated into other test generation procedures, to reduce the test lengths they produce</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534594.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault diagnosis</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic CAD</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>sequential circuits</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534595">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>FT-NFS: an efficient fault-tolerant NFS server designed for off-the-shelf workstations</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1a4924830c4c92e2538217857d150f9c-248c221100971bb0119de659c1b9b560">
        <akt:full-name>N. Peyrouze</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f588c9382a98e2ae1b6883cc76e8a7a7-248c221100971bb0119de659c1b9b560">
        <akt:full-name>G. Muller</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>In most modern local area network environments, NFS is used to provide remote file storage on a particular server machine. A consequence of this distributed architecture is that the failure of the server results in paralysis or a loss of work for users. The paper presents the design of a low cost fault tolerant NFS server which can be installed on most Unix networking environments. FT-NFS runs as a user process and does not necessitate any underlying specific operating system functionality. The originality of our approach relies on the use of a stable cache which provides data availability and resiliency to a single failure. The main benefits of the stable cache are first to allow disk write operations to be safely performed in the back ground and second to permit the gathering of small files in large containers. The latter technique permits disk I/Os to be improved by reducing their number and increasing their length. Under the nhf-stone benchmark, FT-NFS outperforms the in kernel Sun NFS implementation both in terms of latency and throughput</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534595.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer network reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>local area networks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>network servers</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>workstations</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534596">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Design and evaluation of fault-tolerant shared file system for cluster systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1c67fc5a204d4e27c748e243f26d196d-7357591f1705825da6fd58cc54d5762e">
        <akt:full-name>S. Sumimoto</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The paper describes the design and evaluation of a Fault Tolerant Shared File System (FTSFS) architecture for cluster systems with shared disks. The FTSFS architecture: guarantees no file system (FS) structure crashes on processor/program failure; can be applied to any existing nonshared FS without changing the structure of the FS; and does not degrade performance on the shared FS compared with a standard non shared FS. Using the FTSFS architecture, we implemented a fault tolerant shared FS on Fujitsu's SVR4 duplex system, and evaluated the system performance. The evaluation showed that the shared FS is competitive in performance with the standard SVR4-UFS (Unix File System)</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534596.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>shared memory systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534597">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Multiple fault diagnosis in sequential circuits using sensitizing sequence pairs</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1cf6f7a69a8cbcf7967b7f3bbc82976b-06edba7b1dd1a0c52120083a010756b9">
        <akt:full-name>N. Yanagida</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6e4d9815c81e84465a1d6e9c152bac80-06edba7b1dd1a0c52120083a010756b9">
        <akt:full-name>H. Takahashi</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-aa23d3699693412c1268f6633f4c46ae-06edba7b1dd1a0c52120083a010756b9">
        <akt:full-name>Y. Takamatsu</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The paper presents an approach to multiple fault diagnosis in sequential circuits by using input sequence pairs having sensitizing input pairs. This represents an extension of our previous work dealing with combinational circuits (N. Yanagida et al., 1995). After reviewing our previous method, we introduce an input sequence pair having sensitizing input pairs to diagnose multiple faults in a sequential circuit partitioned into subcircuits. We call such an input sequence pair, the sensitizing sequence pair. Next, we extend the use of the previous method for combinational circuits to sequential circuits. From a relation between a sensitizing path generated by a sensitizing sequence pair and a subcircuit, the proposed method deduces the suspected faults for the subcircuits, one by one, based on the responses observed at primary outputs without probing any internal line. The paper provides the first experimental reports on diagnostic results of the ISCAS circuits by using our diagnostic method for sequential circuits, without probing any internal line, any fault simulation, or fault enumeration</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534597.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>combinational circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault diagnosis</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>sequential circuits</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534598">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault diagnosis using state information</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-532d55092c85f42094d1563a05eef48e-31f4ca79878922b998630c946b016613">
        <akt:full-name>V. Boppana</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-da60cf97314fc8693c67eec8be7d0334-31f4ca79878922b998630c946b016613">
        <akt:full-name>I. Hartanto</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fb38f502674924925e2c4a2e8880d1bc-978117774e048d6deaba362337d7988c">
        <akt:full-name>W.K. Fuchs</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Repeated fault diagnosis on large integrated circuits may often be computationally prohibitive due to expensive fault simulation requirements. Fault dictionaries can help alleviate this problem, but they may be infeasible to store because of their large sizes, and more importantly, they typically provide only a black box view of the circuit and hence almost no diagnostic flexibility. The problem occurs because dictionaries usually only store primary output information. A new approach to fault diagnosis based on state information is presented. The selective storage of state information is shown to significantly improve the time for diagnostic fault simulation. We also describe a method to reduce the amount of information stored by choosing only a subset of the state space. This approach is shown to be ideally suited for partial scan circuits whose simple structure is exploited to reduce storage requirements. Experiments on the ISCAS 89 benchmark circuits are performed to demonstrate the efficiency of the state information based diagnosis technique</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534598.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>circuit analysis computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault diagnosis</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>integrated circuit testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534599">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Modeling the dependability of CAUTRA, a subset of the French air traffic control system</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-086850938f3e3a5b26a289d4d07c1740-cc0e53fc5119a8536cbba116db5a1a11">
        <akt:full-name>K. Kanoun</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a064f47697695c8d6e4d113a501a0969-3bd2cb3af2aa0c0d7acbc6053f95df67">
        <akt:full-name>M. Borrel</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-88a5ab16728461932bf3bc59595ea21d-3bd2cb3af2aa0c0d7acbc6053f95df67">
        <akt:full-name>T. Morteveille</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9a2de8706141ae9198881ca884c642f3-3bd2cb3af2aa0c0d7acbc6053f95df67">
        <akt:full-name>A. Peytavin</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The aim of our work is to provide a quantified means helping in the definition of a new architecture for CAUTRA, a subset of the French Air Traffic Control system. To do this, we define alternative architectures for the CAUTRA whose availability is compared in order to select the architecture with the highest level of availability. Modeling is carried out following a modular and systematic approach, based on the derivation of black models at a high level of abstraction. In a second step, the blocks are replaced by their equivalent Generalized Stochastic Petri Nets to build up the detailed model of the architecture. Emphasis is placed on modeling interactions between hardware and software components</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534599.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>Petri nets</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>air traffic control</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>control system analysis</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>safety-critical software</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534600">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A new methodology for calculating distributions of reward accumulated during a finite interval</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-107791b0288a0c54c4faacb9833417e5-091351f1944d3cf9db19691dce752cc0">
        <akt:full-name>M.A. Qureshi</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-efde8afabe4f82857eab1129fc7713e3-d5a0bb9380986d323688f503db5a1074">
        <akt:full-name>W.H. Sanders</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Markov reward models are an important formalism by which to obtain dependability and performability measures of computer systems and networks. In this context, it is particularly important to determine the probability distribution function of the reward accumulated during a finite interval. The interval may correspond to the mission period in a mission-critical system, the time between scheduled maintenances, or a warranty period. In such models, changes in state correspond to changes in system structure (due to faults and repairs), and the reward structure depends on the measure of interest. For example, the reward rates may represent a productivity rate while in that state, if performability is considered, or the binary values zero and one, if interval availability is of interest. We present a new methodology to calculate the distribution of reward accumulated over a finite interval. In particular, we derive recursive expressions for the distribution of reward accumulated given that a particular sequence of state changes occurs during the interval, and we explore paths one at a time. The expressions for conditional accumulated reward are new and are numerically stable. In addition, by exploring paths individually, we avoid the memory growth problems experienced when applying previous approaches to large models. The utility of the methodology is illustrated via application to a realistic fault-tolerant multiprocessor model with over half a million states</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534600.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>Markov processes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>computer maintenance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>computer network reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessing systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>numerical stability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>probability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534601">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Algebraic techniques for the optimization of control flow checking</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6e627ce6fff637e032de56c7732b6cff-d5b540b76c4c23bf71c6ab5097ac1410">
        <akt:full-name>G. Noubir</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c3352b6cf916b1c11368bc5ad44bbfba-d5b540b76c4c23bf71c6ab5097ac1410">
        <akt:full-name>B.Y. Choueiry</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Leveugle (1990) addressed the problem of reducing the overhead of online testing in dedicated controllers. He introduced a low-overhead technique that allows the detection of illegal paths in finite state machines. Based on Leveugle's idea for detecting illegal paths, we introduce a new simple signature function. This signature function can be efficiently implemented in software. The assignment of values to the states is carried out algebraically by matrix inversion instead of using exhaustive search methods. We show that signatures computed using MISR or checksum are particular cases of our more general signature function. Thus, the state assignment problem can be solved more efficiently. Then, we address the problems of latency and checking from a formal perspective and show that finding the smallest set of checking states (i.e., states where the static signature as compared with the run-time signature) that induces a latency less than or equal to a given value L is NP-hard and there exists no polynomial time algorithm that solves this problem unless P=NP</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534601.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computational complexity</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>computer testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>finite state machines</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>flow graphs</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>formal verification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>matrix inversion</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>optimisation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>state assignment</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534602">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Executable assertions and timed traces for on-line software error detection</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-499e25a8d467b6a4ad02bef29665b8e0-f6efe9da9bfd5ff46cb22ddda0f99ae3">
        <akt:full-name>C. Rabejac</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-540a4746a209f103c2eca1879b973667-f6efe9da9bfd5ff46cb22ddda0f99ae3">
        <akt:full-name>J.-P. Blanquart</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fc390e8e1b92f0352a9286eea471027b-f6efe9da9bfd5ff46cb22ddda0f99ae3">
        <akt:full-name>J.-P. Queille</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The topic of this paper is the detection of errors due to residual faults in software, particularly those with temporary effects. After positioning our approach amongst existing fault tolerance and detection techniques, we propose detection mechanisms for such errors. These mechanisms are designed to detect both data and control flow errors. They can be validated by both formal and fault-injection techniques. In particular, we propose a timed trace technique allowing one to specify the expected software behavior and to instantiate from this specification a generic control-flow checking automaton. The critical algorithms of this automaton are formally proved. To develop these mechanisms, we also propose a design and validation method based on a monitoring specification. Finally, we apply these techniques on two cases of embedded real-time software in order not only to validate them but also to estimate their efficiency and applicability</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534602.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>formal specification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>online operation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program debugging</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program diagnostics</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program verification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>real-time systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534603">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A multiple bus broadcast protocol resilient to non-cooperative Byzantine faults</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0d393de31edae3113cecc83042fc36a3-81b0583dda8c76dc7a34d1c6bdc0e828">
        <akt:full-name>K. Echtle</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7e47d3149526704c4bdeed995d77e100-81b0583dda8c76dc7a34d1c6bdc0e828">
        <akt:full-name>A. Masum</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We describe a reliable broadcast protocol for multiple buses. It utilizes the benefits of a slightly restricted Byzantine fault model. Unlike common fault models we refrain from putting restrictions on the behavior of single node failures (i.e., fail omission assumption). Instead we make the assumption on the overall behavior of a set of faulty system components. By excluding extremely unlikely malicious cooperation we can reach uniform agreement on message delivery among faultless nodes at low cost. In the faultless case the execution time is bound by the maximum duration of a single broadcast message. In the presence of omission, timing and even non-cooperative Byzantine faults, both execution time and message number depend on the properties of the surviving network. In contrast to other known protocols our approach tolerates up to n-2 faulty nodes in a system of n nodes. Moreover, any number of bus faults and bus access unit faults are tolerated, provided that the network is not partitioned</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534603.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer network reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>formal verification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>message passing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system buses</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>timing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>transport protocols</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534604">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Consensus service: a modular approach for building agreement protocols in distributed systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-dcd592ec678f25046528d7df1434f14b-642519de6fc06a45c675f45b8de17b29">
        <akt:full-name>R. Guerraoui</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-26a1feff1a215dc9086df75cf67bb007-e26dfb2435cb9431ece07d0968714a11">
        <akt:full-name>A. Schiper</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We describe a consensus service and suggest its use for the construction of fault-tolerant agreement protocols. We show how to build agreement protocols, using a classical client-server interaction, where: the clients are the processes that must solve the agreement problem; and the servers implement the consensus service. Using a generic notion, called consensus filter, we illustrate our approach on non-blocking atomic commitment and on view synchronous multicast. The approach can trivially be used for total order broadcast. In addition of its modularity, our approach enables efficient implementations of the protocols, and precise characterization of their liveness</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534604.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>client-server systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>computer network reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>local area networks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>protocols</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534605">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Group, majority, and strict agreement in timed asynchronous distributed systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-07824e4560cf42e260dc3aa850485bde-6518924c50f63ce881fdf817a55a127d">
        <akt:full-name>F. Cristian</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Atomic broadcast is a group communication service that enables a team of distributed processes to keep replicated data `consistent', despite concurrency, communication uncertainty, failures and recoveries. We investigate possible meanings for replicated data `consistency' in timed asynchronous systems, subject to crash/performance process failures and omission/performance communication failures which may partition correct team members into isolated parallel groups. We propose three different replica consistency specifications: group agreement, majority agreement and strict agreement and give examples of atomic broadcast protocols that implement these specifications. The interface issues between the underlying membership services and the broadcast protocols that provide the above semantics are also addressed</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534605.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>concurrency control</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>data integrity</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>distributed databases</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>protocols</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>replicated databases</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software performance evaluation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534606">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Optimal two-level unequal error control codes for computer systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-bcf1679cb85e38c80a2457102f2a66dc-6e6034cb9c4380b1dba5572e249a9bce">
        <akt:full-name>T. Ritthongpitak</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0f4671fafeb5e0586a848edc04d3180d-f5384f3cced90f7908f9d307facd7bd5">
        <akt:full-name>M. Kitakami</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-31f8276351682e93960ef032a2488137-f5384f3cced90f7908f9d307facd7bd5">
        <akt:full-name>E. Fujiwara</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Error control codes are now successfully applied to computer systems, especially to memory systems. This paper proposes an extended class of unequal error control codes which protects the fixed-byte strongly in computer words from multiple errors. The fixed-byte stores valuable information such as control and address information in computer/communication messages or pointer information in database words. Here, fixed-byte means the clustered information digits in the word whose position is determined in advance. As a simple and practical class of the codes, this paper proposes an extended type of two-level unequal error control codes which has two error control levels in the codeword; one with strong error control function for the fixed-byte, and the other with weak function for the other part of the codeword. The proposed optimal codes are single-bit error correction, double-bit error detection and fixed b-bit byte error correction code, called SEC-DED-FbEC code, and single-bit plus fixed b-bit byte error correction code, called (S+Fb)EC code, which correct single-bit errors and fixed-byte errors occurring simultaneously. For both types of codes, this paper clarifies necessary and sufficient conditions and bounds on code length, and demonstrates a code construction method of the optimal codes and an evaluation of these codes from the perspectives of error correction/detection capability and decoder hardware complexity</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534606.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>error correction codes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error detection codes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>optimisation</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534607">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Symbol error correcting codes for memory applications</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-406eed9df6582b8f16b842dfb8935e2b-92d86ef5f883debb52a86f9e9374d6bd">
        <akt:full-name>C.L. Chen</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Symbol error correcting codes have been used for fault tolerance in computer memory subsystems configured in b-bits-per-chip. This paper presents algorithms for designing the parity check matrices of symbol error correcting codes to reduce circuit count and the circuit time delay. It presents a technique for formulating the parity check matrices for modular implementation. It also presents codes that use a smaller number of circuits and require a shorter circuit delay time than other known codes. These results are useful for practical design of symbol error correcting codes</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534607.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>digital storage</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error correction codes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>matrix algebra</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534608">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Limitations of VLSI implementation of delay-insensitive codes</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-511ba94cb7a952f23cfe8b26a265a4a4-061e34bd563e74966139d192978b8cec">
        <akt:full-name>V. Akella</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5ba7587ccd6d340468fb83ea2c4b7e7a-4364fdb68266edb7b0ec9cf7dcb70760">
        <akt:full-name>N.H. Vaidya</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e9a543d4b6e6ba85e0bab025a9ad5ca1-8502dc32e94810aa6e4007f23f796406">
        <akt:full-name>G.R. Redinbo</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Implementation of delay-insensitive (DI) or unordered codes is the subject of this paper. We present two different architectures for decoding systematic DI codes: (a) an enumeration-based decoder, and (b) a comparison-based decoder. We argue that enumeration-based decoders are often impractical for many realistic codes. Comparison-based decoders that detect arrival of a code word by comparing the received check bit with check bits evaluated using the received data are practical but suffer from the following limitation. If the decoder is to be implemented using asynchronous logic, i.e., if the gate and wire delays are arbitrary (unbounded but finite), then it is impossible to design a comparison-based decoder for any code that is more efficient than a dual-rail code. In other words, the encoded word must contain at least twice as many bits as the data. The paper shows that comparison-based decoders for codes that have the requisite level of redundancy can be implemented using asynchronous logic. The paper also shows that, by relaxing the delay assumptions, it is possible to implement decoders for delay-insensitive codes that are more efficient than dual-rail codes</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534608.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>VLSI</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>asynchronous circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>decoding</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>delays</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>dual codes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error correction codes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error detection codes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>integrated logic circuits</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534609">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Verification of fault tolerance and real time</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-52ebe877730b90ae73c7305ebeba6a95-32cb2b5ed58da7b853d22cced0526724">
        <akt:full-name>Zhiming Liu</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6ecf13a1d72f2e9b37d6661143af9f6e-32cb2b5ed58da7b853d22cced0526724">
        <akt:full-name>M. Joseph</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A transformational method is given for specifying and verifying fault-tolerant, real-time programs. Such a program needs to be provably correct according to both its functional and real-time requirements, despite the possible occurrence of system failures. The paper demonstrates that a suitably expressive logic for real-time systems makes it possible to naturally model the state changes caused by system failures and determine their effect on the functional and real-time properties of executions</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534609.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>algebraic specification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>formal specification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program verification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>real-time systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534610">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A framework for conformance testing of systems communicating through rendezvous</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e96b5ceadb7222cdcf820b21f68f2b65-6beccf2d4a3bd0ed472611c787e42d0b">
        <akt:full-name>Q.M. Tan</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0a87796ea54ba38002461bb814f3b468-6beccf2d4a3bd0ed472611c787e42d0b">
        <akt:full-name>A. Petrenko</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-031541814374d82a85b6c38d78356bc3-6beccf2d4a3bd0ed472611c787e42d0b">
        <akt:full-name>G. von Bochmann</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A formal framework is first proposed for conformance testing of communication systems, which are modeled by labeled transition systems, in a systematic and operational approach. In this framework, test cases are limited to deterministic processes with finite behavior and state labels; testing is a finite set of experiments where every test case is parallelly composed with an implementation under test; observations are action sequences, executed during the testing, from which the test verdict is drawn directly. The fault model and fault coverage criteria are introduced to measure the effectiveness of testing. Afterwards, based on this framework, for several common conformance relations, we present corresponding functions for the state labeling of test cases and upper bounds on the necessary sizes of test suites for obtaining complete fault coverage</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534610.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>conformance testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>formal specification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>telecommunication</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534611">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Supporting nondeterministic execution in fault-tolerant systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4bfc67291f716ada5a44eef6cacceae1-a172c3af0d7e188b29c55ff8ac36dcd5">
        <akt:full-name>J.H. Slye</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-677077c9f56cc7b09c650f7e6f698ac8-fda7740f53530a8a23584791c2815cea">
        <akt:full-name>E.N. Elnozahy</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We present a technique to track nondeterminism resulting from asynchronous events and multithreading in log-based rollback-recovery protocols. This technique relies on using a software counter to compute the number of instructions between nondeterministic events in normal operation. Should a failure occur, the instruction counts are used to force the replay of these events at the same execution points. The execution of the application thus can be replayed to recreate the pre-failure state, while accommodating uncontrolled nondeterminism during normal operation. Implementation on a DEC Alpha processor shows that this support has a low overhead, typically less than 6% increase in running time for the applications we studied</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534611.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>memory protocols</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>shared memory systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534612">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Reliable broadcasting in product networks with Byzantine faults</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-89c342a469d396f102eea24fcf885fea-3fc320cfca95517be6e9dc23a31a2569">
        <akt:full-name>Feng Bao</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-926c492c4a2809fc2a43f806e151bf54-3fc320cfca95517be6e9dc23a31a2569">
        <akt:full-name>Y. Igarishi</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The reliability of broadcasting in product networks is discussed. We assume that a network may contain faulty nodes and/or links of Byzantine type and that no nodes know any information about faults in advance. If there are n independent spanning trees rooted at the some node of a network, the network is called an n-channel graph. We first show a construction of n independent spanning trees rooted at the same node of a product network consisting of n component graphs. Then we design a broadcasting scheme in the product network so that messages are sent along the n independent spanning trees. This broadcasting scheme can tolerate up to [(n-1)/2] faults of Byzantine type even in the worst case. Broadcasting by the scheme is successful with a probability higher than 1-k-[n/2] in any product network of order N consisting of n component graphs of order b or less if at most N/4b3nk faulty nodes are randomly distributed in the network. Furthermore we show how to construct n1+n2 independent spanning trees in a product network of two graphs such that the one component graph is an n1-channel graph and the other component graph is an n2-channel graph. These independent spanning trees can be also used as efficient and reliable message channels for broadcasting in the product network</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534612.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer network reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault trees</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>message passing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessor interconnection networks</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534613">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Spare processor allocation for fault tolerance in torus-based multicomputers</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e1af56bf96b78c96b1eacba691747e6c-844dc337747af941f84bf6f37519e297">
        <akt:full-name>M.M. Bae</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a0392234f049693b1fedb025d91a345a-ae627ebbf8f37687b7f75087685a7fc7">
        <akt:full-name>B. Bose</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Some fault-tolerant architectures use the spare nodes or links to replace the faulty components. This paper gives solutions to spare processor placement problem for torus based networks. Optimal 1-hop spare processor placement methods for multi-dimensional tori and t-hop placement methods for 2D tori are described. In the presence of node failures, a system reconfiguration scheme using spare nodes is also given</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534613.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer network reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessing systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessor interconnection networks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>processor scheduling</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reconfigurable architectures</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534614">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A comparative analysis of event tupling schemes</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0ba2ee175eab6358293b3827a9b3dd39-6c64898d76f9c721c69419d3a6748af9">
        <akt:full-name>M.F. Buckley</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4eba2bc7fb235c73aca57ecd0bdbf595-b42c148767c85bbbb0f88e8fa5736fe1">
        <akt:full-name>D.P. Siewiorek</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Event logs provide an effective means of improving system availability. However, the majority of faults produce many errors because faults propagate in the time and error detection domains. Thus, the ability to coalesce related events is critical. The tupling heuristics developed at Carnegie-Mellon University provide one such methodology. These heuristics were applied to a new and larger set of data in order to evaluate the generality of the scheme and to extend the previous work. The extensions included deriving a semantic understanding of why the rules work, expanded statistical analysis, and a comprehensive sensitivity study to determine the effects of changes in the rules. The results prove that tupling is a useful and general methodology. The sensitivity study enabled the identification of refinements to the rules, while the high degree of skew in the tuple variables enables us to propose that the extreme percentiles be used as an alarm threshold for proactive fault management</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534614.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer debugging</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>statistical analysis</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534615">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Generation of an error set that emulates software faults based on field data</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-555e3d4f7a8b1b210626b89ebb546b35-d2284b405429a397ed61fea7120e150c">
        <akt:full-name>J. Christmansson</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-cb9bfe73f6f41da8f792ce4bbef8d641-d2284b405429a397ed61fea7120e150c">
        <akt:full-name>R. Chillarege</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A significant issue in fault injection experiments is that the injected faults are representative of software faults observed in the field. Another important issue is the time used, as we want experiments to be conducted without excessive time spent waiting for the consequences of a fault. An approach to accelerate the failure process would be to inject errors instead of faults, but this would require a mapping between representative software faults and injectable errors. Furthermore, it must be assured that the injected errors emulate software faults and not hardware faults. These issues were addressed in a study of software faults encountered in one release of a large IBM operating system product. The key results are: A general procedure that uses field data to generate a set of injectable errors, in which each error is defined by: error type, error location and injection condition. The procedure assures that the injected errors emulate software faults and not hardware faults. The faults are uniformly distributed (1.37 fault per module) over the affected modules. The distribution of error categories in the IBM operating system and the distribution of errors in the Tandem Guardian90 operating system reported previously were compared and found to be similar. This result adds a flavor of generality to the field data presented in the current paper</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534615.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>program testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program verification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534616">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>An approach towards benchmarking of fault-tolerant commercial systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e67b024801a69ad1c6759e43912b1218-d3f7658136ed40e343a57426d375ecda">
        <akt:full-name>T.K. Tsai</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3cb9d9c5621884fe516635e78c871482-2d79fc4431419ced7425c3d4110f4a21">
        <akt:full-name>R.K. Iyer</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1031e4d74d2dc2dd3d78acee3054bde1-d3f7658136ed40e343a57426d375ecda">
        <akt:full-name>D. Jewitt</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>This paper presents a benchmark for dependable systems. The benchmark consists of two metrics, number of catastrophic incidents and performance degradation, which are obtained by a tool that (1) generates synthetic workloads that produce a high level of CPU, memory, and I/O activity and (2) injects CPU, memory, and I/O faults according to an injection strategy. The benchmark has been installed on two TMR-based prototype machines: TMR Prototype A and TMR Prototype B. An implementation for a third prototype, is based on a duplex architecture, is in progress. The results demonstrate the utility of the benchmark in comparing the system-level fault tolerance of these machines and in providing insight into their design. In particular the benchmark shows that Prototype B suffers fewer catastrophic incidents than Prototype A under the same workload conditions and fault injection method. However Prototype B also suffers more performance degradation in the presence of faults, which might be an important concern for time-critical applications</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534616.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534617">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The design of totally self-checking checkers for some classes of Hadamard codes</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e1ea6871ee5530f622cbfd757bcc9dcd-9ade3d192c06177db74d27736028874f">
        <akt:full-name>N. Wakita</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e80ec2a1cb4daf4db784620e988d16f5-9ade3d192c06177db74d27736028874f">
        <akt:full-name>K. Takagi</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-20b0105154c964dd398004f23f4d9d56-9ade3d192c06177db74d27736028874f">
        <akt:full-name>Y. Iwadare</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Hadamard codes are derived from the rows of Hadamard matrices, and are widely used in signal processing, feature extractions, communications, and so forth. In this paper, the designs of totally self-checking checkers for these codes are considered. On account of their property that total number of codewords are small and their patterns are limited, same extra ideas are required to establish self-testing properties. There are 3 kinds of Hadamard matrices, Sylvester type, M sequence type and Paley type. The checker design obtained here is applicable to Paley type matrices of degree 8m+4, where m is a nonnegative integer, by making use of the property of difference sets. In the case of matrices of degree 8m+8, the checker design is still an open question. It is also shown that Sylvester type and M sequence type Hadamard codes checkers are obtained by systematic code checker design. Therefore, the total results obtained here cover the majority of Hadamard codes known so far</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534617.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>Hadamard matrices</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>codes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534618">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Behavioral synthesis of fault secure controller/datapaths using aliasing probability analysis</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-33ba9e19a27b3e19047f4f22b5ab63fc-9199b5dc18f2db89b0166737b5196b87">
        <akt:full-name>G. Lakshminarayana</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e9e1f193be92183d30ae815f457b43c1-9199b5dc18f2db89b0166737b5196b87">
        <akt:full-name>A. Raghunathan</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-73885f0e72beb9ed0735ce153bd80e1e-0b8416082105e9d9699f2f51937ee759">
        <akt:full-name>N.k. Jha</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We address the problem of synthesizing fault-secure controller/data path circuits from behavioral specifications. We use an iterative improvement based behavioral synthesis framework that performs module selection, clock selection, scheduling, and resource sharing with the aim of minimizing the area of the synthesized circuit, while allowing multicycling, chaining, and module pipelining. We present a dynamic comparison selection algorithm that can be used during behavioral synthesis to determine which intermediate results in the computation need to be secured in order to enable maximal resource sharing. Previous work on synthesizing fault-secure data paths has focused on ensuring that aliasing cannot occur in any part of the design. We demonstrate that such an approach can lead to unnecessarily large overheads. In order to alleviate the overheads incurred for fault security, our behavioral synthesis framework uses aliasing probability analysis (ALPS) in order to identify resource sharing configurations that reduce area, while introducing a very low probability of aliasing (of the order of 10-10 for a bitwidth of 32) in the resultant data path. We report experimental results for several behavioral descriptions that demonstrate the efficacy of our techniques in synthesizing fault-secure controller/datapaths with low overheads</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534618.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>clocks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>data flow graphs</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>high level synthesis</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic CAD</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>probability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>scheduling</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534619">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Efficient service of rediscovered software problems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f078f8f9a3863b7bbcfe9760e54a5da2-357dad94743413d03cd73d9f79e93a6e">
        <akt:full-name>I. Lee</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c422fd092b0be32469dd55836b344e64-a870b1db262d864af17418ee3a0aa2e6">
        <akt:full-name>G. Pitt</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3cb9d9c5621884fe516635e78c871482-2d79fc4431419ced7425c3d4110f4a21">
        <akt:full-name>R.K. Iyer</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>This paper presents Tandem's approach to efficiently handling rediscovered software problems in user systems and service centers. At the heart of the approach is a symptom-based strategy to automatically diagnose rediscovered software problems. The paper discusses the development and implementation of an automated diagnosis system, experience in incorporating the automated diagnosis into Tandem's service framework, and future work</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534619.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>program debugging</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program diagnostics</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534620">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Formal methods for the validation of fault tolerance in autonomous spacecraft</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-44e1ea3fbc62344bbaf83f4d5f8d8f94-0eed5e4829e3c99b62e36d970b6ca7ce">
        <akt:full-name>S. Ayache</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-da3268cb2c319580ec04b325e45febec-0eed5e4829e3c99b62e36d970b6ca7ce">
        <akt:full-name>E. Conquet</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3e9e603eda1e124cf5d9cfebddcfc2f1-0eed5e4829e3c99b62e36d970b6ca7ce">
        <akt:full-name>P. Humbert</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1f36535754c6dc3f1cb260d841669174-0eed5e4829e3c99b62e36d970b6ca7ce">
        <akt:full-name>C. Rodriguez</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-81494a49184b27d16f3822906cd6f0aa-0eed5e4829e3c99b62e36d970b6ca7ce">
        <akt:full-name>J. Sifakis</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c8a31080ff3e4585eda5ceb90925a7be-0eed5e4829e3c99b62e36d970b6ca7ce">
        <akt:full-name>R. Gerlich</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>One of the major challenges to be faced in the design of new-generation spacecrafts comes with the requirement to increase the capacity of autonomous operation, in particular in presence of abnormal events. Formal methods are becoming more accepted in the space industry as a possible way to manage induced systems complexity. The Data Management System Design Validation (DDV) study has accomplished an experimental junction between the spacecraft autonomy trends and emerging formal methodologies. A methodological framework applicable to the early life cycle phases of fault-tolerant systems engineering has been defined. It focuses on the verification of fault tolerance properties using model-based formalisms. The Specification and Design Language (SDL) was selected for this study as the best suited language with respect to the application. This work has resulted in an executable specification establishing the tolerated behaviours of spacecraft computers in presence of faults. Fault tolerance properties have been checked, in spite of limitations inherent to model-based formalisms, by using an appropriate verification process</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534620.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>aerospace computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>aerospace industry</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>formal specification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program verification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>special purpose computers</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>specification languages</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534621">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Compiler-assisted generation of error-detecting parallel programs</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1c9e477d1f3c8c284ec354f63cab0af4-194da23e2012476a100ec951d98c3fe3">
        <akt:full-name>A. Roy-Chowdhury</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-37fa5881bead9f26c4f49dd416f07d79-f364c4a7a3de3591e08829489d8f5e77">
        <akt:full-name>P. Banerjee</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We have developed an automated a compile time approach to generating error-detecting parallel programs. The compiler is used to identify statements implementing affine transformations within the program and to automatically insert code for computing, manipulating, and comparing checksums in order to detect data errors at runtime. Statements which do not implement affine transformations are checked by duplication. Checksums are reused from one loop to the next if this is possible, rather than recomputing checksums for every statement. A global dataflow analysis is performed in order to determine points at which checksums need to be recomputed. We also use a novel method of specifying the data distributions of the check data using data distribution directives so that the computations on the original data, and the corresponding check computations are performed on different processors. Results on the time overhead and error coverage of the error detecting parallel programs over the original programs are presented on an Intel Paragon distributed memory multicomputer</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534621.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>automatic programming</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>data flow analysis</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>distributed memory systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel programming</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallelising compilers</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program debugging</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program diagnostics</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534622">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Evaluation of checkpoint mechanisms for massively parallel machines</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6e3f2f8d84d35e0da3ad835be84ba11b-acb09444f541edf81cc257d034b69c50">
        <akt:full-name>Tzi-Cker Chiueh</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2dcd2a5e060e97ba27f9939b6a4d109a-3b9d38db3158a39c05f7f3c041d04d83">
        <akt:full-name>Peitao Deng</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Massively parallel machines typically contain thousands of processor units and therefore are more likely to suffer system breakdown because of component failures. This paper studies efficient diskless checkpointing mechanisms for SIMD massively parallel machines. Three checkpointing schemes: mirror checkpointing, parity checkpointing, and partial parity checkpointing are compared in terms of their checkpoint performance and storage overheads, based on empirical measurements. Mirror checkpointing and parity checkpointing schemes have been successfully implemented and tested on a DECmpp 12000 machine, without hardware or OS modifications. It has been shown that mirror checkpointing is an order of magnitude faster than parity checkpointing, but takes twice as much storage overhead. Partial parity checkpointing, although significantly reduces the storage overhead, could lead to unpredictable execution performance. This paper also examines the detailed storage/performance tradeoffs for partial parity checkpointing through manual instrumentation, and describes the implementation experience from these experiments</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534622.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>DEC computers</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel algorithms</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel machines</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534623">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The redundancy mechanisms of the Ariane 5 Operational Control Center</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-bf7a4414626c6f0427f71eb680a9e7f8-c4767dfb97d9de98df5067c7ef90d92c">
        <akt:full-name>J.-L. Dega</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The Operational Control Center represents the largest component in the Ariane 5 ground segment. It handles all interface management between the Ariane launcher and ground facilities during launch preparation phases. It ensures information exchange between on-board equipment and the ground, and controls the launch count-down. The control center is a real-time system distributed on four sites and linked with an optical fiber network. For safety and availability reasons, redundancy has been applied to most of the control center's subsystems: front-end equipment, processing units, networks. The design and development of the Ariane 5 control center was a challenge for several reasons: the safety and operational constraints; the compatibility with the test benches without redundancy used at earlier stages of the development cycle; the fully distributed architecture; the need for online repair and re-insertion of failed redundant units without interrupting the launch countdown</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534623.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>aerospace control</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>computer maintenance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>ground support systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>optical fibre LAN</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>real-time systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>rockets</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>safety</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534624">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Highly available directory services in DCE</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-803dc2cc6bde350f66df0a16ce749cfd-17dadccdb507573a96c2abf2b569652c">
        <akt:full-name>B. Acevedo</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-148801a7bf912b37a85b98b102eda60b-17dadccdb507573a96c2abf2b569652c">
        <akt:full-name>L. Bahler</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-677077c9f56cc7b09c650f7e6f698ac8-17dadccdb507573a96c2abf2b569652c">
        <akt:full-name>E.N. Elnozahy</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-198dd1f107d5b5b024f74cdb60b9b451-17dadccdb507573a96c2abf2b569652c">
        <akt:full-name>V. Ratan</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e57691f0fba326bfd4107c749e521977-17dadccdb507573a96c2abf2b569652c">
        <akt:full-name>M.E. Segal</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The DCE standard includes specifications for the Directory Service, a component that performs typical naming services in distributed computing environments. We list some deficiencies in these specifications that affect the naming service availability and correctness, and suggest possible solutions. We then describe an enhancement of an implementation of the Directory Service that adds support for partial replication of the name space, continuous operation of the service, and automatic fallover. Our extensions ensure the consistency of the name space data, and are transparent to application developers and end users, all without a significant performance penalty</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534624.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>data integrity</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>naming services</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software standards</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534625">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Experimental evaluation of the fail-silent behaviour in programs with consistency checks</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2f1e41a7f3bd12b67c93010f8287a9b3-d4bbd7db085d17d0c58986ed2a9d874a">
        <akt:full-name>M.Z. Rela</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-35e2107ee35704cefb98fbe26f16ddaa-73e511a5851709337a7400ee2c4db4d8">
        <akt:full-name>H. Madeira</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d755502a9e2fff3e24f2e43744bbbca1-d4bbd7db085d17d0c58986ed2a9d874a">
        <akt:full-name>J.G. Silva</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>An important research topic deals with the investigation of whether a non-duplicated computer can be made fail-silent, since that behaviour is a-priori assumed in many algorithms. However, previous research has shown that in systems using a simple behaviour based error detection mechanism invisible to the programmer (e.g. memory protection), the percentage of fail-silent violations could be higher than 10%. Since the study of these errors has shown that they were mostly caused by pure data errors, we evaluate the effectiveness of software techniques capable of checking the semantics of the data, such as assertions, to detect these remaining errors. The results of injecting physical pin-level faults show that these tests can prevent about 40% of the fail-silent model violations that escape the simple hardware-based error detection techniques. In order to decouple the intrinsic limitations of the tests used from other factors that might affect its error detection capabilities, we evaluated a special class of software checks known for its high theoretical coverage: algorithm based fault tolerance (ABFT). The analysis of the remaining errors showed that most of them remained undetected due to short range control flow errors. When very simple software-based control flow checking was associated to the semantic tests, the target system, without any dedicated error detection hardware, behaved according to the fail-silent model for about 98% of all the faults injected</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534625.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>data flow analysis</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>data integrity</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program debugging</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program diagnostics</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program verification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534626">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Testing of fault-tolerant and real-time distributed systems via protocol fault injection</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0e1a05ace1577dc5b62eb46a265bedb5-95c8a5a9215e444de4561fe374991e73">
        <akt:full-name>S. Dawson</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-16187c3f38af1efef4f42c838da73c8e-18d353a52ee181d35195ffe205ac875e">
        <akt:full-name>F. Jahanian</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8732d57a0fa599efff608dc60a729173-95c8a5a9215e444de4561fe374991e73">
        <akt:full-name>T. Mitton</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-69ada5ef30e4d99a68198a6c9a9afc10-95c8a5a9215e444de4561fe374991e73">
        <akt:full-name>Teck-Lee Tung</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>As software for distributed systems becomes more complex, ensuring that a system meets its prescribed specification is a growing challenge that confronts software developers. This is particularly important for distributed applications with strict dependability and timeliness constraints. This paper reports on ORCHESTRA, a portable fault injection environment for testing implementations of distributed protocols. This tool is based on a simple yet powerful framework called script-driven probing and fault injection, for the evaluation and validation of the fault-tolerance and timing characteristics of distributed protocols. The tool, which was initially developed on the Real-Time Mach operating system and later ported to other platforms including Solaris and SunOS, has been used to conduct extensive experiments on several protocol implementations. This paper describes the design and implementation of the fault injection tool focusing on architectural features to support portability, minimizing intrusiveness on target protocols, and explicit support for testing real-time systems. The paper also describes the experimental evaluation of two protocol implementations: a real-time audio-conferencing application on Real-Time Mach, and a distributed group membership service on the Sun Solaris operating system</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534626.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>operating systems (computers)</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program verification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>protocols</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>real-time systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software portability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534627">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Experimental assessment of parallel systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d755502a9e2fff3e24f2e43744bbbca1-d4bbd7db085d17d0c58986ed2a9d874a">
        <akt:full-name>J.G. Silva</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c8a515af8a40b7e0463696d7e294d170-26e864369c71e7ab118328ffc7416342">
        <akt:full-name>J. Carreira</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-35e2107ee35704cefb98fbe26f16ddaa-73e511a5851709337a7400ee2c4db4d8">
        <akt:full-name>H. Madeira</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-91cef0b099da9d68a9642f69c45405df-26e864369c71e7ab118328ffc7416342">
        <akt:full-name>D. Costa</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-68e1cdfea84558a65a23df02d59ae3d1-26e864369c71e7ab118328ffc7416342">
        <akt:full-name>P. Moreira</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>In the research reported in this paper, transient faults were injected in the nodes and in the communication subsystem (by using software fault injection) of a commercial parallel machine running several real applications. The results showed that a significant percentage of faults caused the system to produce wrong results while the application seemed to terminate normally, thus demonstrating that fault tolerance techniques are required in parallel systems, not only to assure that long-running applications can terminate but also (and more important) that the results produced are correct. Of the techniques tested to reduce the percentage of undetected wrong results only ABFT proved to be effective. For other simple error detection methods to be effective, they have to be designed in, and not added as an after thought. Faults injected in the communication subsystem proved the effectiveness of end-to-end CRCs on the data movements between processors</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534627.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>parallel machines</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel programming</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program debugging</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534628">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Self-checking and fail-safe LSIs by intra-chip redundancy</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f160e933c1ee29f8b6fa2ff17ec988e6-ec312d0b3984850f500ccb0d11f553ab">
        <akt:full-name>N. Kanekawa</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c87dace367e7733acff854d763769eb4-e5b419d890d05781b1dc35d322be1f97">
        <akt:full-name>M. Nohmi</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f73124ed68551cf9b401071d2c0f2e46-e5b419d890d05781b1dc35d322be1f97">
        <akt:full-name>Y. Satoh</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6550a2465753689dbfc332d72727e812-e5b419d890d05781b1dc35d322be1f97">
        <akt:full-name>H. Satoh</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The paper describes self checking LSIs realized by intra chip redundancy. Self checking comparators within the self checking LSI chips monitor the operation of redundant functional blocks to ensure the functionality of the LSIs. Spatial diversity and time diversity minimize correlated faults among redundant functional blocks, which may reduce fault detection coverage because of coincident faults. This approach allows advantage to be taken of the merits of today's most advanced LSI technologies. That is, higher performance, higher gate density, smaller dimensions, lower power consumption, and lower failure rate, in critical applications. In addition, this approach is well suited to contemporary design automation systems, and can enjoy their merits. The self checking LSIs were developed for experimental purposes and they will be applied to other fault tolerant applications in the future. In addition, the concept of intra chip redundancy is also employed for fail safe LSIs as one technique to ensure their fail safe features. The fail safe LSIs will be applied to train control systems in Japan in the near future</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534628.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>built-in self test</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>circuit CAD</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>comparators (circuits)</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>digital integrated circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>integrated circuit testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>large scale integration</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>redundancy</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534629">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Technologies for designing dependable A/D converters</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1d342dd16aa827814ff07f6dc0077f04-ff20981ffdc14cb8229338cb26241054">
        <akt:full-name>K. Kawamura</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-af174499f979aa743d8c7640f81387ee-ff20981ffdc14cb8229338cb26241054">
        <akt:full-name>T. Matsubara</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0935b8b1ee338ae56af29740febfa490-ff20981ffdc14cb8229338cb26241054">
        <akt:full-name>Y. Koga</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Although considerable research has been conducted on fault tolerance at the system level and results in system level fault tolerance have been applied to some actual systems, only a few research reports on fault tolerant A/D converters have appeared in the literature. Since A/D converters are extensively used in many actual systems and have important roles as input devices for digital processing in real time systems, it is important to develop technologies for designing dependable A/D converters. We review the technologies for the design of dependable A/D converters, including some of the patents in this area and the results of our research</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534629.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>analogue-digital conversion</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00534630">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Two error-detecting and correcting circuits for space applications</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-eb3024544177a04cf105742a104ced99-8ee7e0099f5c407c32f454fd9f2e6961">
        <akt:full-name>R. Johansson</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The paper describes two error detection and correction (EDAC) circuits designed and manufactured for the European space program. One of the EDACs is for a 16 bit data bus and the other for a 32 bit data bus. Eight check bits are added to the 16/32 data bits, giving the possibility to correct all single errors (SEC), detect all double errors (DED) and detect any memory chip failure (SBD), with a 4 or 8 bit per chip organization. Generally, SEC-DED-SBD require more check bits than the number of bits per chip. However, assuming all chip errors (but not the bit errors) to be permanent, the implemented (40,32) and (24,16) codes can be used to obtain SEC-DED-SBD for a 8 bit per chip organization. For a memory having 4 bits per chip, the codes are true SEC-DED-SBD. The codes are constructed by. Adding extra check bits to a reorganization of ordinary odd weight column SEC-DED codes. The extra check bits are considered not to require any extra memory, since the number of memory chips needed are the same for 22 as for 24 (39 as for 40) bits, when the organization is by 4 or by 8</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00534630.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>aerospace computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error correction codes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error detection codes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>microprocessor chips</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>space research</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00535879">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Mitigating operator-induced unavailability by matching imprecise queries</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-efea3d81f57752780c9514402e5ef97b-5d1f6c75fdb7c221fee93589407fee85">
        <akt:full-name>R.A. Maxion</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7c5947ccb2806b7a3a29e78f6ab05e04-6202dd4a2ef544399b6b9c92c1f03e76">
        <akt:full-name>P.A. Syme</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>In addition to equipment faults, human error is now recognized as a major cause of computer system unavailability. This paper considers one aspect of human error in critical situations-the inability of operators to retrieve and understand documentation needed for system diagnosis and repair. When technical information vital to recovery is missing, difficult to locate or inaccessible, downtime is lengthened, costs rise, and productivity falls. Finding the right information at the right time is complicated by the ambiguities of natural-language queries when seeking documentation or maintenance information. While the human information processor has the means for resolving ambiguities in language, computers do not. Hence, a key issue in downtime problem resolution is imprecision in human vocabulary. The vocabulary problem can be addressed through statistical mapping of user queries into databases of frequently-asked questions. This technique has been validated empirically, and shown to be effective in achieving correct mappings in 99% of cases tested; it is substantially better than keyword mapping, especially as syntactic and lexical differences grow. When information seeking is accelerated by this technique, downtime can be reduced</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00535879.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computational linguistics</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>help systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>human factors</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>natural language interfaces</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>query processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system documentation</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00535880">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
        <support:year-of>1996</support:year-of>
        <support:has-pretty-name>1996</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Hardware-efficient and highly-reconfigurable 4- and 2-track fault-tolerant designs for mesh-connected multicomputers</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-75698c651a052d9e7446bbac5175f569-9b101fc3613732f0a1349f56f7f2da60">
        <akt:full-name>N.R. Mahapatra</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d750dc101814879e91ac33b3842e6725-16daac8bde00f828a9030c49a04118fb">
        <akt:full-name>S. Dutt</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We consider m-track models for constructing fault-tolerant (FT) mesh systems which have one primary and m spare tracks per row and column, switches at the intersection of these tracks, and spare processors at the boundaries. A faulty system is reconfigured by finding for each fault u a reconfiguration path from the fault to a spare in which starting from the fault u, a processor is replaced or "covered" by the nearest "available" succeeding processor on the path-a processor on the path is not available if it is faulty or is used as a "cover" on some other reconfiguration path. In previous work, a 1-track design that can support any set of node-disjoint straight reconfiguration paths, and a more reliable 3-track design that can support any set of node-disjoint rectilinear reconfiguration paths have been proposed. In this paper; we present: (1) A fundamental result regarding the universality of simple "one-to-one switches" in m-track 2-D mesh designs in terms of their reconfigurabilities. (2) A 4-track mesh design that can support any set of edge-disjoint (a much less restrictive criterion than node-disjointness) rectilinear reconfiguration paths, and that has 34% less switching overhead and significantly higher actually close-to-optimal, reconfigurability compared to the previously proposed 3-track design. (3) A new 2-track design derived from the above 4-track design that we show can support the same set of reconfiguration paths as the preview 3-track design but with 33% less wiring overhead. (4) Results on the deterministic fault tolerance capabilities (the number of faults guaranteed reconfigurable) of our 4- and 2-track designs, and the previously proposed 1- and 3-track designs</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-11109" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1996</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=11109</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1996'>
            <support:year-of>1996</support:year-of>
            <support:has-pretty-name>1996</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/3791/11109/00535880.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer network reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessor interconnection networks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel architectures</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reconfigurable architectures</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627303">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Application transparent fault management in fault tolerant Mach</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8211bedaa3ab9bc7e9dc3ce09c20f458-135cc1c2cb50f24e151ba62311b30a28">
        <akt:full-name>M. Russinovich</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7bc6c82a0ddaf8edd9e7781035cb9d5d-135cc1c2cb50f24e151ba62311b30a28">
        <akt:full-name>Z. Segall</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-97a44c315ec79ba478d4a8d9de226e97-135cc1c2cb50f24e151ba62311b30a28">
        <akt:full-name>D.P. Siewiorek</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A general purpose operating system fault management mechanism, the sentry, has been defined and implemented for the Mach 3.0 microkernel running a UNIX 4.3 BSD server. The value of a mechanism in the operating system domain is usually judged by two criteria: the suitability of the mechanism to support a wide range of policies and the performance cost of the mechanism. Similarly, in fault detection and recovery there are a relatively large number of strategies which can be mapped onto mechanisms and policies for fault tolerance. To highlight the properties of the sentry mechanism for fault management, the suitability and performance of the proposed mechanism are being evaluated for sample fault detection policies and for sample fault recovery policies. In the fault detection domain use of the mechanism to support assertion type policy is presented and evaluated through an example. Two recovery policies have been chosen and evaluated: checkpoint/restart and checkpoint/restart/journaling</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627303.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>operating system kernels</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627304">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Faults, symptoms, and software fault tolerance in the Tandem GUARDIAN90 operating system</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f078f8f9a3863b7bbcfe9760e54a5da2-357dad94743413d03cd73d9f79e93a6e">
        <akt:full-name>I. Lee</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6122ee67de7692816e4883ba5ebf39cb-2aab8e417d51bd4f0813e7ec286282e9">
        <akt:full-name>R.K. Iyer</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors present a measurement-based study of software failures and recovery in the Tandem GUARDIAN90 operating system using a collection of memory dump analyses of field software failures. They identify the effects of software faults on the processor state and trace the propagation of the effects to other areas of the system. They also evaluate the role of the defensive programming techniques and the software fault tolerance of the process pair mechanism implemented in the Tandem system. Results show that the Tandem system tolerates nearly 82% of reported field software faults, thus demonstrating the effectiveness of the system against software faults. Consistency checks made by the operating system detect 52% of software problems and prevent any error propagation in 31% of software problems. Results also show that 72% of reported field software failures are recurrences of known software faults and 70% of the recurrence groups have identical characteristics</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627304.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627305">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Increasing system availability through on-line software version change</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e04ce6b26fe8aa3e54a062cf9f137daa-0af37e9664f176b9610a442c35231b33">
        <akt:full-name>D. Gupta</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e4f1248bf453a8b486ca456869eb9d9f-0af37e9664f176b9610a442c35231b33">
        <akt:full-name>P. Jalote</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The usual way of installing a new version of a software is to shut down the running program and then installing the new version. This necessitates a delay during which service is denied to the users of the software, and has the effect of reducing the overall availability of the system. An online software replacement system replaces parts of the software while it is in execution, thereby eliminating shutdown of the software and increasing the availability of the system. The authors describe an approach for performing online version change and a system for online software version change that implements that approach. In the proposed method, for performing an online change, the system creates a new process with the new version of the software, and monitors the execution of the old version. When certain conditions are met, it transfers the state of the old process and the control to the new process, thereby affecting the change. The user sees a minimal delay in this switchover. The system has been implemented for C programs on a Sun workstation</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627305.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>software management</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627306">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fast simulation of steady-state availability in non-Markovian highly dependable systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a3ef6a802909479f76c7c70800005683-e6989c2d260cb63aa18507bdd798d338">
        <akt:full-name>V.F. Nicola</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c5a6a216297ccdda26f84546daf5f320-1c38f1cd4504c98e3eaa1936558f5e2d">
        <akt:full-name>P. Shahabuddin</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c18b991d80909f5af2c994ff570572d5-e6989c2d260cb63aa18507bdd798d338">
        <akt:full-name>P. Heidelberger</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2d45d606e9c0bebd6d727815452e2b23-e6989c2d260cb63aa18507bdd798d338">
        <akt:full-name>P. Glynn</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Efficient simulation techniques for estimating steady-state quantities in models of highly dependable computing systems with general component failure and repair time distributions are considered. Earlier approaches in this application setting for steady-state estimation rely on the regenerative method of simulation, which an be used when the failure time distributions are exponentially distributed. However, when the failure times are generally distributed the regenerative structure is lost and a new approach must be taken. The approach the authors take is to exploit a ratio representation for steady-state quantities in terms of cycles that are no longer independent and identically distributed. A splitting technique is used in which importance sampling is used to speed up the simulation of rare system failure events during a cycle, and standard simulation is used to estimate the expected cycle length. Experimental results show that the method is effective in practice</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627306.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627307">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Interval availability distribution computation</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2f4b3d994f3799d9bc74663d6384188f-7bd7ea940b2977dd76964a4f6f8dd63d">
        <akt:full-name>G. Rubino</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4966c569de84abce5586520da3e0c08e-7bd7ea940b2977dd76964a4f6f8dd63d">
        <akt:full-name>B. Sericola</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Interval availability is a dependability measure defined by the fraction of time during which a system is in operation over a finite observation period. The computation of its distribution allows the user to ensure that the probability that a system will achieve a given availability level is high enough. As usual, the system is assumed to be modeled by a finite Markov process. The authors propose two new algorithms to compute this measure and compare them with respect of the input parameters of the model, both through the storage requirement and the execution time points of view. It is shown that one of them is an improvement of a well-known one. Both algorithms are based on the uniformization technique</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627307.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627308">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Characterizing a lumping heuristic for a Markov network reliability model</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-89e7f505a823e96ace9b3f5550e28388-18bfdb9cf49f6af2545c2d41cb6b24d1">
        <akt:full-name>M. Balakrishnan</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-dac33b79bc2585e0005484e5f543695b-f0eaf2828ff8ad373ffd56c07b675bee">
        <akt:full-name>A. Reibman</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Network reliability models are plagued by large state spaces. When combinatorial models are inapplicable, Markov models are generally used to evaluate network reliability. Standard numerical methods of Markov chain solution are not applicable due to the size of the state space. Alternate solution methods through state space reduction by lumping or a solution by simulation are required. The authors characterize a lumping heuristic which derives a smaller Markov model from the original Markov reliability model for a network with an alternate-routing capability and link repair facility. In an empirical evaluation, this heuristic is seen to yield very good approximations: in all the experiments the reliability function obtained by solving the derived Markov chain using a standard Markov solver closely tracked the function obtained through simulation of the original Markov chain over a range of parameters. The theory of lumpability is used to investigate the characteristics of the heuristically constructed Markov chain</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627308.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627309">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Comparison of hybrid modular redundant multiprocessor systems with respect to performabilities</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-adf4a1df71c0aea0377685f66e3c7998-05820287b0f7471f218cc6f48c3efdda">
        <akt:full-name>C. Chen</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-88ebed391c832bd006e6c1d5dd2ace78-05820287b0f7471f218cc6f48c3efdda">
        <akt:full-name>H. Asada</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fb1f86d22e6f999259ead2ed00fc16cc-05820287b0f7471f218cc6f48c3efdda">
        <akt:full-name>Y. Kakuda</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b445b5d5de65a43467fadd701624fc13-05820287b0f7471f218cc6f48c3efdda">
        <akt:full-name>T. Kikuno</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A hybrid modular redundant (HMR) processor consists of VSD (Voter/Switch/Detector) module and computing modules. The authors discuss performability of three typical multiprocessor systems defined using HMR processors: (1) NSMS in which HMR processors share no computing module, (2) CSMS in which HMR processors share all computing modules, and (3) PSMS in which adjacent HMR processors share two computing modules. In order to evaluate reliability, the authors apply a combinatorial approach for NSMS and CSMS. On the other hand, for PSMS they first propose a reconfiguration algorithm, and then construct a layered Markov chain model based on the algorithm. Simulation results show that if VSD modules never fail, then performability of PSMS and CSMS are very high, but NSMS has the worst performability. It is also shown that if VSD modules may fail, then performability of PSMS almost does not change, but performability of CSMS falls down drastically. Therefore, one can conclude that PSMS has both high reliability and high performance with a reasonable cost</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627309.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>multiprocessing systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627310">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The design concepts and operational results of fault-tolerant computer systems for the Shinkansen train control</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5c1704292e493219ffb4a5168e5d3492-144afd0aa053129ff4d08d307a3cf42e">
        <akt:full-name>A. Hachiga</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b5089476e4e207a4d16890a9cdfea9a6-144afd0aa053129ff4d08d307a3cf42e">
        <akt:full-name>K. Akita</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b12e29aa99d19cf4ee2bcb25bd393bdc-144afd0aa053129ff4d08d307a3cf42e">
        <akt:full-name>Y. Hasegawa</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The Shinkansen is a safe, reliable, mass, and rapid public transportation system in Japan. The authors discuss COMTRAC in the Shinkansen. First, they look into the concept and technology of fail-safe in railways. Second, they explain COMTRAC and its fault-tolerant computer systems. Finally, they give several kinds of field data accumulated during the past several years about COMTRAC, which show its improvement in the availability</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627310.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>railways</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627311">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Development of a benchmark to measure system robustness</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4eba2bc7fb235c73aca57ecd0bdbf595-b42c148767c85bbbb0f88e8fa5736fe1">
        <akt:full-name>D.P. Siewiorek</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c0979ff9c5a3ac20248d196176cd2c21-774fe6ffeae5aac5697f6072321dc1ab">
        <akt:full-name>J.J. Hudak</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b4cc599cc15334636a7c87af9ef57559-774fe6ffeae5aac5697f6072321dc1ab">
        <akt:full-name>B.-H. Suh</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2f8c8d39f1019f433450b0ef21b8f0d9-774fe6ffeae5aac5697f6072321dc1ab">
        <akt:full-name>Z. Segal</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>An initial attempt at the development of a set of benchmarks to gauge a system's robustness as measured by its ability to tolerate errors is presented. Due to the large domain of system components whose intolerance to errors can lead to system failure, several primitive benchmarks that can be combined into a robustness benchmark suite are presented. Each primitive benchmark targets a system functionality and measure its behavior given erroneous inputs. Four primitive benchmarks have been implemented in this initial effort. They target the file management system, memory access, user application, and the C library functions. The motivation and experimental results of each of these primitive benchmarks are presented in detail followed by an analysis of the results. A methodology to combine the primitive benchmarks to form an overall robustness figure is presented. A list of additional primitive benchmarks is suggested</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627311.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627312">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The variation of software survival time for different operational input profiles (or why you can wait a long time for a big bug to fail)</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8f82207c85fffe1f619c5aee26a1f6b4-bec5c8605a8f39aa27bf79038c305b6b">
        <akt:full-name>P.G. Bishop</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Experimental and theoretical evidence for the existence of contiguous failure regions in the program input space (blob defects) is provided. For real-time systems where successive input values tend to be similar, blob defects can have a major impact on the software survival time because the failure probability is not constant. For example, with a random walk input sequence, the probability of failure decreases as the time from the last failure increases. It is shown that the key factors affecting the survival time are the input trajectory, the rate of change of the input values, and the surface area of the defect (rather than its volume)</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627312.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627313">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A class of error locating codes for byte-organized memory systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-31f8276351682e93960ef032a2488137-f5384f3cced90f7908f9d307facd7bd5">
        <akt:full-name>E. Fujiwara</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0f4671fafeb5e0586a848edc04d3180d-f5384f3cced90f7908f9d307facd7bd5">
        <akt:full-name>M. Kitakami</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Error locating codes (EL codes), first proposed by J.K. Wolf and B. Elspas (1963), have the potential to be used to identify the faulty module for fault isolation and reconfiguration in fault-tolerant computer systems. A new class of EL codes suitable for memory systems organized with b-bit (b≥2) byte-organized semiconductor memory chips which are mounted on memory cards each having B-bit width is proposed. The proposed linear code, called SbB/EL code, identifies erroneous memory card locations containing a faulty byte-organized chip. Another important linear code proposed in this work, SEC-SbB/EL code, corrects single bit errors induced by alpha particles and, for byte errors, it locates erroneous card positions containing a faulty chip. The design methods of the proposed codes are described, and the decoding hardware and the error detection capabilities are evaluated</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627313.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>error detection codes</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627314">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Unidirectional error control codes</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5ba7587ccd6d340468fb83ea2c4b7e7a-4364fdb68266edb7b0ec9cf7dcb70760">
        <akt:full-name>N.H. Vaidya</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A new class of codes for unidirectional error control is presented. These codes are targeted towards unidirectional errors which affect at most t bits confined at most u bytes of a code word. Such errors are termed t/u-unidirectional errors. t/u-unidirectional error control, in general, requires lesser redundancy as compared to u unidirectional byte error control codes. Codes that are capable of detecting, locating and correcting t/1-unidirectional errors are presented. It is shown that unidirectional error location can be achieved with lesser redundancy as compared to unidirectional error correction. This result is interesting because symmetric error location with linear codes has been previously shown to require as much redundancy as symmetric error correction</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627314.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>error correction codes</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627315">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A proposal for error-tolerating codes</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-af174499f979aa743d8c7640f81387ee-de224b854a78f95f1de4c4ff0a393aa0">
        <akt:full-name>T. Matsubara</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0935b8b1ee338ae56af29740febfa490-de224b854a78f95f1de4c4ff0a393aa0">
        <akt:full-name>Y. Koga</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>An extended concept of error-tolerating codes is presented and some examples of error-tolerating codes are introduced. An erroneous codeword of the proposed error-tolerating code may occur in the codespace; however, in this case, the erroneous codeword is required to be in a defined neighborhood of the original codeword. When no error is detected in a word, the word may differ from the original codeword, but it is trustworthy and can be used in a system without any error-correction or error-recovery procedures. An error-tolerating code is presented as an example. This code can be used for to implement analog-to-digital converting devices which are useful for dependable high-speed real-time control systems</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627315.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>real-time systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627317">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Progressive retry for software error recovery in distributed systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ff3ce6add4115b858c08dfe2272ef770-b8c30eee470137261dd6873194bf945e">
        <akt:full-name>Y.-M. Wang</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8da3e8709afd68db92d6186a1364852c-f589c8a9fd28aa1556f4bd8bdb4932cd">
        <akt:full-name>Y. Huang</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fb38f502674924925e2c4a2e8880d1bc-978117774e048d6deaba362337d7988c">
        <akt:full-name>W.K. Fuchs</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A method of execution retry for bypassing software faults based on checkpointing, rollback, message reordering, and replaying is described. The authors demonstrate how rollback techniques, previously developed for transient hardware failure recovery, can also be used to recover from software errors by exploiting message reordering to bypass software faults. The approach intentionally increases the degree of nondeterminism and the scope of rollback when a previous retry fails. Examples from experience with telecommunications software systems illustrate the benefits of the scheme</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627317.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532639">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Nonblocking and orphan-free message logging protocols</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2fbc9b6502f1d9a66cdcda761fcc4799-ea93cd066f28f30ea1b729a64b1e243e">
        <akt:full-name>L. Alvisi</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7a8b622a0e97fd08edd7e070597e0654-2d28dccabdbe69d5489274b759eb5fe4">
        <akt:full-name>B. Hoppe</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e56bfdf44dee228a81cda2c5fe8d8a6b-538f2fb68213d54a75f3ea6e2aaeda28">
        <akt:full-name>K. Marzullo</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Currently existing message logging protocols demonstrate a classic pessimistic vs. optimistic tradeoff. It is shown that the optimistic-pessimistic tradeoff is not inherent to the problem of message logging. The authors construct a message-logging protocol that has the positive features of both optimistic and pessimistic protocols: the protocol prevents orphans and allows simple failure recovery; however, it requires no blocking in failure-free runs. Furthermore, this protocol does not introduce any additional message overhead as compared to one implemented for a system in which messages may be lost but processes do not crash</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627318.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>protocols</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627319">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Relaxing consistency in recoverable distributed shared memory</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1cb202c4b69e502a460cf7b06f01a77e-d6a28f8f38719962cf22f6fc768d68e2">
        <akt:full-name>B. Janssens</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fb38f502674924925e2c4a2e8880d1bc-978117774e048d6deaba362337d7988c">
        <akt:full-name>W.K. Fuchs</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Relaxed memory consistency models tolerate increased memory access latency in both hardware and software distributed shared memory systems. In recoverable systems, relaxing consistency has the added benefit of reducing the number of checkpoints needed to avoid rollback propagation. The authors introduce new checkpointing algorithms that take advantage of relaxed consistency to reduce the performance overhead of checkpointing. They also introduce a scheme based on lazy relaxed consistency that reduces both checkpointing overhead and the overhead of avoiding error propagation in systems with error latency. They use multiprocessor address traces to evaluate the relaxed consistency approach to checkpointing with distributed shared memory</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627319.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed memory systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627320">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>EXOP (Extended Operation): A new logical fault model for digital circuits</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5842d5907bfb5169ef884ebf560ad04e-31c48571d7e050aaa47a5be0c054d0e7">
        <akt:full-name>I. Pomeranz</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f76b811fa428e2358e9d52dd9a352ba0-3011d44766b8724fa47442cf9b9fd2f8">
        <akt:full-name>S.M. Reddy</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A gate-level fault model for digital circuits is proposed that generalizes previous models and is expected to model defects not included in other fault models. Theoretical discussions and experimental results are presented to show the effectiveness of a test set for the new fault model in achieving very high coverage of commonly used single and multiple faults. It is shown that test generation for this model can be done by a simple reordering of a stuck-at fault test set (possibly repeating some of the stuck-at tests). Reordering is based on defining a graph over the set of all stuck-at tests and finding an Euler cycle in the graph in time which is polynomial in the number of tests</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627320.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>digital circuits</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627321">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Efficient testing of tree circuits</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-585d8a9704b67d80e856c9edf7af591b-f52679f8176b770afd4205314b45c608">
        <akt:full-name>R.S. Blanton</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-16bc99ed51f546c35e3b9addc9eb6c5b-2378817c07b1d343bba6566b285eca04">
        <akt:full-name>J.P. Hayes</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors investigate the testing properties of a class of regular circuits known as trees which include parity circuits, multiplexers, and decoders. Viewing a tree as overlapping one-dimensional arrays makes it possible to extend the testing properties of these arrays to trees. The authors give conditions for individually testing the arrays within a tree with a constant number of tests. Under the best conditions when this can be done, the bound on the number of tests required is proportional to the number of leaf modules in the tree. The authors also present necessary and sufficient conditions for C-testing trees, that is, testing trees of arbitrary size with a constant number of tests. More restrictive conditions are also presented that allow trees to be completely C-tested with the minimum number of tests</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627321.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627322">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A BDD-based algorithm for computation of exact fault detection probabilities</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3684eced89d81e1d2b69193a72de477f-343ca3e5e03e5230934751a586f8d5de">
        <akt:full-name>R. Krieger</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6bd97141e0262ba2a7c2c40d5b92d9dd-6241d66118cfb59b27a91cab0fda07d6">
        <akt:full-name>B. Becker</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-36bebf42931cc6e41842cf2a82028ffd-92f84551f67cfafa8494083ded6eb653">
        <akt:full-name>R. Sinkovic</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Signal and fault detection probabilities are widely used in the area of testing. Due to the computational complexity, in most cases only approximated values are computed. A system called PLATO which allows the computation of the exact values for many combinational circuits is described. The implemented algorithms use the recently developed BDD packages as data structure. Besides the description of the algorithms, attention is given to general problems arising with the use of BDDs as data structure. Some new heuristics are presented to deal with these problems</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627322.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>combinational circuits</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627323">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Detection and discrimination of injected network faults</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-efea3d81f57752780c9514402e5ef97b-5d1f6c75fdb7c221fee93589407fee85">
        <akt:full-name>R.A. Maxion</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3f26266e7091f1d52ca3ce2220e8d20b-dc539d13fb50482bcb68032dabaa5276">
        <akt:full-name>R.T. Olszewski</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Six hundred faults were induced by injection into five live campus networks at Carnegie Mellon University in order to determine whether or not particular network faults have unique signatures as determined by out-of-band monitoring instrumentation. If unique signatures span networks, then the monitoring instrumentation can be used to diagnose network faults, or distinguish among fault classes, without human intervention, using machine-generated diagnostic decision rules. This would be especially useful in large, unmanned systems in which the occurrence of novel or unanticipated faults can be catastrophic. Results indicate that significant accuracy in automated detection and discrimination among fault types can be obtained using anomaly signatures as described</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627323.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>local area networks</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627324">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Software fault injection and its application in distributed systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-98fa11394b4d62274f4f5aeb12414284-33c6fed7ba5d5de8c6dd33819c5b75bc">
        <akt:full-name>H.A. Rosenberg</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6ea265a9e8426b009b111a22d5a346a2-72af3e26a814d9068e0d6db9f66c4696">
        <akt:full-name>K.G. Shin</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors describe a software fault injector (SFI) developed to facilitate the validation of dependability mechanisms on an experimental distributed real-time system called HARTS. SFI introduces a number of extensions to previous work done on fault injection tools. In particular, it allows combinations of fault types to be injected in the nodes of a distributed system. It also allows control of all timing parameters of the injection at each node. A description is given of the features and implementation of SFI. As a demonstration of the utility of SFI, the results of some sample experiments are presented</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627324.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532665">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Simulation of software behavior under hardware faults</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d3db6eb429318e31d6da626b45bf6261-4099117ab08edf209a72f40fb9c0c8b6">
        <akt:full-name>K.K. Goswami</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6122ee67de7692816e4883ba5ebf39cb-4099117ab08edf209a72f40fb9c0c8b6">
        <akt:full-name>R.K. Iyer</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A simulation-based software-model that permits application specific dependability analysis in the early design stages is introduced. The model represents an application program by decomposing it into a graph model consisting of a set of nodes, a set of edges that probabilistically determine the flow from node to node, and a mapping of the nodes to memory. The software model simulates the execution of the program while errors are injected into the program's memory space. The model provides application-dependent parameters such as detection and propagation times and permits evaluation of function on system level error detection and recovery schemes. A case study illustrates the interaction between an application program and two detection schemes. Specifically, Gaussian elimination programs running on a Tandem Integrity S2 system with memory scrubbing are studied. Results from the simulation-based software model are validated with data measured from an actual Tandem Integrity S2 system. Application dependent coverage values obtained with the model are compared with those obtained via traditional schemes that assume uniform or ramp memory access patterns. For the authors' program, some coverage values obtained with the traditional approaches were found to be 100% larger than those obtained with the software model</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627325.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627326">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Estimators for fault tolerance coverage evaluation</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3820994679b359e92472ccd2a5f08e43-95501339b4da38d04035c935b150e48e">
        <akt:full-name>D. Powell</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b1c1eaa031c2f1c41fb0470086d2f749-ee17589e2f4e4807225d09aca7c72844">
        <akt:full-name>E. Martins</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fc69f9dc4d1600f0764ff4e7f8f0bdb1-d4e58035a15283a956f7801f2b782aa3">
        <akt:full-name>J. Arlat</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-950fb0afb6b8f14520cc66c0060fb752-ee17589e2f4e4807225d09aca7c72844">
        <akt:full-name>Y. Crouzet</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The problem of estimating the coverage of a fault tolerance mechanism through statistical processing of observations collected in fault injection experiments is addressed. A formal definition of coverage is given in terms of the fault and activation sets that characterize the input space. Two categories of sampling techniques are considered for coverage estimation: sampling in the whole space and sampling in a space partitioned into classes. The estimators for each technique are compared by means of hypothetical examples. Techniques for early estimations of coverage are then studied. These techniques allow unbiased estimations of coverage to be made before all classes of the sampling space have been tested. Finally, the "no-reply" problem that hampers most practical fault-injection experiments is discussed and an a posteriori stratification technique is proposed that allows the scope of incomplete tests to be widened by accounting for available structural information about the target system</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627326.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627327">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault-tolerant wormhole routing in meshes</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-013608a7ef0066f2348ff027dd5bebad-cdc9793cbe0be17deb50625c29df513d">
        <akt:full-name>C.J. Glass</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9ac85376542a5cf29613b0ea9e6acfb8-cdc9793cbe0be17deb50625c29df513d">
        <akt:full-name>L.M. Ni</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>It is shown how to modify the routing algorithms produced by the turn model to encompass dynamic faults. The authors describe how to modify the negative-first routing algorithm, which the turn model produces for n-dimensional meshes without virtual channels, to make it one-fault tolerant. Simulations of the one-fault-tolerant routing algorithms in a two-dimensional mesh indicate that misrouting increases communication latencies significantly at high throughputs. The conclusion is that misrouting should be used only for increasing the degree of fault tolerance, never for just increasing adaptiveness. Finally, the authors describe how to modify the negative-first routing algorithm to make it (n-1)-fault tolerant for n-dimensional meshes</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627327.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>hypercube networks</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627328">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Designing concurrent checking sorting networks</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d8132d4e707bd35e4e78b69bacbfd67e-e4f4a58b38371212738d6f5ca51bfd84">
        <akt:full-name>K. Kantawala</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-299c571fc147db13b5cd1922b7b173c2-e4f4a58b38371212738d6f5ca51bfd84">
        <akt:full-name>D.L. Tao</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The author's propose two new concurrent error detection (CED) schemes for a class of sorting networks (SNs), e.g., odd-even transposition, bitonic, and perfect shuffle SNs. They propose a CED scheme by which all errors caused by single faults in a concurrent checking SN can be detected. This scheme is the first one available to use significantly less hardware overhead than duplication without compromising throughput. From this scheme, the authors develop another fault detection scheme which sharply reduces the hardware overhead but still achieves virtually complete fault coverage. In addition, a new design for a checker is provided. This checker is used to check the concurrent checking SN, i.e., the SN as well as itself, during normal operation</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627328.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>error detection</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627329">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Wildcard dimensions, coding theory and fault-tolerant meshes and hypercubes</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b44af22b6352c94fd106ccceea702172-ce59638f097ee47a610b02745abdec1f">
        <akt:full-name>J. Bruck</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-16e039f01327a0ac9e6c6405efe4236b-ce59638f097ee47a610b02745abdec1f">
        <akt:full-name>R. Cypher</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-43e5787f246c3e94d7a3658ec33a2590-ce59638f097ee47a610b02745abdec1f">
        <akt:full-name>C.-T. Ho</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Hypercubes, meshes and tori are well known interconnection networks for parallel computers. The sets of edges in those graphs can be partitioned to dimensions. It is well known that the hypercube can be extended by adding a wildcard dimension resulting in a folded hypercube that has better fault-tolerant and communication capabilities. First the authors prove that the folded hypercube is optimal in the sense that only a single wildcard dimension can be added to the hypercube. They then investigate the idea of adding wildcard dimensions to d-dimensional meshes and tori. Using techniques from error correcting codes they construct d-dimensional meshes and tori with wildcard dimensions. Finally, they show how these constructions can be used to tolerate edge and node faults in mesh and torus networks</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627329.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>encoding</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627330">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Design of neural networks to tolerate the mixture of two types of faults</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-163ffd430b88313f8f6653cf24339835-0d35a03dabdbfa039e577f40161222d8">
        <akt:full-name>Y. Tohma</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f3329e8ad884b14324b1857ac31fc30b-0d35a03dabdbfa039e577f40161222d8">
        <akt:full-name>Y. Koyanagi</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors present a design method of neural networks for optimization problems, which can tolerate the simultaneous existence of both stuck-at-zero and stuck-at-one faults. By using this new design method together with one presented earlier, neural networks can tolerate very well the mixture of the both types of faults as well as unidirectional faults</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627330.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>neural nets</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627331">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Exploiting data flow information in algorithm-based fault tolerance</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2416c44422e9ac9cfffa09d832c1f9e1-56bf0090c321b9d0a4bb7b52a18a18d6">
        <akt:full-name>R. Shamsunder</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ef2a681bcb3131cb996ae0ff966151e4-56bf0090c321b9d0a4bb7b52a18a18d6">
        <akt:full-name>D.J. Rosenkrantz</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-71326bf90d0a5aca59079b32c55a09f0-56bf0090c321b9d0a4bb7b52a18a18d6">
        <akt:full-name>S.S. Ravi</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors examine the use of data flow information in algorithm-based fault tolerance for multiprocessor computations. They show that this information can lead to a more efficient design, by reducing the number of checks. They investigate both the analysis problem of determining the fault tolerance measures of a given system, and the design problem of constructing compact check sets to detect or locate a given number of faults. Specifically, it is shown that the analysis problem can be solved efficiently when the number of faults is fixed. The computational difficulty of this problem when the number of faults is not fixed is addressed. The authors consider the design problem for special classes of data flow graphs and establish upper and lower bounds on the number of checks needed to detect or locate a given number of faults</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627331.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627332">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Tolerance determination for algorithm-based checks using simplified error analysis techniques</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1c9e477d1f3c8c284ec354f63cab0af4-194da23e2012476a100ec951d98c3fe3">
        <akt:full-name>A. Roy-Chowdhury</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-37fa5881bead9f26c4f49dd416f07d79-f364c4a7a3de3591e08829489d8f5e77">
        <akt:full-name>P. Banerjee</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A scheme for dealing with roundoff errors in algorithm-based fault tolerance methods which complicate the check phases of the algorithm is presented. The method is based on error analysis incorporating some simplifications which result in easier derivation of error bounds and more useful error expressions in some cases where the theoretical error bound may be too wide to be of much use as a tolerance in the check phase. The methods are used to derive error bounds for three applications, and it is shown that the fault-tolerant encodings for these applications using the authors error expressions achieve high error coverage and no false alarms for a wide spectrum of data sets at low overheads. The authors contrast their tolerance bound calculation method with an earlier method and show that their method is much more robust. The authors believe that, to be of practical use, algorithm-based fault-tolerance techniques need to pay close attention to the thresholding issue, and they point out that their scheme is the first one which achieves good results across a wide range of data sets</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627332.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>error analysis</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627333">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Optimum Kalman detector/corrector for fault-tolerant linear processing</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-34cf3fa5ca66113061e1f9f8b321b049-8b788852437306cecbbaa54b76b856d6">
        <akt:full-name>R. Redinbo</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Optimum recursive Kalman estimation theory is applied to protect linear processing operations where intermittent hardware failures are detected and corrected using parity values determined by a real convolutional code. The mean-square error in corrected data outputs is optimized. State and parity measurement equations that model faults and computational noise in both the linear processing and parity generation subassemblies are established. First, the optimum Kalman one-step predictor which makes decisions on all parity values up to the present point is determined. This estimator separates naturally into detection and correction operations with correction applied only after detection levels exceed thresholds. Detection operations involve parity recomputations and provide the inputs to the correction subsystem. The one-step predictor results extend to a smoothed Kalman estimator performing detection and correction using parity values beyond the point possibly being corrected. System implementations for recursive Kalman smoothing corrects based on one-step predictors' quantities are presented</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627333.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>Kalman filters</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627334">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A fast and accurate gate-level transient fault simulation environment</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0253d7a9d446ec45fe5270c8703631ee-86cf01f444098114bf727916bdf8cdb5">
        <akt:full-name>H. Cha</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-365d5007beceb2824a648aac094e16b2-86cf01f444098114bf727916bdf8cdb5">
        <akt:full-name>E.M. Rudnick</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6c9dbdab632aedeb0ba17e572839a859-46abcfe3614743115f7786a25835cbed">
        <akt:full-name>G.S. Choi</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6ff95ad97726b9b35b9d314d75335ddc-372682cb0a814d448007c2a8f0d82dee">
        <akt:full-name>J.H. Patel</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3cb9d9c5621884fe516635e78c871482-2d79fc4431419ced7425c3d4110f4a21">
        <akt:full-name>R.K. Iyer</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Mixed analog and digital mode simulators have been available for accurate transient fault simulation. However, they are not fast enough to simulate a large number of transient faults on a relatively large circuit in a reasonable amount of time. The authors describe a gate-level transient fault simulation environment which has been developed based on realistic fault models. The simulation environment uses a timing fault simulator as well as a zero-delay parallel fault simulator. The timing fault simulator uses high level models of the actual transient fault phenomenon and latch operation to accurately propagate the fault effects to the latch outputs, after which point the zero-delay parallel fault simulator is used to speed up the simulation without any loss in accuracy. The simulation environment is demonstrated on ISCAS-89 sequential benchmark circuits</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627334.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>sequential circuits</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627335">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Wear-out simulation environment for VLSI designs</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6c9dbdab632aedeb0ba17e572839a859-46abcfe3614743115f7786a25835cbed">
        <akt:full-name>G.S. Choi</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6122ee67de7692816e4883ba5ebf39cb-0595a62aea3ddb7513d47dfc5fb547a0">
        <akt:full-name>R.K. Iyer</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A simulation-based approach for the reliability prediction of VLSI designs is introduced. The approach combines the switch-level circuit simulation and the device-level Monte Carlo simulation to achieve a realistic reliability assessment. The Monte Carlo analysis makes use of importance sampling to reduce the run lengths. Key advantages of this approach are that it can closely mimic dynamic sequences of events in a device over time, localize the weak locations/aspects of a target chip, and generate time-to-failure (TIF) distribution for an entire VLSI chip. In the current implementation, two common IC failure modes (electromigration and oxide breakdown) are simultaneously simulated under varying operating environments and fabrication technology parameters. In particular, operating voltage, temperature, and the device dimension are varied, and the impact of technology improvements, such as reduced dimension, on reliability is quantified. The use of this environment for developing reliable VLSI systems is illustrated with a case study of a custom-designed microprocessor chip</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627335.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>microprocessor chips</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627336">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Theory and practice of sequential machine testing and testability</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5842d5907bfb5169ef884ebf560ad04e-31c48571d7e050aaa47a5be0c054d0e7">
        <akt:full-name>I. Pomeranz</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f76b811fa428e2358e9d52dd9a352ba0-3011d44766b8724fa47442cf9b9fd2f8">
        <akt:full-name>S.M. Reddy</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6ff95ad97726b9b35b9d314d75335ddc-372682cb0a814d448007c2a8f0d82dee">
        <akt:full-name>J.H. Patel</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Undetectable and redundant faults in synchronous sequential circuits have recently received wide attention. Previous classifications of detectable, undetectable and redundant faults in such circuits assume certain restrictions regarding the operation of the circuit-under-test. In this work, no restrictions are imposed, and faults are classified on the basis of the existence (or lack) of an input/output experiment that distinguishes the fault free and faulty circuits. It is shown that faults that were previously considered redundant are detectable according to the new definitions (detectable in a probabilistic sense). The practical usefulness of the fault classification presented is discussed</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627336.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627337">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Programmable space compaction for BIST</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8be65afa1fd3b970137a3726608d44cd-37f80ff7aedb5c04ed703cd3cf25edf7">
        <akt:full-name>Y. Zorian</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-bf23dfd4d9f1870970861d007a808ef9-37f80ff7aedb5c04ed703cd3cf25edf7">
        <akt:full-name>A. Ivanov</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors address space compaction for built-in self-test (BIST). High quality BIST of modern complex VLSI circuits requires that large numbers of internal nodes be monitored during test. Unfortunately, area limitations typically preclude the association of observation latches for all the nodes of interest in the case where these are very numerous. Consequently, the process known as space compaction is increasingly required. A first contribution here is a taxonomy of test data compaction functions for BIST that uses space, time, memory, linearity, and circuit (functional) specificity as attributes. The major contribution is the introduction of a general class of space compactors called programmable space compactors (PSCs). Programmability enables highly effective space compactors to be designed for circuits under test (CUTs) subjected to a specific set of test patterns. The measures of effectiveness used to assess the PSCs are realizability, e.g., area, and error propagation performance. The authors develop a probabilistic error propagation model and propose a technique for selecting an effective PSC given the expected test data from a CUT and a probabilistic characterization of faulty CUT behaviors</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627337.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>built-in self test</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627338">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Balance testing of logic circuits</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5a17d78bca7610fd23b90880c9153993-7fc3f987489e0090397063bbbb3d294f">
        <akt:full-name>K. Chakrabarty</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-16bc99ed51f546c35e3b9addc9eb6c5b-2378817c07b1d343bba6566b285eca04">
        <akt:full-name>J.P. Hayes</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors propose a new method for testing logic circuits, termed balance testing, which requires no explicit signatures and is particularly attractive for built-in self-testing. It exploits the balance property possessed by many useful Boolean functions: f(X) is balanced if f(X) = 1 for half its input combinations. The authors analyze balance testing by deriving necessary and sufficient conditions for the detectability of single stuck-line, multiple stuck-line, and bridging faults. These conditions help the designer identify individual faults that remain undetected by balance testing. The analysis also obviates the need for error models that are often difficult to validate. Some feasible design techniques to make logic circuits balance testable are demonstrated</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627338.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>logic circuits</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627339">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Algorithmic synthesis of high level tests for data path designs</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4bc54e930e0921531cf9709f006af855-c80626031b601c69ab38a97719b17bea">
        <akt:full-name>N.R. Saxena</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-038edf7fbba646ff0d36a5dc1252102e-c80626031b601c69ab38a97719b17bea">
        <akt:full-name>R. Tangirala</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-836b9e52f35fb1799a6b08e7e4871795-c80626031b601c69ab38a97719b17bea">
        <akt:full-name>A. Srivastava</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Algorithmic techniques are proposed to synthesize design verification programs for high level data path designs that target design defects as well as manufacturing defects. Some categories of design defects are identified. A methodology, based on localized checking experiments, is proposed to synthesize state machine controllers in data path designs that enhance manufacturing defect coverage using design verification programs. Some example designs are considered that demonstrate the effectiveness of the proposed techniques. A heuristic to generate universal tests for manufacturing defect coverage is proposed. This heuristic has been successfully applied for real design implementations of counters, adders, and comparators</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627339.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627340">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Impact of behavioral learning on the compilation of sequential circuit tests</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-469c1b261b0b57239cc636c6100ae1ab-29bc86a097a324f145b4e9e1d14d90ea">
        <akt:full-name>P. Vishakantaiah</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-24e5e3189d5e11cad1446639a088bd5e-61b7bb2e3b6125869187a896e52944a2">
        <akt:full-name>J.A. Abraham</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Learning techniques based on behavioral descriptions of designs are introduced. The information generated using these techniques is reusable not only during the generation of test knowledge for the design, but also during the generation of tests for the design, and hence it is a one-time effort. Results are provided to demonstrate the impact of behavioral learning techniques on the quality of sequential circuit tests generated for modular and hierarchical designs. The design and test knowledge representation schemes, most of which have been introduced in the past, are discussed briefly. The behavioral learning techniques are then introduced. Results obtained for a simple CPU design are discussed</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627340.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>built-in self test</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627341">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>An efficient replication protocol exploiting logical tree structures</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9032024528fc7ff210328b93f89f4148-85f1ac189dccc0df267e8a5041fcf9b1">
        <akt:full-name>H. Koch</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>An efficient approach for managing replicated data and services is presented. The approach is based on the fact that the replicas are organized in a logical tree structure. An algorithm exploiting this structure is developed, leading to a strategy in which at best only a single replica for performing read operations and only O[log n] replicas for executing write operations have to be accessed. The author analyzes cost and availability of the operations and compares the new strategy with other replication strategies in order to show the cases in which the new strategy is superior. Finally, the author presents a hybrid approach which is obtained by combining the new strategy and other replication protocols. The obtained hybrid strategies provide low cost operations and at the same time high operation availabilities</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627341.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>replicated databases</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627342">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Specifying fault tolerance within Stark's formalism</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fce7598d3c4520ef69b0bcbaa140da8f-23525d3ed5c66377fc49e969eb745d24">
        <akt:full-name>A. Cau</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-adaa9020bb2be493011cf03102619248-23525d3ed5c66377fc49e969eb745d24">
        <akt:full-name>W.-P. de Roever</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A general refinement methodology is presented based on ideas of E. Stark, and it is explained how these can be used for the systematic development of fault-tolerant systems. Highlights are: (1) a comprehensive exposition of Stark's temporal logic and development methodology; (2) a formalization of a general systematic approach to the development of fault-tolerant systems, accomplishing increasing degrees of coverage with each successive refinement stage; and (3) a detailed example of a multi-disk system providing stable storage, illustrating this general methodology</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627342.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00532669">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A formally verified algorithm for interactive consistency under a hybrid fault model</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-028bec0122bcda9f022f2fe5519e486d-5915b11e47fb3f942d5de15993cb98ed">
        <akt:full-name>P. Lincoln</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3ea5ba8736fc85cf391da30109a2aa00-79dfc6703a4269986fdc153ec607a57c">
        <akt:full-name>J. Rushby</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>P. Thambidurai and Y.-K. Park (1988) have proposed an algorithm for interactive consistency that retains resilience to the arbitrary (or Byzantine) fault mode, while tolerating more faults of simpler kinds than standard Byzantine-resilient algorithms. Unfortunately, and despite a published proof of correctness, their algorithm is flawed. The authors detected this while undertaking a formal verification of the algorithm. They present a corrected algorithm that has been subjected to mechanically checked formal verification. Because informal proofs seem unreliable in this domain, and the consequences of failure could be catastrophic, the authors believe formal verification should become standard for algorithms intended for safety-critical applications</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627343.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>formal verification</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627344">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Randomized distributed agreement revisited</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-08ac467fe60b855bb04644ed4a74d6be-d844f74857ad1aa1458fa79918efee83">
        <akt:full-name>P. Berman</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ec87999dcda526f2732867acdd439c86-a57edfe59c3a62e8d2896753735827e8">
        <akt:full-name>J.A. Garay</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors present a succint and efficient randomized distributed agreement (DA) protocol for asynchronous networks that works for n &gt; 5t processors, where n is the size of the network. The protocol has low communication complexity (Θ(log n) message size) and does not require any cryptographic assumption. The protocol belongs to the class of protocols that require a "trusted dealer", who is in charge of a suitable network initialization, and represents an improvement in terms of number of processors to some previous solutions. The authors contrast their approach to the class of protocols that are currently able to perform randomized agreement from scratch, an unlimited number of times, but have a communication cost that might be infeasible in many cases</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627344.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>protocols</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627345">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fast, on-line failure recovery in redundant disk arrays</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-54e1355e953b303665a4f9e215edb4ce-94e9d8d8b78f755e7a732a3ad484650f">
        <akt:full-name>M. Holland</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-15893bf4461c7c8f811d052083bc98bd-94e9d8d8b78f755e7a732a3ad484650f">
        <akt:full-name>G.A. Gibson</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4eba2bc7fb235c73aca57ecd0bdbf595-b42c148767c85bbbb0f88e8fa5736fe1">
        <akt:full-name>D.P. Siewiorek</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors describe and evaluate two algorithms for performing online failure recovery (data reconstruction) in redundant disk arrays. An implementation of disk-oriented reconstruction, a data recovery algorithm that allows the reconstruction process to absorb essentially all the disk bandwidth not consumed by the user processes, is presented, and this algorithm is compared to a previous-proposed parallel stripe-oriented approach. The disk-oriented approach yields better overall failure-recovery performance. Performance is evaluated via detailed simulation on two different disk array architectures: the RAID level five organization and the declustered parity organization. The benefits of the disk-oriented algorithm can be achieved using controller or host buffer memory no larger than the size of three disk tracks per disk in the array. The tradeoffs involved in selecting the size of the disk accesses used by the failure recovery process are also investigated</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627345.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>magnetic disc storage</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627346">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Disk array storage system reliability</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-06e039c0a6d376cde6eb899b802b51fb-f923e7404932fac2cfb207d4dd1e10b2">
        <akt:full-name>W.A. Burkhard</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-bebad44d5ad1e85b7119cf25c57b0c7b-f923e7404932fac2cfb207d4dd1e10b2">
        <akt:full-name>J. Menon</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Fault tolerance requirements for near term disk array storage systems are analyzed. The excellent reliability provided by RAID Level five data organization is seen to be insufficient for these systems. The authors consider various alternatives - improved MTBF and MTTR times as well as smaller reliability groups and increased numbers of check disks per group - to obtain the necessary improved reliability. Two data organization schemes based on maximum distance separable error correcting codes are introduced. Several figures of merit are calculated using a standard Markov failure and repair model for these organizations. Based on these results, the multiple check disk approach to improved reliability is an excellent option</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627346.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>magnetic disc storage</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627347">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>An analytic treatment of the reliability and performance of mirrored disk subsystems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-313cac9ffc7034433659c67dbcc9e195-995429d9274e164f99d77291cf787574">
        <akt:full-name>R. Geist</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2a111934fbac2ead56739753abe119c6-3d57674779de0cf4a808f7690a85ef94">
        <akt:full-name>K. Trivedi</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>An analytic model is developed for predicting the performance and reliability of mirrored disk subsystems. The model includes Markovian dependencies in the request stream, read and write traffic, unit failures, and individual request failures necessitating retries. A workload model is synthesized from measurements and used as example input. Statistical tests verify the Markovian nature of the request stream. The mirrored system is seen to offer substantial enhancement to both system reliability and performance. Server-selection, i.e., which drive to use to serve a read request, is also considered. The standard mirror policy, serve closest, is seen to be sub-optimal. A mechanism for optimal selection is suggested</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627347.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>magnetic disc storage</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627348">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A case for fault-tolerant memory for transaction processing</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d4c6e68c44880ad8c14c67d2c7df8204-3c0582e4a83633546dcb2eb198851aa9">
        <akt:full-name>A. Bhide</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8b578ec5a054cff188587157c5854da5-3c0582e4a83633546dcb2eb198851aa9">
        <akt:full-name>D. Dias</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-11f812eeac904a8c6ec2b8b6e9d8a6c2-3c0582e4a83633546dcb2eb198851aa9">
        <akt:full-name>N. Halim</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6112c6b2332a86769cca23d7fff03dbe-3c0582e4a83633546dcb2eb198851aa9">
        <akt:full-name>B. Smith</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9f32dc799e68a71f35bed69aa66ed414-3c0582e4a83633546dcb2eb198851aa9">
        <akt:full-name>F. Parr</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>For database transaction processing, the authors compare the relative price-performance of storing data in volatile memory (V-mem), fault-tolerant non-volatile memory (FT-mem), and disk. First, they extend Gray's five-minute rule, which compares the relative cost of storing data in volatile memory as against disk for read-only data, to read-write data. Second, they show that because of additional write overhead, FT-mem has a higher advantage over V-mem than previously thought. Previous studies comparing volatile and non-volatile memories have focused on the response time advantages of putting log data in non-volatile memory. The authors show that there is a direct reduction in disk I/O, which leads to a much larger savings in cost using an FT-mem buffer. Third, the five-minute model is a simple model that assumes knowledge of inter-access times for data items. The authors present a more realistic model that assumes an LRU buffer management policy. They combine this with the recovery time constraint and study the resulting price-performance. It is shown that the use of an FT-mem buffer can lead to a significant benefit in terms of overall price-performance</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627348.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627349">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Efficient distributed diagnosis in the presence of random faults</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7f586971c0f37d7e87085d8b2364b014-0a40e69b320f49cf4eba5ed42d038fad">
        <akt:full-name>A. Pelc</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A probabilistic setting for distributed system-level diagnosis is studied. Processors in a multiprocessor system fail independently with constant probability 0 &lt; p &lt; 1/2. They can test their neighbors and a fault-free processor has probability 0 &lt; q &lt; 1 of detecting a fault of a failed processor in a single test. The aim of distributed diagnosis is for every fault-free processor to know the status of every other processor. This is achieved by communicating test results throughout the system. Faulty processors can behave arbitrarily, even maliciously, both as testers and as message transmitters. The author proposes a diagnosis scheme using O(n) time, O(n log n) tests, O(n2 ) message bits and working correctly with probability converging to 1, as n grows. It is shown that each of these three characteristics has the lowest possible order of magnitude</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627349.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>multiprocessing systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627350">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Distributed on-line diagnosis in the presence of arbitrary faults</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-11e3bf32d0b5cf588b14643f841495f8-3ac40cfbe8e9123dfc517f79c10cbd50">
        <akt:full-name>R.W. Buskens</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5d5ac08c93b6ddd3df7ec2258fd1e912-467e83ecf903ef9675ea8be41746ed14">
        <akt:full-name>Jr. Bianchini, R.P.</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>This paper introduces a new fault model for system-level diagnosis and a class of online distributed diagnosis algorithms that operate correctly in the presence of fault nodes that disseminate arbitrarily corrupted diagnostic information. The fault model addresses the practical issue of designing an internode test to cover diagnosis algorithm operation. Since an explicit test to detect arbitrary failures is not practical, evidence of a node's faulty behavior is provided by examining diagnositic messages exchanged by the node. In many practical systems, algorithm overhead using the new fault model is only twice that required for algorithms using the PMC fault model. The key results include a description of the new fault model, the specification of a class of online distributed diagnosis algorithms that use this fault model, and proofs of their correctness</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627350.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed algorithms</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627351">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Adaptive voting for fault (VFF) node scheme for distributed self-diagnosis</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9bc6da8258193ec69e28f74bad0413bb-2f8d59e68d7009fde677fda14a798288">
        <akt:full-name>J.Y. Lee</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f506307b3f82cb7ea329dc6b12c81f6f-2f8d59e68d7009fde677fda14a798288">
        <akt:full-name>H.Y. Youn</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-cdabf7804eabab18a9dbf9c37a837d5b-2f8d59e68d7009fde677fda14a798288">
        <akt:full-name>A. Singh</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Distributed self-diagnosis has long been proposed to efficiently test multiprocessor and array based systems. Such an approach is also now being considered for testing integrated circuit wafers containing identical circuits. Here the testing is based on a majority voting on the test results from neighboring nodes. The authors identify that the voting for faulty node (VFF) always performs better than the voting for good node (VFG), irrespective of the number of voting cells and fault rate. Based on the VFF approach, an approach to find the optimal number of tests allowing the most accurate test results is proposed. The authors also introduce an adaptive voting scheme by which the time overhead of the traditional voting schemes can be significantly reduced</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627351.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>integrated circuit testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627352">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Design and synthesis for testability of synchronous sequential circuits based on strong-connectivity</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5842d5907bfb5169ef884ebf560ad04e-31c48571d7e050aaa47a5be0c054d0e7">
        <akt:full-name>I. Pomeranz</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f76b811fa428e2358e9d52dd9a352ba0-3011d44766b8724fa47442cf9b9fd2f8">
        <akt:full-name>S.M. Reddy</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The importance of strong-connectivity of the state diagram of a circuit in ensuring testability, specifically, in ensuring that no partially detectable faults exist, is shown. Partially detectable faults are irredundant faults that can be detected only if the circuit-under-test starts from specific initial states. They complicate the test generation and test application processes, and are therefore undesirable. Two methods are proposed to ensure that no partially detectable faults exist, through design for testability and through resynthesis of the circuit. Experimental results are presented for both methods. The incorporation of a redundancy removal procedure into the process of eliminating partially detectable faults, to make a circuit fully testable, is also discussed</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627352.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627353">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A synthesis tool for fault-tolerant finite state machines</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-19880b0321b405429cf25d1030d0de8a-3a4eaecfa0c8ffd291cdc48c34bc05df">
        <akt:full-name>R. Leveugle</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4cc67c803fad75883c306b62c25d6b73-c522e620dc29709a9ed1b45f93a35b79">
        <akt:full-name>R. Rochet</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7f2adbf49afde26b53f35dbf1e6b7292-3a4eaecfa0c8ffd291cdc48c34bc05df">
        <akt:full-name>G. Saucier</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-896504af1a522720337d0294c8bd7ce1-c522e620dc29709a9ed1b45f93a35b79">
        <akt:full-name>L. Martinez</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7181e0c3a5d1ec045875b6b10ff5dbf2-c522e620dc29709a9ed1b45f93a35b79">
        <akt:full-name>C. Pitot</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors present a synthesis tool for FSMs tolerating a single fault in the sequencing logic (next state logic or state register). Two architectures based on the use of SEC codes can be automatically implemented using this tool. The fault-tolerant FSMs can be generated either from a state transition graph specified, for example, in Kiss format or in VHDL, or for designs synthesized, using a control-driven approach, from higher level (e.g., RTL) specifications. The two FSM architectures are briefly presented. Then, the related synthesis flows, the main specific procedures and the synthesis options are described. Results obtained on international benchmark implementations are discussed</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627353.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>finite state machines</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627354">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Optimal self-recovering microarchitecture synthesis</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f92c7e245d017ee469c7d2a00e16fdd4-966ee7715f7dc5fbfdc39b7b104d2546">
        <akt:full-name>R. Karri</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-69f033a9d0ac47e0bbd27f1690551812-966ee7715f7dc5fbfdc39b7b104d2546">
        <akt:full-name>A. Orailoglu</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors propose a novel ILP model for the scheduling problem in self-recovering microarchitecture synthesis. A self-recovering microarchitecture, on detecting a (transient), fault, roll back to a previously known correct state - the checkpoint - and retries the computation. The maximum distance between adjacent checkpoints - the retry period - is determined by the transient fault rate as well as the average lifetime of a transient fault. At a checkpoint, the results of intermediate computations are compared (using voters), and if correct saved in registers. Consequently, associated with each checkpoint, there is a time overhead due to comparison and an area overhead due to the fault-tolerant nature of the voters. The authors formulate time-constrained scheduling as minimizing either the number of voters or the overall hardware, subject to constraints on the number of clock cycles, the retry period, and the number of checkpoints. Moreover, they develop a model for resource-constrained scheduling wherein both the overall system performance as well as the recovery time overhead are optimized subject to hardware constraints</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627354.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627355">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>TTP - A time-triggered protocol for fault-tolerant real-time systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9fb7034cdd709632a2d606810fba119f-72451c225d8092d84942349bc2f70d03">
        <akt:full-name>H. Kopetz</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e858c1f3bb5b46cabe89039cef91a07d-ed619c91e3c655cf25b5fe71327b3005">
        <akt:full-name>G. Grunsteidl</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The Time-Triggered Protocol (TTP), which is intended for use in distributed real-time control applications that require a high dependability and guaranteed timeliness, is discussed. It integrates all services that are required in the design of a fault-tolerant real-time system, such as predictable message transmission, message acknowledgment in group communication, clock synchronization, membership, rapid mode changes, redundancy management, and temporary blackout handling. It supports fault-tolerant configurations with replicated nodes and replicated communication channels. TTP provides these services with a small overhead so it can be used efficiently on twisted pair channels as well as on fiber optic networks</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627355.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>protocols</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627356">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Virtually-synchronous communication based on a weak failure suspector</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-26a1feff1a215dc9086df75cf67bb007-e26dfb2435cb9431ece07d0968714a11">
        <akt:full-name>A. Schiper</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-112a2e2d33bddedf621ff4afdea299b2-e26dfb2435cb9431ece07d0968714a11">
        <akt:full-name>A. Ricciardi</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Failure detectors (or, more accurately, failure suspectors, or FS) appear to be a fundamental service upon which to build fault-tolerant, distributed applications. It is shown that an FS with very weak semantics (i.e. that delivers failure and recovery information in no specific order) suffices to implement virtually synchronous communication (VSC) in an asynchronous system subject to process crash failures and network partitions. The VSC paradigm is particularly useful in asynchronous systems and greatly simplifies building fault-tolerant applications that mask failures by replicating processes. The authors suggest a three-component architecture to implement virtually synchronous communication: (1) at the lowest level, the FS component; on top of it, (2a) a component that defines new views, and (2b) a component that reliably multicasts messages within a view</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627356.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627357">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Early delivery totally ordered multicast in asynchronous environments</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-62494865494502ccbd9f564c0b1b5d0b-0a6da8e5d8ad36fe307f203c46316bf7">
        <akt:full-name>D. Dolev</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-302a5e4770b912d6511cc50fd5f0a76d-2f679bd33488c9ecec1814fe70c189eb">
        <akt:full-name>S. Kramer</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9e0bfcd56578f56476d6e3c169b8ee6b-419c41f4cb79dd82462c8bdcf670caeb">
        <akt:full-name>D. Malki</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors present the construction of a multicast service, called agreed multicast, that guarantees that messages arrive reliably and in the same total-order to all their destinations. ToTo, a novel protocol, implements the agreed multicast service of Transis, a communication subsystem for the High Availability project, currently developed at the Hebrew University of Jerusalem. This service is desired in distributed systems, and supports high level coordination among groups of processes in distributed applications. The ToTo protocol is genuinely symmetric and fairly simple for implementing. It provides early delivery latency, and requires as little as n/2 messages for forming agreement on the order of delivery. Experimental results show up to O(log (n)) speedup over previous protocols, which matches the authors' prediction of the expected speedup. Using the Transis membership service, ToTo can operate in a dynamic environment, and continue to form an agreed total order among the connected machines despite failures and recoveries</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627357.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>protocols</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627358">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Byzantine agreement with a minimum number of messages both in the faultless and worst case</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9803d4b325bf8a545cff949c448797d9-2b6f204cb4778f0ddaca3d87adb9499e">
        <akt:full-name>B. Baum-Waidner</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A known lower bound for the number of messages in the worst case for all synchronous authenticated Byzantine agreement protocols (BAPs) for any t &lt; m is Ω(m + t2). A BAP is given for any t &lt; m which achieves this bound and minimizes the number of messages for the faultless case to m-1. This shows that minimizing the number of messages in the faultless ase can be achieved without an additional amount of messages. If the faultless case is the usual case, a high number of messages will no longer be a counterargument against the employment of BAPs in practice</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627358.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>protocols</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627359">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Efficient memory access checking</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8149c3c3d848c5401a7fdfafae2f9e13-3a85272df354c65dcadd4d62d7a67213">
        <akt:full-name>K.D. Wilken</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5ffaf9be9f9470c81c53576de3dce274-3a85272df354c65dcadd4d62d7a67213">
        <akt:full-name>T. Kong</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A new approach provides efficient concurrent checking of memory accesses using a signature embedded into each instance of a data structure, and using a new LOAD/STORE instruction that reads the data structure signature as a side effect. Software memory-access faults are detectable using this approach, including corrupted pointers, uninitialized pointers, stale pointers, and copy overruns. Hardware memory-access faults are also detectable, including faults in the memory access path and the register file. Instruction scheduling minimizes the cost of the side-effect reads, and signatures are checked with little overhead using the hardware monitor previously proposed for signature monitoring. Benchmark results for the MIPS R3000 executing code scheduled by a modified GNU C Compiler show that an average of 53% of the memory accesses are checked, and that access checking causes an average of less than 5% performance overhead</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627359.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>data structures</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627360">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The risk of data corruption in microprocessor-based systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-68ea57cbcf8a33d7acb6017c2942316a-59d1451fad43a5abdfb47ae9957807df">
        <akt:full-name>R. Horst</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-cfeb5de6e2f5cb28bd8a93b49e0b5d78-59d1451fad43a5abdfb47ae9957807df">
        <akt:full-name>D. Jewett</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-15a822862b8163c9048b97211c3095d2-59d1451fad43a5abdfb47ae9957807df">
        <akt:full-name>D. Lenoski</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Most microprocessor-based systems provide little or no checking for failures of the microprocessor itself. These systems rely on the high reliability of VLSI and the inherent run-time checks (e.g., virtual memory protection and illegal instruction exceptions) to ensure data integrity. The authors present a model for analyzing the vulnerability of systems to undetected data corruptions. The model estimates expected corruption rates based on commercial reliability studies, field experience with fault-tolerant systems, and academic fault-injection studies. They find that without lockstep, an undetected data corruption may occur nearly once per month in a population of 10,000 processors. Given the available data, however, it is difficult to provide tight bounds for the frequency of data integrity violations and the authors' current estimates of the data corruption rate vary by more than two orders of magnitude. Further study on transient failures and the impact of faults is required to narrow the range of the predictions and reduce the overall risk of undetected data corruptions</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627360.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>data integrity</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627361">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Efficient implementations of self-checking adders and ALUs</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7d48505aa96ff117f6606f6a72f25786-58c43b843f8903d4e97bcf8b31e8d4ba">
        <akt:full-name>M. Nicolaidis</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The author presents efficient self-checking implementations for adders and ALUs (ripple carry, carry lookahead, carry skip schemes). Among all the known self-checking adders and ALUs the parity prediction scheme has the advantage to require the minimum overhead for the adder/ALU and the minimum overhead for the other data path blocks. It has also the advantage to be compatible with memory systems checked by parity codes. The drawback of this scheme is that it is not fault secure even for single stuck-at faults. The new designs require lower overhead than the above scheme and also they have all the other advantages of this scheme. In addition the new schemes are strongly fault secure or totally self-checking for a comprehensive fault model which includes stuck-at, stuck-on and stuck open faults. Thus, the new schemes are substantially better than any other known scheme</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627361.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>adders</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627362">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>On concurrent error detection, location, and correction of FFT networks</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-51b1d6fa52c6d6fdb71b734c7e32c796-9f9ce31e63280da64cf7d878eabd5ace">
        <akt:full-name>C.G. Oh</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f506307b3f82cb7ea329dc6b12c81f6f-9f9ce31e63280da64cf7d878eabd5ace">
        <akt:full-name>H.Y. Youn</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Fault tolerance has been a major issue for the VLSI based FFT networks. A new concurrent error detection, location, and correction scheme for FFT networks is proposed. By using an effective checksum scheme, the design allows high throughput as well as high fault coverage. Computer simulation reveals that the fault coverage is 100% with a very small false-alarm rate. The hardware overhead is as small as 1/log2N. A faulty component can also be located by two tries and log2m comparisons of m corrupted outputs. More importantly, the design can correct an error at a small modification of the basic structure. The design is also shown to be easily expanded for multidimensional FFT networks</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627362.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fast Fourier transforms</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627363">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Panel Session On  Limits In Dependability</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b1f7976cad30dd3a4f5c0ec55161bf81-5c3de59ea98c77ce8f741bc8cc53f22b">
        <akt:full-name>J.-C. Laprie</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2fe1b3ffd7410ccb8167b3274e0e803f-10c327d458fa90c14a1457ea8334f013">
        <akt:full-name>G. Le Lann</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a9517b1e1af9d1e16460eb1fb6d8348e-10c327d458fa90c14a1457ea8334f013">
        <akt:full-name>M. Morganti</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627363.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627364">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>AIRBUS A320/A330/A340 electrical flight controls - A family of fault-tolerant systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b0a8a39ebca5379af0af325fb1a91ed2-0f0c224f05e1187f91beff84ebef820e">
        <akt:full-name>D. Briere</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-129c34b3d881b2c97eccd1055bb2983e-0f0c224f05e1187f91beff84ebef820e">
        <akt:full-name>P. Traverse</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The digital electrical flight control system of the Airbus A320/A330/A340 is discussed. The A320 was the first civil aircraft equipped with such a system. It was certified and entered into service in the first quarter of 1988. The A330 and A340 have identical systems, closely related to the A320 system. These systems are built to very stringent dependability requirements both in terms of safety (the systems must not output erroneous signals) and availability. The basic building blocks are fail-safe control and monitoring computers. The control channel performs the function allocated to the computer (control of a control surface for example). The monitoring channel ensures that the control channel operates correctly. A high level of redundancy is built into the system. Special attention has been paid to possible external aggressions. The system is built to tolerate both hardware and software design faults. The A320 system is described together with the significant differences between the A320 and the A330/A340, and A320 in service experience</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627364.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>aircraft control</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627365">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>SACEM: A fault tolerant system for train speed control</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d87090cc86ae7795345c500113d05391-a96bc7bc99ce27accd307f51ceda5d7d">
        <akt:full-name>C. Hennebert</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-cb9bb438895e2f87dd297a05b8e230f6-a96bc7bc99ce27accd307f51ceda5d7d">
        <akt:full-name>G. Guiho</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors give an overview of the SACEM system which controls the train movements on RER A in Paris, which transports daily one million passengers. The various aspects of the dependability of the system are described, including the techniques aimed at insuring safety (online error detection, software validation). Fault tolerance of the onboard-ground compound system is emphasized</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627365.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>rail traffic</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627366">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Concurrent error detection/correction in the HAL MMU chip</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3e6de5feb23c4800b1701742b5ae8236-9c8b37bac9ff69698baaf704149adcd8">
        <akt:full-name>D.C.-W. Chang</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4bc54e930e0921531cf9709f006af855-9c8b37bac9ff69698baaf704149adcd8">
        <akt:full-name>N.R. Saxena</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors describe three concurrent error detection and correction methods used in various address translation tables in the HAL Memory Management Unit (MMU). Virtually indexed and virtually tagged cache architecture is exploited to provide an almost fault-secure hardware coherence mechanism in MMU. Low overhead linear polynomial codes have been chosen in these designs to minimize both the hardware and software instrumentation impact</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627366.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627367">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Use of protocol validation and verification techniques in the design of a fault-tolerant computer architecture</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4dc1b7bcd8d40175ffae954ba289ed46-85674e298017cf1a716a1f6995413714">
        <akt:full-name>W.D. Shambroom</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A fault-tolerant computer architecture has been designed to meet the requirements of applications which require high system availability but can tolerate a short recovery time (limited to a few minutes) in the event of component failure. Critical to the success of this architecture is a heartbeat protocol governing communication between two independent processor subsystems. This protocol, which ensures correct negotiation of a primary/secondary relationship between the two subsystems in the presence of any combination of component failures, has been specified using a finite-state-machine description. The author describes the protocol specification and its validation (for formal correctness) and verification (for functional correctness) using the technique of computerized exhaustive exploration of global system state space</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627367.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>protocols</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627368">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Development of a fault tolerant computer system for the HERMES space shuttle</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6b7b0e1d672698de23f63037d89ab064-1609f90bcb66f9dd3e37e3f55a37ef9c">
        <akt:full-name>P. David</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7f08d85a6bd3849ed154aa922dbc0bd5-1609f90bcb66f9dd3e37e3f55a37ef9c">
        <akt:full-name>C. Guidal</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors present the full tolerant computer system that has been developed and tested by Matra Marconi Space in the framework of European space shuttle HERMES project. This system has been designed to cope with high safety and reliability requirements (FO/FS) and less than 10-6 (for the probability of a catastrophic event induced by a system failure). The system is composed of four tightly synchronized computers running in parallel, with each computer broadcasting its input and output data towards the other computers implementing a fault masking concept based on a bit-to-bit vote. The authors present the major requirements and the rationale that led to the actual architecture. A detailed technical description of the system is provided, addressing functional, hardware, and software aspects. Information about the development activities is given, and the results and lessons learned are discussed</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627368.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>space vehicles</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627369">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A systematic and comprehensive tool for software reliability modeling and measurement</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-70828c69ea34633b1351b9e188437cde-13e2a3a5a75ffc59072ade66de2299a4">
        <akt:full-name>M.R. Lyu</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0e3e49156d09720f414dd9054412f3e2-13e2a3a5a75ffc59072ade66de2299a4">
        <akt:full-name>A.P. Nikora</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6975b47a94cb6388ee916fc4861bb7a9-13e2a3a5a75ffc59072ade66de2299a4">
        <akt:full-name>W.H. Farr</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Sufficient work has been done to demonstrate that software reliability models can be used to monitor reliability growth over a useful range of software development projects. However, due to the lack of appropriate tools, the application of software reliability models as a means for project management is not as widespread as it might be. The existing software reliability modeling and measurement programs are either difficult for a nonspecialist to use, or short of a systematic and comprehensive capability in the software reliability measurement practice. To address the ease-of-use and the capability issues, the authors have prototyped a software reliability modeling tool called CASRE, a Computer-Aided Software Reliability Estimation tool. Implemented with a systematic and comprehensive procedure as its framework, CASRE will encourage more widespread use of software reliability modeling and measurement as a routine practice for software project management. The authors explore the CASRE tool to demonstrate its functionality and capability</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627369.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>software reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627370">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>SoRel: A tool for reliability growth analysis and prediction from statistical failure data</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-086850938f3e3a5b26a289d4d07c1740-cc0e53fc5119a8536cbba116db5a1a11">
        <akt:full-name>K. Kanoun</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-46bf3ee848d088cfc0d9db282e602e4b-bbaa1975a2d032ef0dbaf0fa579a3f93">
        <akt:full-name>M. Kaaniche</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-da9c463f8b783083d7d7e9003db8224f-f2f47e0f42384bcea131998cf8fd6700">
        <akt:full-name>J.-C. Laprie</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b37a405110d504ba810980922c438363-47d97058b4ac66c614904883977c6ee3">
        <akt:full-name>S. Metge</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The authors present a tool for software (and hardware) reliability analysis and evaluation: SoRel. The tool implements a global method for reliability follow up and evaluation in the presence of reliability growth due to design fault removal. SoRel is composed of two parts allowing respectively application of trend tests and reliability growth models. The authors present the method, the trend tests, and the reliability growth models implemented by SoRel, show how these features can help during the validation process, and describe some functionalities of the tool</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627370.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>software reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627371">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The use of object groups to implement dependability in a process control supervision system</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e3ee064a8700f2067842647317fe9412-677c9c9be97cc3bbca908134a6270147">
        <akt:full-name>Y. Eychenne</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f41afa6517986d7245247952510837bd-677c9c9be97cc3bbca908134a6270147">
        <akt:full-name>M. Simatic</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d63daaee745726bc0941256e404855ea-677c9c9be97cc3bbca908134a6270147">
        <akt:full-name>C. Baradel</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ab1cae2b31dadacfa1fd4dfe27ab92f9-677c9c9be97cc3bbca908134a6270147">
        <akt:full-name>L. Junot</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7f2117e6583aa60f7b3548d6ef75f77a-677c9c9be97cc3bbca908134a6270147">
        <akt:full-name>B. Kohen</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Large and dependable process control and supervision systems are a key component of today's integrated computer manufacturing. These systems must offer various levels of quality of service such as scalability, distribution, fault-tolerance and online maintenability. How the concepts of object groups and process groups have been exploited to meet this challenge is discussed. Object groups extend the process group functionalities with an object naming service, a trap in the object messaging for sending messages on the network transparently, and a dispatcher to retrieve the object to which the message received on the network is addressed. The process group concept provides consistent distributed data due to the use of ordered atomic multicasts and group membership management</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627371.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>process control</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627372">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>SURF-2: A program for dependability evaluation of complex hardware and software systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-29c9581633d451eb56f15253fa279631-c8f0c56dd1f297c8ecda95967b256b1f">
        <akt:full-name>C. Beounes</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fe41ec3c978faea20741493283b50c05-e7ae4e7770789af55ce8df89935c2296">
        <akt:full-name>M. Aguera</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fc69f9dc4d1600f0764ff4e7f8f0bdb1-d4e58035a15283a956f7801f2b782aa3">
        <akt:full-name>J. Arlat</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-dbc19a81ef905734eaf0f9bb8271e19c-e7ae4e7770789af55ce8df89935c2296">
        <akt:full-name>S. Bachmann</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0b815b2fe583d73a30a22892dba273e1-e7ae4e7770789af55ce8df89935c2296">
        <akt:full-name>C. Bourdeau</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2668079377740588e0bea1725cf41019-4ff2b70e2ee2edfa494c8307e26c97c4">
        <akt:full-name>J.-E. Doucet</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-086850938f3e3a5b26a289d4d07c1740-cc0e53fc5119a8536cbba116db5a1a11">
        <akt:full-name>K. Kanoun</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-da9c463f8b783083d7d7e9003db8224f-f2f47e0f42384bcea131998cf8fd6700">
        <akt:full-name>J.-C. Laprie</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b37a405110d504ba810980922c438363-47d97058b4ac66c614904883977c6ee3">
        <akt:full-name>S. Metge</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9c208a21454b8fbf0badf3917567e90e-e7ae4e7770789af55ce8df89935c2296">
        <akt:full-name>J. Moreira de Souza</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3820994679b359e92472ccd2a5f08e43-95501339b4da38d04035c935b150e48e">
        <akt:full-name>D. Powell</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-cc80cb712b40bebefa8d5e439803560f-e7ae4e7770789af55ce8df89935c2296">
        <akt:full-name>P. Spiesser</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>SURF-2, a software tool for evaluating system dependability, is described. It is especially designed for an evaluation-based system design approach in which multiple design solutions need to be compared from the dependability viewpoint. System behavior may be modeled either by Markov chains or by generalized stochastic Petri nets. The tool supports the evaluation of different measures of dependability, including pointwise measures, asymptotic measures, mean sojourn times and, by superposing a reward structure on the behavior model, reward measures such as expected performance or cost</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627372.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>software reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627373">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Dependability evaluation using UltraSAN</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-efde8afabe4f82857eab1129fc7713e3-d5a0bb9380986d323688f503db5a1074">
        <akt:full-name>W.H. Sanders</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-dfc5b7aa04d695fee50b4c78f8118a53-e8ef662e3bbf8a1fb19f021a364dbbfd">
        <akt:full-name>II Obal, W.D.</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Dependability evaluation is an important, but difficult, aspect of the design of fault-tolerant computer systems. UltraSAN, a stochastic activity network-based package for model-based performance, dependability, and performability evaluation of such systems, is presented. The package supports solution by both simulation-based and analytic methods. Of particular importance in the evaluation of dependable systems by analytic means is the control of an often explosive state space growth. UltraSAN has the potential to do this, using recently developed reduced base model construction techniques which exploit symmetries inherent in the SAN structure during construction of the underlying stochastic process representation. Four analytic solvers are available: SOR and LU decomposition for steady-state variables, and uniformization for transient instant-of-time and interval-of-time variables. For models with characteristics that preclude analytic solution, transient and steady-state simulation can be used. The use of UltraSAN and reduced base model construction is illustrated by considering the evaluation of a fault-tolerant distributed system. Model generation via an X Windows based graphical interface, stochastic process construction, and model solution, using numerical methods, are illustrated</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627373.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00627374">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
        <support:year-of>1993</support:year-of>
        <support:has-pretty-name>1993</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The FIGARO dependability evaluation workbench in use: Case studies for fault-tolerant computer systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2dca4178f1e631e6fb1c7ba15d4c57a8-8e72e161a43d044dace65fca7e23daef">
        <akt:full-name>M. Bouissou</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The versatility and the power of the FIGARO modeling language, and of the set of tools based on this language, are demonstrated through examples of fault tolerant computer systems evaluations. The FIGARO workbench is described. Applications to communication networks and to the reactor protection system of a nuclear power plant are discussed</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-13650" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1993</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=13650</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1993'>
            <support:year-of>1993</support:year-of>
            <support:has-pretty-name>1993</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/4964/13650/00627374.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689449">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Vision for high-availability of the global infrastructure</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-cb9bfe73f6f41da8f792ce4bbef8d641-4b7e306d7f17a41524a6a67e0d55b0e7">
        <akt:full-name>R. Chillarege</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-68ea57cbcf8a33d7acb6017c2942316a-4b7e306d7f17a41524a6a67e0d55b0e7">
        <akt:full-name>R. Horst</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ed4ec66893cb5bb404a6dc85458721f6-4b7e306d7f17a41524a6a67e0d55b0e7">
        <akt:full-name>C. Meltzer</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a6331d518a02f304635f5dbb573ed0aa-4b7e306d7f17a41524a6a67e0d55b0e7">
        <akt:full-name>A. Pruscino</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c413ad504e9aaab3eeaf67487018a75d-4b7e306d7f17a41524a6a67e0d55b0e7">
        <akt:full-name>D.F. Vrsalovic</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>High availability is critical to the future of the information technology (IT) business. In many ways, it is fundamental to the future of the world economy as we become more reliant on the global infrastructure, Today it is not uncommon to witness losses exceeding ε per hour of outage in many segments of the industry. What is alarming is that there is no articulated vision on how high availability is to be achieved for end-to-end solutions running on the current global infrastructure. The goal of the Industrial Council is to develop a vision for high availability which can cut across many industries</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689449.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>information networks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>information technology</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689450">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A hierarchical approach for dependability analysis of a commercial cache-based RAID storage architecture</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-46bf3ee848d088cfc0d9db282e602e4b-bbaa1975a2d032ef0dbaf0fa579a3f93">
        <akt:full-name>M. Kaaniche</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ec1210df65a409fd8cc6bca553365471-bbaa1975a2d032ef0dbaf0fa579a3f93">
        <akt:full-name>L. Romano</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c37e2f401f62cf30cc00afa521fe7d81-c015027aab916e32fda2200b024be254">
        <akt:full-name>Z. Kalbarczyk</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3cb9d9c5621884fe516635e78c871482-2d79fc4431419ced7425c3d4110f4a21">
        <akt:full-name>R. Iyer</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9306c6ca04a86010328abe9dfaeb819c-bbaa1975a2d032ef0dbaf0fa579a3f93">
        <akt:full-name>R. Karcich</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We present a hierarchical simulation approach for the dependability analysis and evaluation of a highly available commercial cache-based RAID storage system. The architecture is complex and includes several layers of overlapping error detection and recovery mechanisms. Three abstraction levels have been developed to model the cache architecture, cache operations, and error detection and recovery mechanism. The impact of faults and errors occurring in the cache and in the disks is analyzed at each level of the hierarchy. A simulation submodel is associated with each abstraction level. The models have been developed using DEPEND, a simulation-based environment for system-level dependability analysis, which provides facilities to inject faults into a functional behavior model, to simulate error detection and recovery mechanisms, and to evaluate quantitative measures. Several fault models are defined for each submodel to simulate cache component failures, disk failures, transmission errors, and data errors in the cache memory and in the disks. Some of the parameters characterizing fault injection in a given submodel correspond to probabilities evaluated from the simulation of the lower-level submodel. Based on the proposed methodology, we evaluate and analyze: the system behavior under a real workload and high error rate (focusing on error bursts); the coverage of the error detection mechanisms implemented in the system and the error latency distributions; and the accumulation of errors in the cache and in the disks</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689450.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>cache storage</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>magnetic disc storage</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>memory architecture</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>virtual machines</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689451">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Proving correctness of a controller algorithm for the RAID Level 5 System</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-08a0743a88eef3f8e6265425c762714e-e9f1128ec47ac43ef6217df07faadd64">
        <akt:full-name>M. Vaziri</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-81e7864c1c0c568f9584f05f0ce01aca-0082f1e8fa193b35667ffc3bbf29a963">
        <akt:full-name>N. Lynch</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ef88685a4774a7e03e018dc7d36f4f17-e9f1128ec47ac43ef6217df07faadd64">
        <akt:full-name>J. Wing</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Most RAID controllers implemented in industry are complicated and difficult to reason about. This complexity has led to software and hardware systems that are difficult to debug and hard to modify. To overcome this problem Courtright and Gibson (1994) have developed a rapid prototyping framework for RAID architectures which relies on a generic controller algorithm. The designer of a new architecture needs to specify parts of the generic controller algorithm and must justify the validity of the controller algorithm obtained. However the latter task may be difficult due to the concurrency of operations on the disks. This is the reason why it would be useful to provide designers with an automated verification tool tailored specifically for the RAID prototyping system. As a first step towards building such a tool, our approach consists of studying several controller algorithms manually, to determine the key properties that need to be verified. We present the modeling and verification of a controller algorithm for the RAID Level 5 System. We model the system using I/O automata, give an external requirements specification, and prove that the model implements its specification. We use a key invariant to find an error in a controller algorithm for the RAID Level 6 System</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689451.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>automata theory</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>magnetic disc storage</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program verification</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689452">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Practical issues in the use of ABFT and a new failure model</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d755502a9e2fff3e24f2e43744bbbca1-d4bbd7db085d17d0c58986ed2a9d874a">
        <akt:full-name>J.G. Silva</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7a11e128bf80847055bafe30cbc5d180-90884baa821d79609add3d26f3ed5ba7">
        <akt:full-name>P. Prata</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d345f4f4b5a43886b9dedcbfd6d92ea9-90884baa821d79609add3d26f3ed5ba7">
        <akt:full-name>M. Rela</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-35e2107ee35704cefb98fbe26f16ddaa-73e511a5851709337a7400ee2c4db4d8">
        <akt:full-name>H. Madeira</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We study the behavior of algorithm based fault tolerance (ABFT) techniques under faults injected according to a quite general fault model. Besides the problem of roundoff error in floating point arithmetic we identify two further weakpoints, namely lack of protection of data during input and output, and incorrect execution of the correctness checks. We propose the robust ABFT technique to handle those weakpoints. We then generalize it to programs that use assertions, where similar problems arise, leading to the technique of robust assertions, whose effectiveness is shown by fault injection experiments on a realistic control application. With this technique a system follows a new failure model, that we call fail-bounded, where with high probability all results produced are either correct or, if wrong, they are within a certain bound of the correct value, whose exact value depends on the output assertions used. We claim that this failure model is very useful to describe the behavior of many low redundancy systems</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689452.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computerised control</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>floating point arithmetic</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>redundancy</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>roundoff errors</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689453">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>PREACHES-portable recovery and checkpointing in heterogeneous systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ba2b9d1fe9dd68c2e486ab4e95dbd2a0-ae7a5b6e3a3b0fe8ce2ad8953553b733">
        <akt:full-name>Kuo-Feng Ssu</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fb38f502674924925e2c4a2e8880d1bc-978117774e048d6deaba362337d7988c">
        <akt:full-name>W.K. Fuchs</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Checkpointing in a homogeneous environment, where both checkpointing and recovery are performed on the same type of machine and operating system, has been studied extensively. As heterogeneous distributed systems become pervasive, it is desirable to extend the capability of checkpointing to non-homogeneous environments. This paper describes a prototype, PREACHES, that achieves portable checkpointing of single process applications in heterogeneous systems using checkpoint propagation. The checkpoint propagation technique generates machine-dependent checkpoints for each different architecture in the heterogeneous environment. When failure occurs, the failed process can be restarted on a specified machine with the checkpoint that is appropriate for the architecture. An implementation of PREACHES on a heterogeneous network of workstations has been successfully developed based on TCP/IP communication. PREACHES also provides automatic and fast recovery for single process programs</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689453.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>local area networks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software portability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>transport protocols</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689454">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Experimental assessment of workstation failures and their impact on checkpointing systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-628bae06a0529438cf46da51babfb1a6-10b2bde9c93b8f48d63f109b35281cb5">
        <akt:full-name>J.S. Plank</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8a2d26a4d1a408953711329c98dc3ac5-b31362c73de547d9a0b0f399430b2451">
        <akt:full-name>W.R. Elwasif</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>In the past twenty years, there has been a wealth of theoretical research on minimizing the expected running time of a program in the presence of failures by employing checkpointing and rollback recovery. In the same time period, there has been little experimental research to corroborate these results. We study three separate projects that monitor failure in workstation networks. Our goals are twofold. The first is to see how these results correlate with the theoretical results, and the second is to assess their impact on strategies for checkpointing long-running computations on workstations and networks of workstations. A significant result of our work is that although the base assumptions of the theoretical research do not hold, many of the results are still applicable</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689454.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer network reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>local area networks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>workstations</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689455">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>RENEW: a tool for fast and efficient implementation of checkpoint protocols</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-83f759662744558fb171f84582ad601e-77e2d806d3a0ea4f7bf14de86403f291">
        <akt:full-name>N. Neves</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fb38f502674924925e2c4a2e8880d1bc-978117774e048d6deaba362337d7988c">
        <akt:full-name>W.K. Fuchs</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>This paper describes the design, implementation, and evaluation of a run-time system for clusters of workstations that allows the rapid testing of checkpoint protocols with standard benchmarks. To achieve this goal, RENEW provides a flexible set of operations that facilitates the integration of a protocol in the system with reduced programming effort. To support a broad range of applications, RENEW exports, as its external interface, the industry endorsed Message Passing Interface (MPI). Three distinct classes of protocols were evaluated using the RENEW environment with SPEC and NAS benchmarks on a network of workstations connected by ATM. It was observed that the communication-induced protocol emulated the behavior of the coordinated protocol, with comparable performance. The message logging protocol degraded the performance. Even though the message logging protocol was slower due to log replay, all three protocols required a similar amount of time to restore the application to the same state as before failure occurred and recovery was initiated</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689455.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>asynchronous transfer mode</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>local area networks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>message passing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>protocols</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software performance evaluation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689456">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Supporting multiple levels of criticality</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-beb168eba513d11c4ae248755a0e2c2a-3db48e9674b1159c0befd5792c1550e0">
        <akt:full-name>E. Totel</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-540a4746a209f103c2eca1879b973667-3db48e9674b1159c0befd5792c1550e0">
        <akt:full-name>J.-P. Blanquart</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-10143f83db1a0a733b13b398499452ad-1d82b30145e6a43d971a4336f114c8c6">
        <akt:full-name>Y. Deswarte</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3820994679b359e92472ccd2a5f08e43-95501339b4da38d04035c935b150e48e">
        <akt:full-name>D. Powell</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Current safety-critical embedded systems provide support for increasingly diverse and complex tasks, whose levels of criticality can be extremely different. Rather than validating all software to the highest level of confidence, it is more efficient to focus the validation effort on the most critical components. Consequently, it must be ensured that residual design faults in low criticality software cannot corrupt high criticality components. This paper defines an object-oriented integrity policy which ensures that such a property is enforced. Each object is assigned an integrity level related to its criticality. The policy defines rules to access the object methods so that no object can be corrupted by a lower integrity component. Several sorts of objects are accommodated, enabling safety-critical applications to be designed with great flexibility. This is illustrated by a prototype which is implemented on a CORBA-compliant distributed system</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689456.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>object-oriented programming</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program verification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>real-time systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>safety-critical software</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689457">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Conceptual models for the reliability of diverse systems-new results</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7c43158a9e423f7be1a3d60c04c823c8-b002fd7796825a1365ffb65259d17b87">
        <akt:full-name>P. Popov</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a29133344d78b8ad38eaa93ec2ba251a-864d6bd9fb1090e703232cc160f6d41d">
        <akt:full-name>L. Strigini</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We address problems in modelling the reliability of multiple-version software, and present models intended to improve the understanding of the various ways failure dependence between versions can arise. The previous models, by Eckhardt and Lee (1985) and by Littlewood and Miller (1989), described what behaviour could be expected "on average" from a randomly chosen pair of "independently generated" versions. Instead, we address the problem of predicting the reliability of a specific pair of versions. The concept of variation of difficulty between situations to which software may be subject is central to the previous models cited. We show that it has even more far-reaching implications than previously found. In particular, we consider the practical implications of two phenomena: varying probabilities of failure over input sub-domains or operating regimes; and positive correlation between successive executions of control software. Our analysis provides some practical advice for regulators, and useful insight into non-intuitive aspects of the failure process of diverse software</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689457.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>safety-critical software</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689458">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Improving system reliability with automatic fault tree generation</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-da8d263425c1a8f69f427d5b223c30a4-d341e28ea409f278c82e032df3ff1ff5">
        <akt:full-name>P. Liggesmeyer</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8601c27e1a09e639bccab5bba2cdb5c8-d341e28ea409f278c82e032df3ff1ff5">
        <akt:full-name>M. Rothfelder</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Usually, fault tree analyses are performed manually. They are based on documents that describe the system. Considerable knowledge, system insight, and overview is necessary to consider many failure modes, and dependencies between system components and their functionality at a time. Often, the behavior is too complicated to fully comprehend all possible failure consequences. Manual fault tree analysis is error-prone, costly and not necessarily complete. Formal risk analysis, an approach for automatically generating a fault tree from finite state machine-based descriptions of a system, is presented. The generated fault tree is complete with respect to all failures assumed possible. It is the basis for subsequent improvements of the system design and quantitative analysis of safety and liveness requirements in the presence of failures. A case study of formal risk analysis, the automatic generation of a fault tree for all sensor failures of a production cell's elevating rotary table, is discussed</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689458.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault trees</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>finite state machines</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>industrial control</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>safety-critical software</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>sensors</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689459">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Cyber threats</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1beb3c2712c004c1a5bf938ddd58f2e2-d4752f345f3d9e4e8d3e8947efc6b50c">
        <akt:full-name>W. Bartlett</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6f7ce62da46d4cd1da0d4f8f834a15c1-d4752f345f3d9e4e8d3e8947efc6b50c">
        <akt:full-name>P. Ladkin</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ade141ad1d185f3e8d9de97fba2cb155-d4752f345f3d9e4e8d3e8947efc6b50c">
        <akt:full-name>D. Long</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-21757c2767705194600b55ff6b0ef692-d4752f345f3d9e4e8d3e8947efc6b50c">
        <akt:full-name>B. Randell</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>As society becomes more and more dependent on the correct and continuous functioning of communications and information infrastructures, it becomes correspondingly more vulnerable to disruptions in the services that they provide. While much of the responsibility for the health of these infrastructures lies in the hands of their operators, both public and private, their ability to protect them ultimately is constrained by the vulnerabilities of the underlying systems. These vulnerabilities are compounded by the interlinkages among individual pieces of infrastructure. The question being posed to the members of this panel is what we, as part of the public, private and academic community focused on fault tolerance, can and should do to design and build systems that are as capable as possible of detecting and thwarting threats. Do our current approaches to designing for fault tolerance lead to good enough outcomes in handling cyber threats, or should we in some way change how we think about fault tolerance? What are our community's responsibilities in dealing with cyber threats, vs. those of the communities focused directly on security or dependable computing? How should we work with these other communities? We do not expect this panel to yield any definitive answers to these questions. Our goal is to provoke further discussion within our community</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689459.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>security of data</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689460">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The SunSCALR framework for Internet servers</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-11289fa829e36cbe1796e9ff35c618d4-65f643010aa884d41ca0091fa1018bf4">
        <akt:full-name>A. Singhai</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2e0e691f72fe376371ffcccaf7c8aa61-65f643010aa884d41ca0091fa1018bf4">
        <akt:full-name>Swee-Boon Lim</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4f3bdcfcb5b000c5ea41cc1d68d4bf5a-65f643010aa884d41ca0091fa1018bf4">
        <akt:full-name>S.R. Radia</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Internet servers need to be highly-available, inexpensive, and scalable. These goals are often conflicting and most designs meet, with limited success, only few of them. In this paper we describe the SunSCALR framework that achieves these goals by combining proven technologies, careful system design, and engineering trade-offs. It uses a distributed, self-stabilizing algorithm for status monitoring and failure detection, and IP failover for automatic reconfiguration. SunSCALR provides high-availability against message loss, host crashes, and scheduled downtime, and allows on-the-fly addition and removal of hosts. We present detailed performance of SunSCALR. It can provide 10 second failover latency (i.e., better than 99.999% availability if machines fail for 2 hours/month). SunSCALR based products have been in use within Sun and are also available in the market</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689460.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>Internet</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>distributed algorithms</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>file servers</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>resource allocation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system monitoring</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689461">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Design, implementation, and evaluation of highly available distributed call processing systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-bf785ae3bf018489219c41331edabaaa-65224367dcc8fe8f99462c79d0049d1f">
        <akt:full-name>K. Murakami</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-961a9c67b10fcb3e09b85586b6239c90-65224367dcc8fe8f99462c79d0049d1f">
        <akt:full-name>R.W. Buskens</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ce529c65adb56c37f0bd700955142e1d-65224367dcc8fe8f99462c79d0049d1f">
        <akt:full-name>R. Ramjee</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c316aa2ddab39f2651a425fc3da905a3-65224367dcc8fe8f99462c79d0049d1f">
        <akt:full-name>Yow-Jian Lin</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8bcdf082acd065e72fe3038a8557a5d7-65224367dcc8fe8f99462c79d0049d1f">
        <akt:full-name>T.E. LaPorta</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>This paper presents the design of a highly available distributed call processing system and its implementation on a local area network of commercial, off-the-shelf workstations. A major challenge of using off-the-shelf components is meeting the strict performance and availability requirements in place for existing public telecommunications systems in a cost-effective manner. Traditional checkpointing and message logging schemes for general distributed applications are not directly applicable since call processing applications built using these schemes suffer from high failure-free overhead and long recovery delays. We propose an application-level fault-tolerance scheme that takes advantage of general properties of distributed call processing systems to avoid message logging and to limit checkpointing overhead. The proposed scheme, applied to a call processing system for wireless networks, shows average call setup latencies of 180 ms, failover times of less than three seconds, and recovery times of less than seventeen seconds. System availability is estimated to be 0.99995. The results indicate that using our proposed scheme meets the above challenge</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689461.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>network operating systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>wireless LAN</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689462">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>TFT: a software system for application-transparent fault tolerance</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9932f362ad0e52f252af82ae19d72175-184d80aa99a2b4cc4a02c82f19932878">
        <akt:full-name>T.C. Bressoud</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>An important objective of software fault tolerant systems should be to provide a fault-tolerance infrastructure in a manner that minimizes the effort required by the application developer. In the limit, the objective is to provide fault tolerance transparently to the application. TFT, the work presented in this paper, provides transparent fault-tolerance at a higher interface than prior solutions. TFT coordinates replicas at the system call interface, interposing a supervisor agent between the application and the operating system. Moving the replica coordination to this interface allows uncorrelated faults within the operating system and below to be tolerated and also admits the possibility of online operating system and hardware upgrades. To accomplish its task, TFT must enforce a deterministic computation above the system call interface. The potential sources of non-determinism addressed include non-deterministic system calls, delivery of asynchronous events, and the representation of operating system abstractions that differ between replicas</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689462.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>operating system kernels</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689463">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The timed asynchronous distributed system model</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-07824e4560cf42e260dc3aa850485bde-6518924c50f63ce881fdf817a55a127d">
        <akt:full-name>F. Cristian</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-80198a56f4e0171d4b5dddb06b3ab349-c91c503ea1f1dc7660787d62cb345fcf">
        <akt:full-name>C. Fetzer</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We propose a formal definition for the timed asynchronous distributed system model and we describe extensive measurements of actual message and process scheduling delays and hardware clock drifts that confirm that this model adequately describes current distributed systems built from networked workstations</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689463.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>timing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689464">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault-tolerant broadcasts in CAN</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9da383b3fd79aa77a7bf638b2287d6a3-e7e587d00c598354b3445abc26dda40f">
        <akt:full-name>J. Rufino</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b51d8091f5eba400faba77c8520cc157-aad1a89fe90cac126e231d8d1e8a733d">
        <akt:full-name>P. Verissimo</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6a21f09fe460696498c02654ac9ba164-e7e587d00c598354b3445abc26dda40f">
        <akt:full-name>G. Arroz</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-217ecd5bf3a730d3d1dd2345b31a1522-eedfbff761befcc203e424dee803c883">
        <akt:full-name>C. Almeida</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-431e6f4ba0fc9ca66561a3c0dd5e9d24-eedfbff761befcc203e424dee803c883">
        <akt:full-name>L. Rodrigues</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Fault-tolerant distributed systems based on field-buses may take advantage from reliable and atomic broadcast. There is a current belief that CAN native mechanisms provide atomic broadcast. In this paper, we dismiss this misconception, explaining how network errors may lead to: inconsistent message delivery; generation of message duplicates. These errors may occur when faults hit the last two bits of the end of frame delimiter. Although rare, its influence cannot be ignored, for highly fault-tolerant systems. Finally, we give a protocol suite that handles the problem effectively</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689464.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>network operating systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689466">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A technique for automated validation of fault tolerant designs using laser fault injection (LFI)</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7ab7c046049c45b16b21ee11a400a7d2-02b0f8285b85b9aec0fd2c7f6d74138c">
        <akt:full-name>Jr. Samson, J.R.</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0d48f680afe6a86435617e55c176279c-02b0f8285b85b9aec0fd2c7f6d74138c">
        <akt:full-name>W. Moreno</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5e7e648e0c3b82235b075c3010d0dceb-02b0f8285b85b9aec0fd2c7f6d74138c">
        <akt:full-name>F. Falquez</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>This paper describes the successful development and demonstration of a Laser Fault Injection (LFI) technique to inject soft, i.e., transient, faults into VLSI circuits in a precisely-controlled, non-destructive, non-intrusive manner for the purpose of validating fault tolerant design and performance. The technique described in this paper not only enables the validation of fault-tolerant VLSI designs, but it also offers the potential for performing automated testing of board-level and system-level fault tolerant designs including fault tolerant operating system and application software. The paper describes the results of LFI testing performed to date on test metal circuit structures, i.e., ring oscillators, flip-flops, and multiplier chains, and on an advanced RISC processor, with comprehensive on-chip concurrent error detection and instruction retry, in a working single board computer. Relative to rapid, low cost testing and validation of complex fault tolerant designs, with the automated laser system at the Laser Restructuring Facility at the University of South Florida Center for Microelectronics Research (USF/CMR), a design with 10000 test points could be tested and validated in under 17 minutes. In addition to describing the successful demonstration of the technique to date, the paper discusses some of the challenges that still need to be addressed to make the technique a truly practical fault tolerant design validation tool</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689466.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>measurement by laser beam</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>test equipment</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689467">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>MEFISTO-L: a VHDL-based fault injection tool for the experimental assessment of fault tolerance</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-32ac2d2bdadf358bd883adee0e3bb10a-e1b1555caffaee39bf8ef68a3489a012">
        <akt:full-name>J. Boue</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6a44be83ef8a3286ccf92cbfae14976d-e1b1555caffaee39bf8ef68a3489a012">
        <akt:full-name>P. Petillon</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-950fb0afb6b8f14520cc66c0060fb752-ee17589e2f4e4807225d09aca7c72844">
        <akt:full-name>Y. Crouzet</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The early assessment of the adequacy of fault tolerance mechanisms (FTMs), and the subsequent removal of fault tolerance deficiency faults (ftd-faults), are essential tasks in the design process of dependable computer systems. The paper is centered on the description and application of the features of MEFISTO-L, the fault injection tool for VHDL models, being developed at LAAS for supporting the strategy that we have proposed for testing FTMs. The paper first describes the overall testing framework in which MEFISTO-L is incorporated. The main guidelines for the design of MEFISTO-L and its objectives, attributes, implementation and use are then described. Special attention is given to the main original and innovative features: i) the embedded VHDL code analyzer, ii) the observation and injection mechanisms, iii) their synchronization, and iv) their automatic placement in the target VHDL model</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689467.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>circuit reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>circuit testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>hardware description languages</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689468">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Strong partitioning protocol for a multiprocessor VME system</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-31d6539765bfc6cc026ac61ef3e926b6-3a566913f377718fc8d7d741d825f403">
        <akt:full-name>M.F. Younis</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1c9ef18b06b1445b81d4dcfc46c4aad5-3a566913f377718fc8d7d741d825f403">
        <akt:full-name>J.X. Zhou</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9769eb9b609183d524e1550e7bd9801e-3a566913f377718fc8d7d741d825f403">
        <akt:full-name>M. Aboutabl</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The trend in implementing today's embedded applications is toward the use of commercial-off-the-shelf open architecture. Reducing costs and facilitating systems integration are among the motives for that trend. The use of the VME bus becomes very common in many industrial applications. The VME bus attracts developers with its rigorous specifications, multiprocessing support and boards availability through multiple vendors. However, VME bus standard supports multiprocessing through shared memory, which does not impose strong function partitioning and allows fault propagation from one board to another. Such weakness limits the use of the VME bus in highly critical applications such as avionics. This paper presents techniques for strong partitioning of multiprocessor applications that maintains fault containment on the VME bus. The suggested techniques do not require any modification in the standard and the existing boards, and consequently maintains the plug-and-play advantage of the VME bus hardware products. The techniques are equally applicable to other tightly coupled multiprocessor systems. In addition, the paper describes the implementation of these techniques and reports performance results. Finally, the benefits of this technology for a space vehicle and commercial avionics are discussed</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689468.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>shared memory systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system buses</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>transport protocols</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689469">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault-tolerant communication algorithms in toroidal networks</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-519e724f79938dad685a73ec99510d8a-62782ceba99a06bfb79b3a31e2ef900b">
        <akt:full-name>B. Almohammad</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a0392234f049693b1fedb025d91a345a-ae627ebbf8f37687b7f75087685a7fc7">
        <akt:full-name>B. Bose</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Non-redundant fault-tolerant communication algorithms for faulty k-ary n-cubes are introduced. These include: one-to-all broadcasting, all-to-all broadcasting, one-to-all personalized communication and all-to-all personalized communication. Each of these algorithms can tolerate up to (2n-2) node failures provided that k&gt;(2n-2) and k&gt;3. The communication complexities of the proposed algorithms are derived when cut-through or store-and-forward packet routing is used. The proposed algorithms are close to optimal in terms of communication time</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689469.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>broadcasting</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>communication complexity</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessor interconnection networks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>packet switching</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>telecommunication network routing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689470">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault detection and recovery coverage improvement by clock synchronized duplicated systems with optimal time diversity</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f160e933c1ee29f8b6fa2ff17ec988e6-ec312d0b3984850f500ccb0d11f553ab">
        <akt:full-name>N. Kanekawa</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-98055364e06135566552fe97572bf4c8-ec312d0b3984850f500ccb0d11f553ab">
        <akt:full-name>T. Meguro</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-49f0afb996fc1409ac0168751ca14b3f-ec312d0b3984850f500ccb0d11f553ab">
        <akt:full-name>K. Isono</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a1a7889d4136bfebbb4851a1ba9744d6-ec312d0b3984850f500ccb0d11f553ab">
        <akt:full-name>Y. Shima</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-472738d335418b9630c83740f8e3f530-ec312d0b3984850f500ccb0d11f553ab">
        <akt:full-name>N. Miyazaki</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a761a18bc1092792378d72ead1b34efb-ec312d0b3984850f500ccb0d11f553ab">
        <akt:full-name>S. Yamaguchi</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Fast fault detection and recovery are indispensable to improve the availability of fail-safe and fault-tolerant systems. Fast fault detection and recovery can be realized by clock-synchronized duplicated systems with optimal time diversity, which have fast fault detection and recovery features. The experiments presented in this paper compare fault detection coverage and retry recovery coverage of a clock-synchronized system without optimal time diversity, a clock-synchronized system with optimal time diversity, and an I/O synchronized system. The experimental results show that clock-synchronized systems with optimal time diversity realize the highest fault detection and recovery coverage</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689470.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>clocks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault diagnosis</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>optimisation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>synchronisation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689471">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault tolerance via N-modular software redundancy</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-70eb6ad1667c7dfd4ea7f94c61b12020-34f4fcbb9279aaa7fb34ad000c716f3d">
        <akt:full-name>T. Tsai</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Presents a novel method of "indirect" software instrumentation to achieve fault tolerance at the application level. Error detection and recovery are based on the well-known approach of replicating application processes on multiple computers in a network. The advantages of this fault tolerance scheme based on indirect instrumentation include: (1) a general error detection method that ensures data integrity for critical data without the need for any modification of the code, (2) a high degree of automation and transparency for fault-tolerant configuration and operation (i.e. the set-up time for a new application is on the order of a few minutes), and (3) the ability to perform error detection for applications for which no source code or only minimal knowledge of the code is available, including legacy applications. The types of faults that are tolerated include transient and permanent hardware faults on a single machine and certain types of application and operating system software faults</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689471.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>data integrity</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error detection</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>operating systems (computers)</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>redundancy</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689472">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Communication-induced determination of consistent snapshots</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9cbce8eb3f730250ce9907ca31719f3a-850d1e1f1fae297ec0d20ceb6c8c8171">
        <akt:full-name>J.-M. Helary</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-17ffeb6581bcb6634292e666e2483cba-1429544519389f63e31b81e3d864cbe2">
        <akt:full-name>A. Mostefaoui</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e70abfd4a2de3ea878b60e6bfa9ab646-ab5af00f0d6b1ec3e6eec9657956e495">
        <akt:full-name>M. Raynal</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A classical way to determine consistent snapshots consists in using Chandy-Lamport's (1985) algorithm. This algorithm relies on specific control messages that allow processes to synchronize local checkpoint determination and message recording in order that the resulting snapshot is consistent. This paper investigates a communication-induced approach to determine consistent snapshots. In such an approach, control information is carried by application messages. Two abstract necessary and sufficient conditions are stated: one associated with global checkpoint consistency, the other associated with message recording. A general protocol is derived from these abstract conditions. Actually, this general protocol can be instantiated in distinct ways, giving rise to a family of communication-induced snapshot protocols. This general protocol shows there is an intrinsic tradeoff between the number of forced checkpoints and the number of recorded messages. Finally, a particular instantiation of the general protocol is provided</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689472.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>data recording</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>message passing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>protocols</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>synchronisation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>transaction processing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689473">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Avoiding the babbling-idiot failure in a time-triggered communication system</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6c1a3c8d148f62c1b32996cf8e391efe-658c2b6df3e013528c860e58696558fc">
        <akt:full-name>C. Temple</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>In a distributed hard real-time system based on a broadcast bus for inter-node communication, it is important to prevent a single faulty node from monopolizing the communication bus. In a time-triggered system, in which messages are broadcast according to a pre-determined transmission pattern, this kind of failure is characterized by the faulty node transmitting messages at arbitrary points in time, thus corrupting the transmissions on the bus. This type of failure is known as the babbling-idiot failure. Within the presented approach, a special device, the bus guardian, is added to each node to protect the communication bus from the babbling-idiot failure. The regular transmission pattern of a time-triggered system is exploited in order to enforce a fail-silent behaviour of the node in the time domain. The paper describes the requirements imposed on the bus guardian to enforce fail-silent behaviour of the node. The mechanisms of the bus guardian are presented, along with the node architecture necessary for implementing the presented technique</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689473.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>broadcasting</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error detection</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>real-time systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>telecommunication equipment</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>telecommunication networks</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689474">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Automated robustness testing of off-the-shelf software components</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9a867dab58d8c791cd0977af596112ce-09c3ae9b05260241193a8c5e0986fe31">
        <akt:full-name>N.P. Kropp</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ee984bc2e93f468da70bd9f92ef9fa69-b9a26b8c724e33c1b66d64c394533930">
        <akt:full-name>P.J. Koopman</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4eba2bc7fb235c73aca57ecd0bdbf595-b42c148767c85bbbb0f88e8fa5736fe1">
        <akt:full-name>D.P. Siewiorek</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Mission-critical system designers may have to use a commercial off-the-shelf (COTS) approach to reduce costs and shorten development time, even though COTS software components may not specifically be designed for robust operation. Automated testing can assess component robustness without sacrificing the advantages of a COTS approach. This paper describes the Ballista methodology for scalable, portable, automated robustness testing of component interfaces. An object-oriented approach based on parameter data types rather than component functionality essentially eliminates the need for function-specific test scaffolding. A full-scale implementation that automatically tests the robustness of 233 operating system software components has been ported to ten POSIX systems. Between 42% and 63% of components tested had robustness problems, with a normalized failure rate ranging from 10% to 23% of tests conducted. Robustness testing could be used by developers to measure and improve robustness, or by consumers to compare the robustness of competing COTS component libraries</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689474.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>Unix</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>automatic test software</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>object-oriented programming</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>safety-critical software</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software libraries</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software packages</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software portability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>subroutines</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689475">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>How fail-stop are faulty programs?</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5e66e9c239d92b8ab9caebe3fb99b696-ad5d99c6a3922393c3def05f6ab2389d">
        <akt:full-name>S. Chandra</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9ba7a0566bf610e012446bce6b2efbb8-ad5d99c6a3922393c3def05f6ab2389d">
        <akt:full-name>P.M. Chen</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Most fault-tolerant systems are designed to stop faulty programs before they write permanent data or communicate with other processes. This property (halt-on-failure) forms the core of the fail-stop model. Unfortunately, little experimental data exists on whether or not program failures follow the fail-stop model. This paper describes a tool, based on the SimOS complete-machine simulator that can trace how faults propagate through memory, disk, and functions. Using this tool on the Postgres database system, we conduct a controlled experiment to measure how often faulty programs violate the fail-stop model. We find that a significant number of faults (7%) violate the fail-stop model by writing incorrect data to stable storage before halting. We then apply Postgres' transaction mechanism to undo recent changes before a crash and find that transactions reduce fail-stop violations by a factor of 3</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689475.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>relational databases</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>transaction processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>virtual machines</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689476">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Optimal replica control protocols exhibit symmetric operation availabilities</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-85ccecebb5283fd9e82a66a130403256-9fab9fe373676f1a650e9c9d4ecf10c5">
        <akt:full-name>O. Theel</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-333a6186e5230fde8e7a50bdd10181f2-9fab9fe373676f1a650e9c9d4ecf10c5">
        <akt:full-name>H. Pagnia</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Replicating data in a distributed system is a suitable means for increasing the availability as well as the performance of data access operations. Unfortunately, there exists a trade-off between these two properties: a replica control protocol which exhibits, e.g., a high read availability and low read operation costs usually suffers from low write availability and high write operation costs. This trade-off is visible for protocols like Weighted Voting for which the above characteristics can be customized by adjusting certain protocol parameters. Changing the read and write quorums of a Weighted Voting protocol while preserving the protocol's correct behavior increases either the read availability and the write operation costs or the write availability and the read operation costs but not both at the same time. We prove that for a large class of replica control protocols, a certain symmetry between the read and write operation availability exists. We further demonstrate how a protocol without this symmetry property can be optimized such that the resulting protocol has identical cost but a higher read or write availability or both. We present two design strategies which lead to those optimized replica control protocols. By using the well-known Grid Protocol (which lacks symmetry) as an example, we apply our findings to derive two different replica control protocols with superior characteristics</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689476.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>memory protocols</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>optimisation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>replicated databases</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software performance evaluation</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689477">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A fault-tolerant algorithm for decentralized on-line quorum adaptation</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8a70a1f53a918f316d5eb02b17f9ca03-3b0fe70e164dd883acd484e1603d498d">
        <akt:full-name>M. Bearden</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5d5ac08c93b6ddd3df7ec2258fd1e912-3b0fe70e164dd883acd484e1603d498d">
        <akt:full-name>Jr. Bianchini, R.P.</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A quorum-based distributed mutual exclusion protocol requires each processor in a distributed system to obtain permission from a quorum of processors before accessing a resource that cannot be concurrently shared. To prevent failed quorum members from blocking access to the resource, it is desirable to remove failed processors from quorums when failures are detected. This work addresses the problem of adapting quorums on-line, while a quorum-based mutual exclusion protocol continues to operate. To preserve the quorum intersection property that is required for mutual exclusion safety, it is necessary to coordinate changes made to the quorum data structures of different processors. A solution is given in the form of QADAPT, a decentralized algorithm that guarantees safe adaptation of quorums when processors fail. QADAPT enables any set of quorum adaptations that do not violate the quorum intersection property, and enables any set of faulty processors to be removed from quorums. QADAPT has optimal message passing cost and tolerates any number of processor (halting) failures. A distributed system model is assumed that provides only point-to-point messages with no message ordering. Results from an implementation show that the algorithm's execution time scales well in a system containing up to fifty networked workstations. Extensions of this work include on-line adaptation of quorums that are used to maintain replica consistency in distributed databases</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689477.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>concurrency control</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>data structures</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>distributed algorithms</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>message passing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689478">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A generalized test generation procedure for path delay faults</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5842d5907bfb5169ef884ebf560ad04e-31c48571d7e050aaa47a5be0c054d0e7">
        <akt:full-name>I. Pomeranz</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f76b811fa428e2358e9d52dd9a352ba0-3011d44766b8724fa47442cf9b9fd2f8">
        <akt:full-name>S.M. Reddy</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Recent studies suggest that it is necessary to generalize the test generation process for path delay faults in order to accommodate various effects that determine the worst-case delay of a path. However, these effects may be too complex to be captured accurately or considered explicitly, especially for large circuits. To alleviate this problem, we propose a test generation approach that generates multiple tests for each path delay fault based on a comprehensive set of conditions under which the worst-case delays are likely to occur. In this way, accurate modeling of delays is not necessary. We describe a specific test generation procedure to demonstrate this approach. The test generation procedure produces, for every target path, two-pattern tests where the first patterns bring every possible combination of values to the off-path inputs. We present experimental results to show the feasibility of a test generation procedure based on this approach</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689478.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>delays</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic design</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689479">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A comparison of simulation based and scan chain implemented fault injection</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e5c2698487188ea53d33bc2cb41bd2b9-a36ccf53e6bb71a3d66e561f9b1deb9a">
        <akt:full-name>P. Folkesson</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6d983007671373d1d4aa59bedc7a55b2-a36ccf53e6bb71a3d66e561f9b1deb9a">
        <akt:full-name>S. Svensson</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f05f830b16d1cc59d3a8ffd7ca64ee03-46dded763fdb2c5147302532c4781f35">
        <akt:full-name>J. Karlsson</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>This paper compares two fault injection techniques: scan chain implemented fault injection (SCIFI), i.e. fault injection in a physical system using built in test logic, and fault injection in a VHDL software simulation model of a system. The fault injections were used to evaluate the error detection mechanisms included in the Thor RISC microprocessor, developed by Saab Ericsson Space AB. The Thor microprocessor uses several advanced error detection mechanisms including control flow checking, stack range checking and variable constraint checking. A newly developed tool called FIMB UL (Fault Injection and Monitoring using BUilt in Logic), which uses the Test Access Port (TAP) of the Thor CPU to do fault injection, is presented. The simulations were carried out using the MEFISTO-C tool and a highly detailed VHDL model of the Thor processor. The results show that the larger fault set available in the simulations caused only minor differences in the error detection distribution compared to SCIFI and that the overall error coverage was lower using SCIFI (90-94% vs. 94-96% using simulation based fault injection)</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689479.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>built-in self test</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>digital simulation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>hardware description languages</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic CAD</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>microprocessor chips</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>reduced instruction set computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689480">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>From dependable computing systems to computing for integrated dependable systems?</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1ba9a6a86c7f7e5a7664c2695504dcef-8ef5333e4116b90b85398fc05ae4d7e1">
        <akt:full-name>K.E. Grosspietsch</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ca7911368378c97753a55618e264feec-8ef5333e4116b90b85398fc05ae4d7e1">
        <akt:full-name>J. Abraham</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b96d0e4da8967c43a227b92b12299438-8ef5333e4116b90b85398fc05ae4d7e1">
        <akt:full-name>J. Maier</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-64c1c15e4784fa3af8cdadb47c5d7ed9-8ef5333e4116b90b85398fc05ae4d7e1">
        <akt:full-name>H.-D. Kochs</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7d48505aa96ff117f6606f6a72f25786-8ef5333e4116b90b85398fc05ae4d7e1">
        <akt:full-name>M. Nicolaidis</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fdb3e19e6636793c541495f4ea060cdc-8ef5333e4116b90b85398fc05ae4d7e1">
        <akt:full-name>M. Renovell</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Today, in the direction of research we can observe a trend from the investigation and development of "pure" systems to activities usually tailored to specific applications. Concurrently, computers have penetrated daily life in a degree which had not been forecast even in optimistic estimation scenarios 20 or 30 years ago. This trend has not yet ended; actually we can expect the emergence of many new "intelligent products"; i.e. digital computing systems are more and more integrated or merged into many other systems of different physical domains and characteristics. In this paper, the impact of these general trends on the current state and future directions of fault tolerance activities is discussed</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689480.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689481">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Reliability modeling of hard real-time systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-151750ac27cb4c853048ce94158da6cb-eef8482e5a4952a06655a83bbd7691b9">
        <akt:full-name>H. Kim</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-473e933b4d618eca83078644755f7f9d-eef8482e5a4952a06655a83bbd7691b9">
        <akt:full-name>A.L. White</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6ea265a9e8426b009b111a22d5a346a2-72af3e26a814d9068e0d6db9f66c4696">
        <akt:full-name>K.G. Shin</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A hard real-time control system, such as a fly-by-wire system, fails catastrophically (e.g., lose stability) if its control input is not updated by its digital controller computer within a certain time limit called the hard deadline. To assess and validate system reliability by using a semi-Markov model that explicitly contains the deadline information, we propose a path-space approach deriving the upper and lower bounds of the probability of system failure. These bounds are derived by using only simple parameters, and they are especially suitable for highly-reliable systems which must recover quickly. Analytical bounds are derived for both exponential and Weibull failure distributions, which have proven effective through numerical examples, while considering three repair strategies: repair-as-good-as-new, repair-as-good-as-old, and repair-better-than-old</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689481.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>Markov processes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>Weibull distribution</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>computerised control</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>digital control</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>exponential distribution</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>real-time systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689482">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Modelling software operational reliability via input domain-based reliability growth model</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-549ce1aa336d8b24f4f1925d5f25c851-79b42392e64cce7f16cef069cc72f111">
        <akt:full-name>Yinong Chen</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Operational reliability of programs depends upon many factors imposed by design, testing, and operation of the programs. In the testing stage, the main imperfect factors which can affect operational reliability are faults, testing time, fault correction, testing profile and operation profile. The proposed modelling process takes these factors into account. It consists of two testing stages and one operational stage. In the testing stages, partition testing and an input domain-based reliability growth model are used to evaluate the reliability growth. Based on the profile coverage between testing and operational profiles, a method is developed to partition the input domain, so that the testing profile can follow the given operational profile of a program. In the operational stage, the proposed reliability model uses the remaining faults from testing stages as the source of unreliability. A case study is conducted using the proposed models</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689482.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>program debugging</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software reliability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689483">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Rare events in stochastic dynamical systems and failures in ultra-reliable reactive programs</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4f027d7a759620739373348d1e301493-162cfa19ff0f2d1065a3e772d40eaea8">
        <akt:full-name>A. Galves</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f9a5c9f09d915ae5b86862cb692161e8-162cfa19ff0f2d1065a3e772d40eaea8">
        <akt:full-name>M.-C. Gaudel</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Reactive programs are a class of software whose behavior is highly dependent on the environment. For such programs, the successive inputs are not independent, due to the continuity of the physical behavior of the system under control. This paper presents a model of such programs and of their failures, based on stochastic processes. Then, exploiting some results on rare events in mixing dynamical systems we state a rigorous result concerning the asymptotical distribution of the time to failure in this kind of program. This result says that this distribution can be approximated in a sharp way by an exponential distribution. Moreover, the more reliable is the program, the sharper is the approximation</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689483.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>exponential distribution</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>stochastic processes</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689484">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Software exploitation of a fault-tolerant computer with a large memory</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5058ba294b05ce5e470edc329eb68122-1de43d353c5e60ce3af4b1d63da59a49">
        <akt:full-name>F. Eskesen</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0bc06d5133809abd08563be458bc63ee-1de43d353c5e60ce3af4b1d63da59a49">
        <akt:full-name>M. Hack</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-010c9932dddd3976bbec983fe20110eb-1de43d353c5e60ce3af4b1d63da59a49">
        <akt:full-name>A. Iyengar</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-90da2257dbe8f484bd5271cf21429f31-1de43d353c5e60ce3af4b1d63da59a49">
        <akt:full-name>R.P. King</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-11f812eeac904a8c6ec2b8b6e9d8a6c2-3c0582e4a83633546dcb2eb198851aa9">
        <akt:full-name>N. Halim</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The DM/6000 hardware (a prototype, fault-tolerant RS/6000 built at the T.J. Watson Research Center) provides fault tolerance and a large, nonvolatile main memory. Running a commercial, general-purpose operating system on it, of itself, does nothing to increase software availability. In fact, the time to rebuild the contents of a large memory may decrease availability. We describe our techniques for hiding most of the main memory, which requires the operating system to access it only by way of services separate from the operating system. This can allow the memory and those access services to achieve much higher availability, which, in turn, increases the availability of the system as a whole. We also performed simulation studies to determine those conditions where this system organization can lead to improved performance for recoverable database applications</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689484.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>cache storage</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multiprocessing systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>operating systems (computers)</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software performance evaluation</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689485">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Improving software robustness with dependability cases</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-efea3d81f57752780c9514402e5ef97b-5d1f6c75fdb7c221fee93589407fee85">
        <akt:full-name>R.A. Maxion</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3f26266e7091f1d52ca3ce2220e8d20b-dc539d13fb50482bcb68032dabaa5276">
        <akt:full-name>R.T. Olszewski</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Programs fail mainly for two reasons: logic errors in the code, and exception failures. Exception failures can account for up to 2/3 of system crashes, hence are worthy of serious attention. Traditional approaches to reducing exception failures, such as code reviews, wallthroughs and formal testing, while very useful, are limited in their ability to address a core problem: the programmer's inadequate coverage of exceptional conditions. The problem of coverage might be rooted in cognitive factors that impede the mental generation (or recollection) of exception cases that would pertain in a particular situation, resulting in insufficient software robustness. This paper describes a study to test the hypothesis that robustness for exception failures can be improved through the use of dependability cases. Dependability cases, derived from safety cases, comprise a methodology based on structured taxonomies and memory aids for helping software designer think about and improve exception-handling coverage. A controlled experiment conducted with 59 subjects revealed a statistically significant 43% increase in exception-handling robustness. An ancillary experiment conducted with 38 subjects provides convergent evidence that the effect is authentic, and not due to programming expertise alone</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689485.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>exception handling</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software engineering</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689486">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>How safe is probabilistic checkpointing?</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-677077c9f56cc7b09c650f7e6f698ac8-fda7740f53530a8a23584791c2815cea">
        <akt:full-name>E.N. Elnozahy</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Probabilistic checkpointing has been introduced recently as a technique for implementing incremental checkpointing. Supposedly, this new technique is better than traditional ones because it is portable, more efficient, and has lower storage requirements. On the downside, the technique may produce erroneous checkpoints due to a problem called aliasing. However, a probabilistic analysis has shown that the likelihood of aliasing in practice is negligible. This paper presents an empirical study showing that aliasing occurs more frequently than the probabilistic analysis has estimated. The results refute the previous claims about probabilistic checkpointing and establish that it is unsafe in practice</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689486.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>probability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689487">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Avoiding checkpoint contamination in parallel systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-021b7001866a36634da663921e713f4d-3876c87003be3e70e9d9dcb979c85309">
        <akt:full-name>L.M. Silva</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d755502a9e2fff3e24f2e43744bbbca1-3876c87003be3e70e9d9dcb979c85309">
        <akt:full-name>J.G. Silva</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Checkpointing and rollback recovery is a very effective technique to tolerate faults, provided the application is able to recover from a previous checkpoint and proceed with a failure-free computation. However, this technique may fall short if the checkpoint files are somehow contaminated by errors. This paper presents two mechanisms that may be used to determine if a committed checkpoint is error-free or not. These techniques can be used simultaneously for error detection and failure recovery. Both of them are based on checkpoint duplication: one makes use of spatial redundancy while the other is based on temporal redundancy. We discuss the main problems and trade-offs that have to be dealt with to implement these techniques. We then present a performance study that clearly shows the pros and cons of each one. As far as we know, this paper presents the first implementation of these mechanisms in a standard parallel computing system</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689487.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>redundancy</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689488">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A survivable avionics system for space applications</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ac5396a89197cb811e3c36d5e78d24b1-a095432ca6c68bd01b7483d8516262ec">
        <akt:full-name>G. Urban</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-64c4aa9a6e027c9450d46eddf3c93d2e-a095432ca6c68bd01b7483d8516262ec">
        <akt:full-name>H.-J. Kolinowitz</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-30042ce123286b8b494b4d4e53a4beab-a095432ca6c68bd01b7483d8516262ec">
        <akt:full-name>J. Peleska</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>This paper describes an advanced survivable avionics system for future manned or unmanned space missions. The basic element of such an avionics system is a Byzantine fault tolerant computer (FTC), which has already been developed at DASA-RI for operation in the Russian segment of the International Space Station Alpha (ISSA). The paper outlines the essential design elements of the FTC, especially the efficient realisation of the Byzantine protocol within the constraints of technical risk and cost. We describe a quadruplex redundant MIL 1553 bus system with a synchronised packet protocol as communication medium between the FTC and the peripheral sensors and actuators. To illustrate the generic approach applied in the FTC design this paper also describes a fault tolerant Propulsion Drive Electronic (PDE) as a redundant actuator subsystem. The PDE will be equipped with basic communication and control elements re-using the FTC design</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689488.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>aerospace computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>safety-critical software</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>space vehicles</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>special purpose computers</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>transport protocols</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689489">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Validation of the fault/error handling mechanisms of the Teraflops supercomputer</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fbcdb521ea32a7180b8b7038c450bc37-a0c6c5a60fd20e12bcfe56272c54185a">
        <akt:full-name>C. Constantinescu</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The Teraflops system, the world's most powerful supercomputer, was developed by Intel Corporation for the US Department of Energy (DOE) as part of the Accelerated Strategic Computing Initiative (ASCI). The machine contains more than 9000 Intel Pentium (R) Pro processors and performs over one trillion floating point operations per second. Complex hardware and software mechanisms were devised for complying with DOE's reliability requirements. This paper gives a brief description of the Teraflops system architecture and presents the validation of the fault/error handling mechanisms. The validation process was based on an enhanced version of the physical fault injection at the IC pin level. An original approach was developed for assessing signal sensitivity to transient faults and the effectiveness of the fault tolerance mechanisms. Several malfunctions were unveiled by the fault injection experiments. After corrective actions had been undertaken, the supercomputer performed according to the specification</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689489.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel architectures</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel machines</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689490">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>On the use of formal techniques for validation</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-951d4efcc04abb755c532e20bfa768a9-5fd2e45d5711ce0b63fd69449d69d0ac">
        <akt:full-name>N. Suri</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d3beff48ae691091c0b0761e234071b8-55e3aaa924f6def0bf31e241c8d4cf3b">
        <akt:full-name>P. Sinha</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The traditional use of formal methods has been for the verification of algorithms or protocols. Given the high cost and limitations in state space coverage provided by conventional validation techniques, we introduce a novel approach to utilize formal verification procedures to drive fault injection based validation of dependable protocols. The paper develops graph structures for representation of information generated through formal processes, as well as a formal framework that facilitates the formulation of specific fault injection experiments for validation</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689490.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>formal verification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>transport protocols</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689491">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Time-triggered architecture for safety-related distributed real-time systems in transportation systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-17c489dd42c0ea1427f9c9dd4f089082-47750605277e0c22af969e95eebb8824">
        <akt:full-name>G. Heiner</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-dd6a1eff38f072cbe0e8700b847bf4e1-47750605277e0c22af969e95eebb8824">
        <akt:full-name>T. Thurner</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>This paper presents a novel computer architecture for fault-tolerant distributed embedded real-time systems, the Time-Triggered Architecture, which is currently implemented and demonstrated in two European projects: `Safety-Related Fault-Tolerant Systems in Vehicles (X-By-Wire)' and `Time-Triggered Architecture (ITA): Major European manufacturers in the automotive, aerospace and railway industries, suppliers, and universities are participating in these projects, both of which will be completed at the end of 1998. The objective of the projects is to achieve a framework for the introduction of ultra-dependable electronic systems in vehicles which do not rely on conventional physical backups. A common recommendation on the basic electronic and software architecture is elaborated, and key components are implemented as prototypes, particularly a VLSI-implemented communication controller utilising a time-triggered protocol. The project results will be evaluated for typical industrial applications from the participating sectors</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689491.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689492">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault-tolerance of spaceborne semiconductor mass memories</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-be9e212427ee94987c428b8c75337ace-9224f093a267acded7f19788cc427656">
        <akt:full-name>T. Fichna</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-496379d9fe90b1fa6c4dad8a54c89d54-9224f093a267acded7f19788cc427656">
        <akt:full-name>M. Gartner</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-24b7728b970faeadfeeff7ae38bed879-9224f093a267acded7f19788cc427656">
        <akt:full-name>F. Gliem</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5a46dc99f9e61748d198c04cb59bece2-9224f093a267acded7f19788cc427656">
        <akt:full-name>F. Rombeck</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The architecture of spaceborne Semiconductor Mass Memories is mainly determined by the requirements on reliability and data integrity. The highly granular structure of the memory kernel supports the implementation of hierarchical redundancy structures. Error correcting codes are in use to cope with particle induced bit errors. For protection of 4-bit wide devices an extended Reed-Solomon (78,64) SSC DSD code is appropriate and well suited to a low expenditure H/W implementation of coding and checking</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689492.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>Reed-Solomon codes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>aerospace computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error correction codes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>memory architecture</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>redundancy</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>semiconductor storage</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>space vehicle electronics</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689493">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault-tolerant computer for the Automated Transfer Vehicle</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d4329d21f151b8bbe6d55a8b3eb15316-993338d3c8c59a4e060c174336ae2f11">
        <akt:full-name>R. Roques</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-af8879ef04ae1fba8f8b4f35ee069b02-993338d3c8c59a4e060c174336ae2f11">
        <akt:full-name>A. Correge</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3c7c124b14c75f283a4f7a4c9d55c7fa-993338d3c8c59a4e060c174336ae2f11">
        <akt:full-name>C. Boleat</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Matra Marconi Space is developing their fourth generation fault-tolerant majority voting computers for use on future spacecraft such as the European Automated Transfer Vehicle, a servicing vehicle for the International Space Station. This paper presents how the computer participates in the spacecraft safety concept with emphasis on the critical on-orbit rendezvous phase. The functional architecture of the computer pool is described addressing fault containment layers, inter-channel synchronisation, communication, failed channel detection and passivation. Lastly, the hardware and software design of the test bench, built up to validate this new computer pool, is presented together with some performance measurements</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689493.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>aerospace computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>aerospace control</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>computer architecture</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>safety-critical software</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>space vehicles</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689494">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The design and architecture of the Microsoft Cluster Service-a practical approach to high-availability and scalability</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d37b035b8d6972a173aed48d2a690446-f844ddb802bc656b0cd911d82b9715c6">
        <akt:full-name>W. Vogels</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e2e15f636b139348098464e7162ca2f5-f844ddb802bc656b0cd911d82b9715c6">
        <akt:full-name>D. Dumitriu</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e05c58019dd1492deead7e9a384f0c16-36f215a5169afaafb156b9f4a8c16230">
        <akt:full-name>K. Birman</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f2ddeff78f9538868beeb5b686d79480-f844ddb802bc656b0cd911d82b9715c6">
        <akt:full-name>R. Gamache</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4bd93bc74e5ef13c2e12e24f4db6b185-f844ddb802bc656b0cd911d82b9715c6">
        <akt:full-name>M. Massa</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1fc4a1cc947a3c6e6a178bfd0da04cd2-f844ddb802bc656b0cd911d82b9715c6">
        <akt:full-name>R. Short</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-60ff9bd5b6d5372bd0b5f92974c0a378-f844ddb802bc656b0cd911d82b9715c6">
        <akt:full-name>J. Vert</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4a66c51fae8d1836d30d42e1fd2f618b-f844ddb802bc656b0cd911d82b9715c6">
        <akt:full-name>J. Barrera</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b646209d2fac782e08e29c9213708db8-f844ddb802bc656b0cd911d82b9715c6">
        <akt:full-name>J. Gray</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Microsoft Cluster Service (MSCS) extends the Windows NT operating system to support high-availability services. The goal is to offer an execution environment where off-the-shelf server applications can continue to operate, even in the presence of node failures. Later versions of MSCS will provide scalability via a node and application management system which allows applications to scale to hundreds of nodes. In this paper we provide a detailed description of the MSCS architecture and the design decisions that have driven the implementation of the service. The paper also describes how some major applications use the MSCS features, and describes features added to make it easier to implement and manage fault-tolerant applications on MSCS</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689494.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>network operating systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689495">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>G4: a fault-tolerant CMOS mainframe</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-594d143571043353ac21c37d8ff8f4d5-1d39b4ac32aa740d3581d73684e497ca">
        <akt:full-name>L. Spainhower</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-82a3b31d79efc0b76abc722da8e3fd6f-1d39b4ac32aa740d3581d73684e497ca">
        <akt:full-name>T.A. Gregg</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>G4 is IBM's fourth generation CMOS microprocessor-based S/390 mainframe but the first to achieve fault tolerant equivalence-or superiority-with its predecessor ECL mainframes. CMOS technology provides much greater density and integration, assuring superior fault avoidance characteristics. The reduced power of CMOS makes bulk power redundancy and battery backup practical. However, the high density and circuit properties of CMOS pose new challenges for detection, recovery, and online repair. G4 implements an innovative design for a high performance, fault tolerant, single-chip microprocessor. Microprocessor sparing is used as a concurrent repair mechanism. Increased memory density requires new (76,64) S4EC/DED Error Correction Codes so that all single chip failures are correctable. As many as four I/O interfaces are packaged on an individual card, requiring both configuration management and automated maintenance procedures to assure all devices maintain connectivity during online repair</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689495.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>CMOS integrated circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>IBM computers</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>computer maintenance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>configuration management</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error correction codes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>mainframes</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689496">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>NCAPS: application high availability in Unix computer clusters</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6da541c0ce61cb5dba8b935524e19329-56687a063e51f6103e88f4082b9e8273">
        <akt:full-name>L.A. Laranjeira</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The paper presents a solution for improving the availability of applications running on a Unix computer cluster with two or more nodes. Tandem's NCAPS (NonStop Clusters Application Protection System) consists of specialized system software that is capable of recovering applications after hardware, software or operating system failures. The main component of NCAPS, the PPM (Process Pairs Manager), uses a primary and warm backup approach to achieve recovery times in the range of 10 seconds (for nodes having access to all needed resources) regardless of the application initialization time. This is a clear improvement over recovery times provided by existing high availability (HA) solutions, which are typically in the order of 1 minute plus the application reinitialization time. The PPM manages an application through a configurable user-specified state model in which state changes are triggered by detected failures or system administrator commands. Upon a state transition the PPM sends a state change command message to registered application processes. Communication between the application processes and the PPM is achieved through a set of API (application programming interface) calls provided by the OftLib (Open Fault Tolerance Library), also called FT-API. NCAPS is now available on Unix clusters composed of Tandem S4000 machines. A version to run on Tandem SSI (Single System Image) product NSC (NonStop Clusters) for a cluster of Compaq Proliant machines is under development</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689496.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>Unix</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>application program interfaces</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689497">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Stable memory in substation automation: a case study</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0c55e10e9c1a4d71fe812a625c766e24-d6c58e0232dc9b240e1a12ba4cdab7ed">
        <akt:full-name>G. Deconinck</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-eae29e3332d42782f5ccccce1aaf542f-6cdbf1396e2ad6f39ab0c34c11c11e8c">
        <akt:full-name>O. Bott</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2d36c1ad83e7e8894f08997d95d87e4d-6cdbf1396e2ad6f39ab0c34c11c11e8c">
        <akt:full-name>F. Cassinari</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7bcb75b1588c4c5c6ca14801ee1ad7a5-d6c58e0232dc9b240e1a12ba4cdab7ed">
        <akt:full-name>V. De Florio</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-794b41ca5e8a2b3e26dd8acf6d2da1e0-6cdbf1396e2ad6f39ab0c34c11c11e8c">
        <akt:full-name>R. Lauwereins</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>In high voltage substations, electromagnetic interference results in transient faults. Typically, hardware stable storage devices are used to stabilise data, to store status information of the controller and to protect the application against these faults. A case study of electric substation automation introduced a controller distributed on a parallel architecture and substituted the stable storage device by a fault-tolerant software implementation of stable memory. This allows the application to stabilise data to ensure its integrity. Based on the combination of temporal and spatial redundancy, it tolerates permanent faults in memory and transient faults affecting computation, input and memory devices. Transient faults lead to extra cycles before data is stabilised; permanent faults can be masked or lead to reconfiguration. The flexibility of the software architecture allows to fine-tune parameters according to application's needs. This enhances reusability in wide automation areas. Evaluation confirms the suitability of the software solution during typical disturbances</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689497.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>data integrity</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>digital storage</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>electromagnetic interference</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel architectures</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>power engineering computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>redundancy</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>substations</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>transients</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689498">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Verification of a safety-critical railway interlocking system with real-time constraints</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a8a73118b5dfcb4d9929f87cf8e0f510-fd895407fdffb97238d6e34e6d77eef6">
        <akt:full-name>V. Hartonas-Garmhausen</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ebfdf99170da9e594b9ca967302ba0e7-fd895407fdffb97238d6e34e6d77eef6">
        <akt:full-name>S. Campos</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d16b554cfd7a0ed056ecb539f163bda0-fd895407fdffb97238d6e34e6d77eef6">
        <akt:full-name>A. Cimatti</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2d42a79edc6f40dc2922c42467199cfa-fd895407fdffb97238d6e34e6d77eef6">
        <akt:full-name>E. Clarke</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b26af8f694f22a853682ab4978103e58-fd895407fdffb97238d6e34e6d77eef6">
        <akt:full-name>F. Giunchiglia</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Ensuring the correctness of computer systems used in life-critical applications is very difficult. The most commonly used verification methods, simulation and testing, are not exhaustive and can miss errors. The work describes an alternative verification technique based on symbolic model checking that can automatically and exhaustively search the state space of the system and verify if properties are satisfied or not. The method also provides useful quantitative timing information about the behavior of the system. The authors have applied this technique using the Verus tool to a complex safety-critical system designed to control medium and large-size railway stations. They have identified some anomalous behavior in the model with serious potential consequences in the actual implementation. The fact that errors can be identified before a safety-critical system is deployed in the field not only eliminates sources of very serious problems, but also makes it significantly less expensive to debug the system</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689498.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>formal verification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>program debugging</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>rail traffic</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>railways</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>real-time systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>safety-critical software</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>state-space methods</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>traffic control</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>traffic engineering computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00689499">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
        <support:year-of>1998</support:year-of>
        <support:has-pretty-name>1998</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Dependability assessment of a computerized nuclear protection system</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-23a0f7e39b584de0b824f59d1e102fa7-c22f000347e720fa0fef798e2bd3152d">
        <akt:full-name>G. Allain-Morin</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b672fe3ce0d122a63001e5f9d7350a0a-c22f000347e720fa0fef798e2bd3152d">
        <akt:full-name>O. Pourret</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The paper discusses the assessment of a typical quadruple modular redundant nuclear protection system, DIPS. This assessment proved difficult for several reasons, including: complex fault-tolerant architecture, multistate components, large number of components, and because some approximations were necessary to compute DIPS unavailability with a method using standard dependability tools. The authors present the results of the study in terms of the average DIPS down time over a one-year period</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-15114" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1998</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=15114</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1998'>
            <support:year-of>1998</support:year-of>
            <support:has-pretty-name>1998</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/5640/15114/00689499.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fission reactor safety</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>nuclear engineering computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>nuclear power</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>power engineering computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>power plants</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>protection</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>safety-critical software</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781028">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Algorithm based fault tolerance versus result-checking for matrix computations</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7a11e128bf80847055bafe30cbc5d180-ec0621090a99a633766febdb68b0ad8c">
        <akt:full-name>P. Prata</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d755502a9e2fff3e24f2e43744bbbca1-ec0621090a99a633766febdb68b0ad8c">
        <akt:full-name>J.G. Silva</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Algorithm Based Fault Tolerance (ABFT) is the collective name of a set of techniques used to determine the correctness of some mathematical calculations. A less well known alternative is called Result Checking (RC) where, contrary to ABFT, results are checked without knowledge of the particular algorithm used to calculate them. In this paper a comparison is made between the two using some practical implementations of matrix computations. The criteria are performance and memory overhead: ease of use and error coverage. For the latter extensive error injection experiments were made. To the best of our knowledge, this is the first time that RC is validated by fault injection. We conclude that Result Checking has the important advantage of being independent of the underlying algorithm. It also has generally less performance overhead than ABFT, the two techniques being essentially equivalent in terms of error coverage</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781028.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>error detection</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>matrix algebra</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781029">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>An algorithm based error detection scheme for the multigrid algorithm</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-69c7eabde783a9306a278692a529dec0-f640b52e42c17e46e207dbbd7b196a21">
        <akt:full-name>A. Mishra</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-37fa5881bead9f26c4f49dd416f07d79-f364c4a7a3de3591e08829489d8f5e77">
        <akt:full-name>P. Banerjee</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>In this paper an Algorithm Based Error Detection (ABED) scheme is applied to the multigrid algorithm which provides an iterative solution to a system of linear algebraic equations resulting from a finite difference discretization of a Poisson equation. Invariants are created to implement checking in the relaxation, restriction and interpolation operators. Modifications to invariants due to roundoff errors accumulated within the operators which often lead to a situation known as false alarms have been addressed by deriving the expressions for the roundoff errors in the algebraic processes in the operators and correcting the invariants accordingly. ABED encoded multigrid algorithm is shown to be insensitive to the size and the range of the input data, besides providing excellent error coverage at a low latency for floating point integer and memory errors</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781029.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>Poisson equation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error analysis</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error detection</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>finite difference methods</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>interpolation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>roundoff errors</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781030">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>MetaKernels and fault containment wrappers</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-83c874a991bf2336b8bca30de251ca25-17e271676741193a5d91d9a7e058af96">
        <akt:full-name>F. Salles</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7bd76d7d8e1039aca5d966b3cbf4726c-d4e58035a15283a956f7801f2b782aa3">
        <akt:full-name>M. Rodriguez</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-810420fb0ababc6375871d5685271ef8-98e4b322e908a89118c8c6ceea906ce5">
        <akt:full-name>J.-C. Fabre</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fc69f9dc4d1600f0764ff4e7f8f0bdb1-d4e58035a15283a956f7801f2b782aa3">
        <akt:full-name>J. Arlat</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>This paper addresses the problem of using COTS microkernels in dependable systems. Because they are not developed with this aim, their behavior in the presence of faults is a main concern to system designers. We propose a novel approach to contain the effect of both external and internal faults that may affect their behavior. As microkernels can be decomposed into simple components, modeling of their expected behavior in the absence of faults is most often possible, which allows for the easy definition of dynamic predicates. For an efficient implementation of fault containment wrappers checking for these predicates, we introduce the notion of MetaKernel to reify the information required for implementing the predicates and to reflect appropriate actions. This approach is exemplified on a case study using an open version of the Chorus microkernel. MAFALDA, a software-implemented fault injection tool, is used to illustrate the benefits procured by the proposed wrappers</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781030.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>operating system kernels</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781031">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Comparing the robustness of POSIX operating systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ee984bc2e93f468da70bd9f92ef9fa69-b9a26b8c724e33c1b66d64c394533930">
        <akt:full-name>P. Koopman</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e1fedb3fcbc2cb719ce9acfc28cbaaf6-8ab4e6d79dc04a78460755560b1fab55">
        <akt:full-name>J. DeVale</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Critical system designers are turning to off-the-shelf operating system (OS) software to reduce costs and time-to-marker. Unfortunately general-purpose OSes do not always respond to exceptional conditions robustly, either accepting exceptional values without complaint, or suffering abnormal task termination. Even though direct measurement is impractical, this paper uses a multiversion comparison technique to reveal a 6% to 19% normalized rate at which exceptional parameter values cause no error report in commercial POSIX OS implementations. Additionally, 168 functions across 13 OSes are compared to reveal common mode robustness failures. While the best single OS has a 12.6% robustness failure rare for system calls, 3.8% of failures are common across all 13 OSes examined. However, combining C library calls with system calls increases these rates to 29.5% for the best single OS and 17.0% for common mode failures. These results suggest that OS implementations are not completely diverse, and that C library junctions are both less diverse and less robust than system calls</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781031.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>Unix</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781032">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Multiprocessor architecture using an audit trail for fault tolerance</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-eff02fe9cfaf8bb99392106d1998897a-9530630498d118a1d418c944026203b3">
        <akt:full-name>D. Sunada</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5432268f107480807b272d7c2e28a5ce-9530630498d118a1d418c944026203b3">
        <akt:full-name>D. Glasco</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fa97363c47e5e8a1fda26f1fdf836a0b-9530630498d118a1d418c944026203b3">
        <akt:full-name>M. Flynn</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>In order to deploy a tightly-coupled multiprocessor (TCMP) in the commercial world, the TCMP must be fault tolerant. Researchers have designed various checkpointing algorithms to implement fault tolerance in a TCMP. To date, these algorithms fall into 2 principal classes, where processors can be checkpoint dependent on each other. We introduce a new apparatus and algorithm that represents a 3rd class of checkpointing scheme. Our algorithm is distributed recoverable shared memory with logs (DRSM-L) and is the first of its kind for TCMPs. DRSM-L has the desirable property that a processor can establish a checkpoint or roll back to the last checkpoint in a manner that is independent of any other processor. In this paper, we describe DRSM-L and present results indicating its performance</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781032.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed shared memory systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781033">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Egida: an extensible toolkit for low-overhead fault-tolerance</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-74a8622b3adbcb10fbc2d0c925e39fbc-7aa26f180da1dc8578ba07d74aaeb5f9">
        <akt:full-name>S. Rao</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2fbc9b6502f1d9a66cdcda761fcc4799-ea93cd066f28f30ea1b729a64b1e243e">
        <akt:full-name>L. Alvisi</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5f2efb85a552d0973e94260603330ecd-7aa26f180da1dc8578ba07d74aaeb5f9">
        <akt:full-name>H.M. Vin</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We discuss the design and implementation of Egida, an object-oriented toolkit designed to support transparent rollback-recovery. Egida exports a simple specification language that can be used to express arbitrary rollback recovery protocols. From this specification, Egida automatically synthesizes an implementation of the specified protocol by gluing together the appropriate objects from an available library of "building blocks". Egida is extensible and facilitates rapid implementation of rollback recovery protocols with minimal programming effort. We have integrated Egida with the MPICH implementation of the MPI standard. Existing MPI applications can rake advantage of Egida without any modifications: fault-tolerance is achieved transparently-all that is needed is a simple re-link of the MPI application with Egida</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781033.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>object-oriented programming</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software tools</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781034">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Incremental messages: micro-kernel services for flexible and efficient management of replicated data</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d951838714185903bfd311ec4356e19e-409a1d0fe680a7d3f90e50dc247f0fbf">
        <akt:full-name>C. Perez</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b93f223aeccc0f3984d8c52934336d51-409a1d0fe680a7d3f90e50dc247f0fbf">
        <akt:full-name>G. Fabregat</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9b9be9411ad10b13edcbb0395c5e3421-409a1d0fe680a7d3f90e50dc247f0fbf">
        <akt:full-name>R.J. Martinez</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6e46cca15e0083fe2240a2fdf4bbd475-409a1d0fe680a7d3f90e50dc247f0fbf">
        <akt:full-name>G. Martin</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Incremental messages have been designed to efficiently and flexibly manage replicated copies of critical data. We describe this new type of messages and show how applications benefit from an extended message passing interface which provides support for creating updating and recovering data copies, combining the advantages of both kernel and user-level approaches. The paper describes the interface offered to applications, its functionality and how it can be used to implement traditional fault-tolerance mechanisms such as passive replicas, checkpoints and recovery. A fault-tolerant transactional service that exploits the advantages of incremental messages is also presented. Furthermore, the paper presents details about the implementation of incremental messages in VSTa, a micro-kernel based operating system, and the first experimental results obtained</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781034.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>message passing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>operating system kernels</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>replicated databases</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781035">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Rigorous development of a safety-critical system based on coordinated atomic actions</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f93d29c33f72ca9a326b2eb67fad2be1-fb80c32c056ff62dfc9677b5f30572db">
        <akt:full-name>J. Xu</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-21757c2767705194600b55ff6b0ef692-8e31fda3b228612b025d4309d150465d">
        <akt:full-name>B. Randell</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-15e84d9d1caf739c6a9417b25895e288-8e31fda3b228612b025d4309d150465d">
        <akt:full-name>R.J. Romanovsky</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-43d3f80b63f09611689ba8a37d4b1c63-1e427d6bbb6d2bb2aa5434059d6c58f4">
        <akt:full-name>R.J. Stroud</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8f56679d988ed3665e26718f9446ecf8-8e31fda3b228612b025d4309d150465d">
        <akt:full-name>A.F. Zorzo</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0dc2fbde3ccdcb19fef2ced890101226-8e31fda3b228612b025d4309d150465d">
        <akt:full-name>E. Canver</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-3c7770bccd713fc6678e1deae8827e23-8e31fda3b228612b025d4309d150465d">
        <akt:full-name>F. von Henke</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>This paper describes our experience using coordinated atomic (CA) actions as a system structuring tool to design and validate a sophisticated control system for a complex industrial application that has high reliability and safety requirements. Our study is based on the "Fault-Tolerant Production Cell", which represents a manufacturing process involving redundant mechanical devices (provided in order to enable continued production in the presence of machine faults). The challenge posed by the model specification is to design a control system that maintains specified safety and liveness properties even in the presence of a large number and variety of device and sensor failures. We discuss in this paper: i) a design for a control program that uses CA actions to deal with both safety-related and fault tolerance concerns, and ii) the formal verification of this design based on the use of model-checking. We found that CA action structuring facilitated both the design and verification tasks by enabling the various safety problems (e.g. clashes of moving machinery) to be treated independently. The formal verification activity was performed in parallel with the design activity the interaction between them resulted in a combined exercise in "design for validation"</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781035.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>concurrency control</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>formal verification</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>safety-critical software</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781036">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The systematic improvement of fault tolerance in the Rio file cache</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5b73c0116812b42b949801cecf6b9492-c3bd7063924e70a3b163124a58b7368c">
        <akt:full-name>Wee Teck Ng</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9ba7a0566bf610e012446bce6b2efbb8-c3bd7063924e70a3b163124a58b7368c">
        <akt:full-name>P.M. Chen</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Fault injection is typically used to characterize failures and to validate and compare fault-tolerant mechanisms. However fault injection is rarely used for all these purposes to guide the design and implementation of a fault tolerant system. We present a systematic and quantitative approach for using software-implemented fault injection to guide the design and implementation of a fault-tolerant system. Our system design goal is to build a write-back file cache on Intel PCs that is as reliable as a write-through file cache. We follow an iterative approach to improve robustness in the presence of operating system errors. In each iteration, we measure the reliability of the system, analyze the fault symptoms that lead to data con option, and apply fault-tolerant mechanisms that address the fault symptoms. Our initial system is 13 times less reliable than a write-through file cache. The result of several iterations is a design that is both more reliable (1.9% vs. 3.1% corruption rate) and 5-9 times as fast as a write-through file cache</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781036.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>cache storage</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781037">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>AR-SMT: a microarchitectural approach to fault tolerance in microprocessors</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-aed42d0860a7491b042a7a4bcc966dd1-55fcb3ffade75438607184b6dcc44eda">
        <akt:full-name>E. Rotenberg</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>This paper speculates that technology trends pose new challenges for fault tolerance in microprocessors. Specifically, severely reduced design tolerances implied by gigaherz clock rates may result in frequent and arbitrary transient faults. We suggest that existing fault-tolerant techniques-system-level, gate-level, or component-specific approaches-are either too costly for general purpose computing, overly intrusive to the design, or insufficient for covering arbitrary logic faults. An approach in which the microarchitecture itself provides fault tolerance is required. We propose a new time redundancy fault-tolerant approach in which a program is duplicated and the two redundant programs simultaneously run on the processor: The technique exploits several significant microarchitectural trends to provide broad coverage of transient faults and restricted coverage of permanent faults. These trends are simultaneous multithreading, control flow and data flow prediction, and hierarchical processors-all of which are intended for higher performance, but which can be easily leveraged for the specified fault tolerance goals. The overhead for achieving fault tolerance is low, both in terms of performance and changes to the existing microarchitecture. Detailed simulations of five of the SPEC95 benchmarks show that executing two redundant programs on the fault-tolerant microarchitecture takes only 10% to 30% longer than running a single version of the program</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781037.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer architecture</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>redundancy</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781038">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Routing and wavelength assignment for establishing dependable connections in WDM networks</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-56c5d73419b15d6c03480f4156c14ef5-ee9491629bda2306712fbca572a08fd0">
        <akt:full-name>G. Mohan</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6ce51cd5fa5d732b6e52955dfdf88dda-ee9491629bda2306712fbca572a08fd0">
        <akt:full-name>C.S.R. Murthy</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>This paper considers the problem of establishing dependable connections (D-connections) for fast failure recovery in wavelength-routed wavelength-division multiplexed (WDM) networks with dynamic traffic demand. A D-connection is realized by a primary lightpath and one or more backup lightpaths. Real time applications usually require timeliness and fault-tolerance. It is not a difficult task to guarantee timely delivery of messages in WDM networks, as a lightpath with its entire bandwidth is dedicated to an application. However providing fault-tolerance is an important issue to be solved in these networks. In this paper we focus on backup multiplexing based, primary-backup lightpath routing in WDM networks. We present different methods to assign wavelengths to backup lightpaths, for a given primary lightpath. They are broadly classified into primary dependent backup wavelength assignment (PDBWA) and primary independent backup wavelength assignment (PIBWA) schemes. The PDBWA is further classified into PDBWA-S and PDBWA-D, depending on whether the wavelength of the backup lightpath is the same as that of the primary lightpath or not. All the above methods differ in their computational complexity and performance. To improve fairness among the connections with and without fault-tolerant requirements, we propose a method called backup threshold. We conduct extensive simulation experiments to study the performance of the proposed methods</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781038.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computational complexity</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>wavelength division multiplexing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781039">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Interference robust TCP</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-19cb8dc50d508f37741f1ba150032826-292a11ea4821f8a8efec79740a6db8a3">
        <akt:full-name>B. Maruthi</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-20544f276e54d280ce59c2a92757e33d-292a11ea4821f8a8efec79740a6db8a3">
        <akt:full-name>A.K. Somani</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c3f0e2abd82d914114173cea64e3b97d-292a11ea4821f8a8efec79740a6db8a3">
        <akt:full-name>M. Azizoglu</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>With the exception of the fast retransmit and recovery algorithms, transmission control protocol (TCP) assumes congestion to be the only source of packet loss. When wireless networks experience packet loss due to interference or any other error congestion control algorithms in TCP are triggered. Unnecessary and incorrect usage of congestion control algorithms results in a high performance penalty. We analyze and present results describing the unsuitability of congestion control algorithms in TCP when packets are lost due to interference. We then present Interference Robust TCP (IR-TCP), which is a transport layer protocol that improves the transport layer performance as compared to TCP in the presence of lossy links such as those in wireless networks. IR-TCP is interference aware and uses the interference information from the link layer for its recovery procedure. IR-TCP is backward compatible and does not affect performance during normal operation or congestion, while providing significant performance improvement during interference. We present experimental implementation lR-TCP and the measurement of the performance improvement relative to TCT</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781039.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>interference (signal)</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>telecommunication congestion control</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>transport protocols</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>wireless LAN</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781040">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Effect of failures on optimal location management algorithms</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2693a5b3f7aedc640ac529a296f341f0-cef66642a0d9636d5537acef3e2b80f3">
        <akt:full-name>G. Krishnamurthi</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-20544f276e54d280ce59c2a92757e33d-292a11ea4821f8a8efec79740a6db8a3">
        <akt:full-name>A.K. Somani</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The current IS-41 standard PCS architecture uses a centralized database, the Home Location Register (HLR), to store service and location information of each mobile registered in the PCS network. However this is a single point of failure, therefore distributed database architectures have been proposed as possible architectures for future mobile networks. The performance of such architectures improves when the load on the databases is balanced. Though distributed architectures offer increased fault tolerance, they suffer from increased query delay (number of databases to be queried to retrieve the required information). The query data further increases in the presence of database failures. In this paper we derive bound for the performance of load balanced location management algorithms in the presence of database failures for three standard performance metrics, worst-case query, delay average query delay, and call blocking probability. A load balanced algorithm tolerating database failures is presented, and its performance measured using the same performance metrics. A robust parallel location management algorithm which queries databases in parallel is then presented, and we derive expressions for the average query delay for the algorithm in presence of failures</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781040.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed databases</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>parallel algorithms</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>personal communication networks</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781041">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Cots hardware and software in high-availability systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6122ee67de7692816e4883ba5ebf39cb-84f1cc83dee575c418e1fe9f9cf3c0a0">
        <akt:full-name>R.K. Iyer</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-01eb7559f37fb267f5fa24086caa7f77-84f1cc83dee575c418e1fe9f9cf3c0a0">
        <akt:full-name>A. Avizienis</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781041.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781042">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Efficient network-flow based techniques for dynamic fault reconfiguration in FPGAs</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-75698c651a052d9e7446bbac5175f569-9b101fc3613732f0a1349f56f7f2da60">
        <akt:full-name>N.R. Mahapatra</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d750dc101814879e91ac33b3842e6725-16daac8bde00f828a9030c49a04118fb">
        <akt:full-name>S. Dutt</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>In this paper we consider a "dynamic" node covering frameworks for incorporating fault tolerance in SRAM-based segmented array FPGAs with spare row(s) and/or column(s) of cells. Two types of designs are considered: one that can support only node-disjoint (and hence nonintersecting) rectilinear reconfiguration paths, and the other that can support edge-disjoint (and hence possibly intersecting) rectilinear reconfiguration paths. The advantage of this approach is that reconfiguration paths are determined dynamically depending upon the actual set of faults and track segments are used as required, thus resulting in higher reconfigurability and lower track overheads compared to previously proposed "static" approaches. We provide optimal network flow based reconfiguration algorithms for both of our designs and present and analyze a technique for speeding up these algorithms, depending upon the fault size, by as much as 20 times. Finally, we present reconfigurability results for our FPGA designs that show much better fault tolerance for them compared to previous approaches-the reconfigurability of the edge-disjoint design is 90% or better and 100% most of the time, which implies near-optimal spare-cell utilization</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781042.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>field programmable gate arrays</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic design</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781043">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Two-step algorithms for maximal diagnosis of wiring interconnects</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f47f31abc6ab08bf381bbb8fc743d349-584f39ba19e8eb43ff9771281f4592e0">
        <akt:full-name>Wenyi Feng</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-82bde0a6433a09f3bcda78916b8a289d-584f39ba19e8eb43ff9771281f4592e0">
        <akt:full-name>F.J. Meyer</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d64e84213dc1ff51bc0db52b9a828a01-584f39ba19e8eb43ff9771281f4592e0">
        <akt:full-name>F. Lombardi</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We give two algorithms for maximal diagnosis of wiring networks without repair under a general fault model. Maximal diagnosis consists of identifying all diagnosable faults under the assumptions that each net can have multiple drivers and receivers and can be affected by any number of short and open faults. This process is equivalent to verifying all connections between inputs and outputs. Matrices represent the connections in fault-free and faulty networks. All algorithms discussed are adaptive and have their tests divided into two phases. Our first algorithm exploits a unique condition for verifying the connections; our second algorithm maps the connection verification problem to a bipartite graph. All algorithms use an independent test set for the first test phase. Simulation results show that the proposed algorithms outperform previous algorithms for maximal diagnosis, in terms of the number of tests. The total time complexity for computing the test sequences and analyzing the output response is polynomial</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781043.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computational complexity</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>integrated circuit interconnections</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>polynomials</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>printed circuit manufacture</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781044">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault identification algorithmic: a new formal approach</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-341ee78f1cde7312c265c49b570ab0ad-9653e025bd0fb2b882b16adb43136a29">
        <akt:full-name>B. Ayeb</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Much research has been devoted to system-level diagnosis. Two issues have been addressed. The first of these is diagnosability. The second is the design of fault identification algorithms. This paper focuses on the second of these concerns. This paper investigates the process of fault identification itself, introduces a new formal approach, and proposes a fault identification algorithm which runs in O(n2√τ/√log n), τ&lt;n/2</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781044.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>systems analysis</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781045">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A fault tolerance framework for CORBA</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8f324d7feeed79ba443773104e7048d6-2f9e37741f1d11a557b812b0325de865">
        <akt:full-name>L.E. Moser</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-29895cc1660dbde0f5a1261cf192340b-2f9e37741f1d11a557b812b0325de865">
        <akt:full-name>P.M. Melliar-Smith</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-52f8ebb4ad779a574bfa4ce8707f0da4-45c2c50c0ca92eaee98c6e337316d1a6">
        <akt:full-name>P. Narasimhan</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We describe a fault tolerance framework for CORBA that provides fault tolerance management and core services, implemented above the ORB for ease of use and customization, and fault tolerance mechanisms, implemented beneath the ORB for transparency and efficiency. Strong replica consistency is facilitated by a multicast engine that provides reliable totally ordered delivery of multicast messages to the replicas of an object. Transparency to the application allows application programmers to focus on their applications rather than on fault tolerance, and transparency to the ORE allows existing commercial CORBA ORBs to be used without modification. The fault tolerance framework adheres to CORBA's objective of interoperability by ensuring that different implementations of the specifications of the framework can interoperate and that non-fault-tolerant objects can interwork with fault-tolerant objects</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781045.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed object management</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>open systems</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781046">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The performance of database replication with group multicast</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-85e2b5d6b67b71c50bd3b967837a1d57-203d3dad08c13722395a27e0440de292">
        <akt:full-name>J. Holliday</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1eeee5e17baa7a3771165086dc80bfb5-e06e3a273175fcc3c20f0ed7ae511a47">
        <akt:full-name>D. Agrawal</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-cd41cd757e32c5604ba1dc18cdb07e79-203d3dad08c13722395a27e0440de292">
        <akt:full-name>A. El Abbadi</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Replication with update-anywhere capability while maintaining global synchronization and isolation has long been thought impractical. Protocols have been proposed for distributed replicated databases that take advantage of atomic broadcast systems to simplify message passing and conflict resolution in hopes of making replication efficient. This paper presents performance measurements on a simulation of a replicated database using those protocols. The results show that with the proper group broadcast mechanism, replication with update-anywhere capability is indeed practical</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781046.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>message passing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>protocols</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>replicated databases</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>synchronisation</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781047">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Design, implementation and performance evaluation of a CORBA group communication service</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a3cf03c827d9b24a9b454abbf0c7564c-8a87405dfce0d1fb992a5e2136ef1133">
        <akt:full-name>S. Mishra</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a46cf0851a8cb84382adf71ca3d01ccd-607c086e5d981ae46696109ea5502cbe">
        <akt:full-name>L. Fei</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-40bfbd0fe6b35c693815f0bc7b01de30-607c086e5d981ae46696109ea5502cbe">
        <akt:full-name>Guming Xing</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>This paper describes the design, implementation, and performance evaluation of a CORBA group communication service. It also evaluates the effect of CORBA in implementing a group communication service. The main conclusion is that CORBA can be used to implement group communication services and thereby achieve interoperability in a heterogeneous computing environment. However, there is a substantial performance cost. As a result, current CORBA technology is not suitable for implementing high performance group communication services</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781047.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781048">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>An execution service for a partitionable low bandwidth network</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-392318ea219d37bd00b8197250c08e1c-1f8bbbbcbc4df2058c7c0e19853cfed6">
        <akt:full-name>T.M. Hickey</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-53843a03ca6513c7b5301e01a6132239-2c441f748a19dc625bc3c6533ee98585">
        <akt:full-name>R. van Renesse</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>As the amount of scientific data grows to the point where the Internet bandwidth no longer supports its transfer it becomes necessary to make powerful computational services available near data repositories. Such services allow remote researchers to start long-running parallel computations on the data. Current execution services do not provide remote users with adequate management facilities for this style of computing. This paper describes the PEX system. It has an architecture based on partitionable group communication. We describe how PEX maintains replicated state in the face of processor failures and network partitions, and how it allows remote clients to manipulate this state. We present some performance numbers, and close with discussing related work</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781048.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>Internet</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>computer network management</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781049">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Automatic design of optimal concurrent fault detector for linear analog systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-469780ab7c4995a0bd02be21d77ec32d-f3cae862565f1d3289beb098917f1c5f">
        <akt:full-name>E. Simeu</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-87529d0b754b581e46d70edb8c948202-f3cae862565f1d3289beb098917f1c5f">
        <akt:full-name>A.W. Peters</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-7285ed1fa53c5c1d8a95adfd8da6b18b-f3cae862565f1d3289beb098917f1c5f">
        <akt:full-name>I. Rayane</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>This paper presents a generalized strategy for optimal design of on-line integrated fault detector for linear analog systems. The method consists in processing the available node voltage signals to provide a residual signal that carries information about the faults. Contrary to previously proposed techniques dealing only with the particular case of state variable systems, the use of extra circuitry with the objective of concurrent fault detection is extended here without limitation to a larger class of linear analog systems for which the state variables do not necessary need to be available as measurable voltages. This requires the use of an extended state space model for any linear analog system. For this purpose, an algorithm providing the extended state space model from a netlist description is developed and implemented</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781049.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>analogue computers</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error detection</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781050">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Some transmission time analysis for the parallel asynchronous communication scheme</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d1e0b6d902ecb35564dd675aa2eea62a-445b080a15c85bc9684506a1e8d43d02">
        <akt:full-name>L.G. Tallini</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a0392234f049693b1fedb025d91a345a-ae627ebbf8f37687b7f75087685a7fc7">
        <akt:full-name>B. Bose</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>In asynchronous buses, the sender encodes a data word with a code word from an unordered code and transmits it on the parallel bus lines. In this paper some transmission time analysis for the above parallel asynchronous communication scheme are presented. It is proved that the average transmission time for a code word is a strictly increasing function of the weight, w, of the cone word and it approaches the worst transmission time possible when w goes to infinity. This implies that the low weight codes result in a faster implementation of the above communication scheme. This paper also analyzes the transmission time performance of the recently introduced proximity detecting codes; further, some efficient low constant weight code designs are described</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781050.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>communication complexity</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system buses</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781051">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Fault tolerance, channel coding and arithmetic source coding combined</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e9a543d4b6e6ba85e0bab025a9ad5ca1-8502dc32e94810aa6e4007f23f796406">
        <akt:full-name>G.R. Redinbo</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-0c036fde7206a2cd25cdffa6e8a07c86-98ada0844ae3bc174a9133489c1e020a">
        <akt:full-name>R. Manomohan</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A complete source and channel coding system is protected from both channel errors and errors emanating from internal hardware failures by introducing redundancy in the source encoding and decoding procedures as well as in frequently inserting parity symbols generated by a burst-detecting convolutional code. The combined protected system can detect errors in any significant subsystems whether from transmission errors or hardware faults. The arithmetic source coding procedures are augmented with a few checking operations which detect failure effects at each iteration of the algorithm. The normal input symbol sequence has a parity symbol inserted sparsely; every nth symbol is determined by a high-rate burst-detecting convolutional code. These parity values provide end to end error detection for channel and hardware-based errors. The favorable probability of detection performance is evaluated and the low overhead costs as measured by increased compression length of the modified source coding procedure are determined</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781051.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>combined source-channel coding</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error detection</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>redundancy</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781052">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>On the necessity of on-line-BIST in safety-critical applications-a case-study</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d13b6f0432f1af2d85d259e4ea1d8c24-0e5608c55701d59b772b2d3061c6f9d0">
        <akt:full-name>A. Steininger</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5b20892641a4a97977e08c3ef92d76c6-f66f2256f71ee7181cdd5e75b27acb87">
        <akt:full-name>C. Scherrer</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>This paper analyzes the effect of dormant faults on the mean time to failure (MTTF) of highly reliable systems. The analysis is performed by means of Markov models that allow quantifying the effect of dormant faults and other vital reliability parameters. It turns out that the presence of dormant faults can drastically reduce the MTTF of a system, particularly if the operating system allows a sporadic ("event-driven") change from a regular mode of operation to another mode. Virtually every practical system involves such a change, at least in case of emergency. It is demonstrated that on-line built-in self-test (BIST) is an effective means to overcome the deteriorating effect of dormant faults and re-establish a high MTTF. A very moderate test period may already be sufficient. The analysis Is performed for the example of a fail-silent communication system for safety-critical real-time applications</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781052.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>Markov processes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>built-in self test</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>computer architecture</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>real-time systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>safety-critical software</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781053">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Winckp: a transparent checkpointing and rollback recovery tool for Windows NT applications</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9204fda4a9d36c10f09bf8d27e2ee3b1-e47dd2150fc9feb5a91a4a8e9f2ed311">
        <akt:full-name>P.E. Chung</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-98bd449e33238accfcc3f431809c6e9c-e47dd2150fc9feb5a91a4a8e9f2ed311">
        <akt:full-name>Woei-Jyh Lee</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8da3e8709afd68db92d6186a1364852c-f589c8a9fd28aa1556f4bd8bdb4932cd">
        <akt:full-name>Yennun Huang</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-70eb5445b7843b2ca28d56f99605b60f-e47dd2150fc9feb5a91a4a8e9f2ed311">
        <akt:full-name>D. Liang</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-119f57f0f5363e87291a8159094d2e03-e47dd2150fc9feb5a91a4a8e9f2ed311">
        <akt:full-name>Chung-Yih Wang</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The goal of Winckp is to transparently checkpoint and recover applications on Windows NT. The definition of transparency is no modifications to applications at all, period. There is no need to get source code, or object code. It does not involve compilation, linking or generation of a different executable. We employ window message logging/replaying to recreate states that are otherwise difficult to recover by checkpointing alone. In the paper, we describe the design and implementation of Winckp, and present the challenges and limitations. The software is available for download from http://www.bell-labs.com/projects/swift</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781053.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>graphical user interfaces</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781054">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A user-level checkpointing library for POSIX threads programs</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5ca0da8394a4460b5cb362108e9f3b82-f6fa9741999414d99d72be4c486644a0">
        <akt:full-name>W.R. Dieter</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c6514d1025359fac5f0c72bd63d0d145-f6fa9741999414d99d72be4c486644a0">
        <akt:full-name>J.E. Lumpp</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Several user-level checkpointing libraries that checkpoint Unix processes have been developed. However they do not support multithreaded programs. This paper describes a user-level checkpointing library to checkpoint multithreaded programs that use the POSIX threads library provided by Solaris 2. Experiments with programs from the SPLASH-2 benchmark suite showed a 3% to 10% increase in execution time with checkpointing enabled, plus an additional overhead for saving the program's state. The checkpointing library described here is available at http://www.dcs.uky.edu/~chkpt/</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781054.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>Unix</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>multi-threading</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781055">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The DSPNexpress 2.000 performance and dependability modeling environment</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-73e8db68b3e2bf1b880ac4c97c13669e-bd21b1ab976b5a855780a891b6f4bd65">
        <akt:full-name>C. Lindemann</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6c5febed91c91e0a09cf61b72834f123-d242265906fde1f411fb1435925dcf0d">
        <akt:full-name>A. Reuys</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d25852fc890ca7806c6339a11f1c9189-d242265906fde1f411fb1435925dcf0d">
        <akt:full-name>A. Thummler</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>This paper describes the latest version of the software package DSPNexpress, a tool for modeling with deterministic and stochastic Petri nets (DSPNs). Novel innovative features of DSPNexpress 2.000 constitute an efficient numerical method for transient analysis of DSPNs with and without concurrent deterministic transitions. In particular, DSPNexpress 2.000 can perform transient analysis of DSPNs without concurrent deterministic transitions in three orders of magnitude less computational effort than the previously known method. Furthermore, DSPNexpress 2.000 contains an effective numerical method for steady-state analysis of DSPNs with concurrent deterministic transitions</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781055.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>Petri nets</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>performance evaluation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>transient analysis</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781056">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The Galileo fault tree analysis tool</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-4ee174fb679ea7962c9c78e9447c1c4c-710c54a297c2eb09c4b4143442e940a8">
        <akt:full-name>K.J. Sullivan</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-33f6471dd18607ea5120d618beef02a3-710c54a297c2eb09c4b4143442e940a8">
        <akt:full-name>J.B. Dugan</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c74b9fcb9c9f8d4a875f09c9f9e6ecf3-710c54a297c2eb09c4b4143442e940a8">
        <akt:full-name>D. Coppit</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We present Galileo, a dynamic fault tree modeling and analysis tool that combines the innovative DIF-Tree analysis methodology with a rich user interface built using package-oriented programming. DIFTree integrates binary decision diagram and Markov methods under the common notation of dynamic fault trees, allowing the user to exploit the benefits of both techniques while avoiding the need to learn additional notations and methodologies. Package-oriented programming (POP) is a software architectural style in which large-scale software packages are used as components, exploiting their rich functionality and familiarity to users. Galileo can be obtained for free under license for evaluation, and can be downloaded from the World-Wide Web</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781056.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>Markov processes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>binary decision diagrams</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault trees</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software tools</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781057">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Special seminar: intrusion detection</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b543136975ac8123e1a7c806418e0eed-3ffd11edd3f4addac9a09def95f19d29">
        <akt:full-name>M. Dacier</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-517a2c3de63eb1da8712068f70331846-3ffd11edd3f4addac9a09def95f19d29">
        <akt:full-name>S. Saydjari</akt:full-name>
      </akt:Person></akt:has-author>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781057.pdf</akt:has-web-address>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781058">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>An analysis of communication induced checkpointing</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2fbc9b6502f1d9a66cdcda761fcc4799-ea93cd066f28f30ea1b729a64b1e243e">
        <akt:full-name>L. Alvisi</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-677077c9f56cc7b09c650f7e6f698ac8-fda7740f53530a8a23584791c2815cea">
        <akt:full-name>E. Elnozahy</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-74a8622b3adbcb10fbc2d0c925e39fbc-7aa26f180da1dc8578ba07d74aaeb5f9">
        <akt:full-name>S. Rao</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2caee4ec737163d71ac730ce36c6dfdd-72cb0e369196ea37a0248cf0b6bc1671">
        <akt:full-name>S.A. Husain</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-59ecd7fc516e734ed4eda540c896c00a-72cb0e369196ea37a0248cf0b6bc1671">
        <akt:full-name>A. de Mel</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Communication induced checkpointing (CIC) allows processes in a distributed computation to take independent checkpoints and to avoid the domino effect. This paper presents an analysis of CIC protocols based on a prototype implementation and validated simulations. Our result indicate that there is sufficient evidence to suspect that much of the conventional wisdom about these protocols is questionable</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781058.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>distributed programming</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>protocols</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781059">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>The average availability of parallel checkpointing systems and its importance in selecting runtime parameters</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-628bae06a0529438cf46da51babfb1a6-10b2bde9c93b8f48d63f109b35281cb5">
        <akt:full-name>J.S. Plank</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-df86a7767c6a62bb2602222d89a1dc18-169c958a4a44c8b6c29fec36eaa2809b">
        <akt:full-name>M.G. Thomason</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Performance prediction of checkpointing systems in the presence of failures is a well-studied research area. While the literature abounds with performance models of checkpointing systems, none address the issue of selecting runtime parameters other than the optimal checkpointing interval. In particular the issue of processor allocation is typically ignored. In this paper we briefly present it performance model for long-running parallel computations that execute with checkpointing enabled. We then discuss how it is relevant to today's parallel computing environments and software, and present case studies of using the model to select runtime parameters</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781059.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>parallel programming</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software performance evaluation</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781060">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Reducing test application time for full scan embedded cores</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e3c23a967ff52aa9ba720f4215037df3-25066cfaf254c4a1a43ba267f5757d45">
        <akt:full-name>I. Hamzaoglu</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6ff95ad97726b9b35b9d314d75335ddc-372682cb0a814d448007c2a8f0d82dee">
        <akt:full-name>J.H. Patel</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We propose a new design for testability technique, Parallel Serial Full Scan (PSFS), for reducing the test application time for full scan embedded cores. Test application time reduction is achieved by dividing the scan chain into multiple partitions and shifting in the same vector to each scan chain through a single scan in input. The experimental results for the ISCAS890 circuits showed that PSFS technique significantly reduces both the test application time and the amount of test data for full scan embedded cores</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781060.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>design for testability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781061">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Synthesis of circuits derived from decision diagrams-combining small delay and testability</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-da723dbfaaec921638f55d35ababa8da-db1d71cdf76b848edf75bb4f5e4e7876">
        <akt:full-name>H. Hengster</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6bd97141e0262ba2a7c2c40d5b92d9dd-6241d66118cfb59b27a91cab0fda07d6">
        <akt:full-name>B. Becker</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>We present a synthesis for testability approach to obtain EXOR-based circuits with inherently small delay. The starting point of our approach is a functional specification given in form of a so-called Kronecker Functional Decision Diagram (KFDD). The KFDD is transformed into a circuit by using a composition method based on Boolean matrix multiplication. Efficient algorithms working on the KFDD are applied during synthesis to avoid the creation of constant lines. Thereby first stuck-at fault testability is guaranteed by construction. Moreover tests for all faults can be derived efficiently from the graph of the KFDD. Thus, it is not necessary to apply automatic test pattern generation (ATPG) to compute test sets for the synthesized circuits or to check for redundancies. Area and delay of the circuits can be further improved by merging of equivalent gates. Altogether our approach makes it possible to combine high speed with fill testability for circuits derived from KFDDs. Finally, the efficiency of the proposed methods is demonstrated by experiments</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781061.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>Boolean functions</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>automatic test pattern generation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>decision diagrams</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>delays</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>logic testing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>matrix multiplication</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781062">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Experimental study of Internet stability and backbone failures</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-302a97171200b846dbb22e0e2a53c356-8867927a85e01e85e96f8804c0aaf5f7">
        <akt:full-name>C. Labovitz</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-879cf460e9c1aeec69dbe5a62d891b67-8867927a85e01e85e96f8804c0aaf5f7">
        <akt:full-name>A. Ahuja</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-16187c3f38af1efef4f42c838da73c8e-18d353a52ee181d35195ffe205ac875e">
        <akt:full-name>F. Jahanian</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>In this paper, we describe an experimental study of Internet topological stability and the origins of failure in Internet protocol backbones. The stability of end-to-end Internet paths is dependent both on the underlying telecommunication switching system, as well as the higher level software and hardware components specific to the Internet's packet-switched forwarding and routing architecture. Although a number of earlier studies have examined failures in the public telecommunication system, little attention has been given to the characterization of Internet stability. We provide analysis of the stability of major paths between Internet Service Providers based on the experimental instrumentation of key portions of the Internet infrastructure. We describe unexpectedly high levels of path fluctuation and an aggregate low mean time between failures for individual Internet paths. We also provide a case study of the network failures observed in a large regional Internet backbone. We characterize the type, origin, frequency and duration of these failures</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781062.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>Internet</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>protocols</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>telecommunication switching</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781063">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>A Columbus' egg idea for CAN media redundancy</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9da383b3fd79aa77a7bf638b2287d6a3-e7e587d00c598354b3445abc26dda40f">
        <akt:full-name>J. Rufino</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b51d8091f5eba400faba77c8520cc157-aad1a89fe90cac126e231d8d1e8a733d">
        <akt:full-name>P. Verissimo</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-6a21f09fe460696498c02654ac9ba164-e7e587d00c598354b3445abc26dda40f">
        <akt:full-name>G. Arroz</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Network media redundancy is a clean and effective way of achieving high levels of reliability against temporary medium faults and availability in the presence of permanent faults. This is specially true of critical control applications such as those supported by the Controller Area Network (CAN). In our endeavor to provide CAN with media redundancy we ended-up devising a scheme which is extraordinarily simpler than previous approaches known for CAN or other LANs and field-buses</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781063.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>controller area networks</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>field buses</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>local area networks</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781064">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Message logging in mobile computing</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-f21d7fa7b0ea4b69c739feb02e5a5f81-ae7a5b6e3a3b0fe8ce2ad8953553b733">
        <akt:full-name>Bin Yao</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-ba2b9d1fe9dd68c2e486ab4e95dbd2a0-ae7a5b6e3a3b0fe8ce2ad8953553b733">
        <akt:full-name>Kuo-Feng Ssu</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fb38f502674924925e2c4a2e8880d1bc-978117774e048d6deaba362337d7988c">
        <akt:full-name>W.K. Fuchs</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Dependable mobile computing is enhanced by independent recovery, low power consumption and no dependence on stable storage at the mobile host. Existing recovery protocols proposed for mobile environments typically create consistent global checkpoints that do not guarantee independent recovery and low power consumption. This paper demonstrates the advantages of message logging by describing a receiver based logging protocol. Cheap pointing is utilized to limit log size and recovery latency. We compare the performance of our approach with that of existing mobile checkpointing and recovery algorithms in terms of failure free overhead and recovery time. We also describe a stable storage management scheme for mobile support stations. Garbage collection is achieved without direct participation of mobile hosts</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781064.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>mobile computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>protocols</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>storage management</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>system recovery</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781065">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Evaluating the effectiveness of fault tolerance in replicated database management systems</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d8ff1bcd7ec11cd38c8d40ab23ae75ca-24e3d8a412eace6dff55a98e563af858">
        <akt:full-name>M. Sabaratnam</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b778a84a1545c4a65e9c2fb1923a0e8e-24e3d8a412eace6dff55a98e563af858">
        <akt:full-name>O. Torbjornsen</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-b19d8151b84897dd1942890b4890a8b8-24e3d8a412eace6dff55a98e563af858">
        <akt:full-name>S.-O. Hvasshovd</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Database management systems (DBMS) achieve high availability and fault tolerance usually by replication. However fault tolerance does not come for free. Therefore, DBMSs serving critical applications with real time requirements must find a trade of between fault tolerance cost and performance. The purpose of this study is two-fold. It evaluates the effectiveness of DBMS fault tolerance in the presence of corruption in database buffer cache, which poses serious threat to the integrity requirement of the DBMSs. The first experiment of this study evaluates the effectiveness of fault tolerance, and the fault impact on database integrity, performance, and availability on a replicated DBMS, ClustRa, in the presence of software faults that corrupt the volatile data buffer cache. The second experiment identifies the weak data structure components in the data buffer cache that give fatal consequences when corrupted, and suggest the need for some forms of guarding them individually or collectively</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781065.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>buffer storage</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>data integrity</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>data structures</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>error detection</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>replicated databases</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781066">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Identification of test cases using a formal approach</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d3beff48ae691091c0b0761e234071b8-55e3aaa924f6def0bf31e241c8d4cf3b">
        <akt:full-name>P. Sinha</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-951d4efcc04abb755c532e20bfa768a9-5fd2e45d5711ce0b63fd69449d69d0ac">
        <akt:full-name>N. Suri</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>A key feature in fault injection (FI) based validation is identifying the relevant test cases to inject. This problem is exacerbated at the protocol level where the lack of detailed fault distributions limits the use of statistical approaches in deriving and estimating the number of test cases to inject. In this paper we develop and demonstrate the capabilities of a formal approach to protocol validation, where the deductive and computational analysis capabilities of formal methods are shown to be able to identify very specific test cases, and analytically identify equivalence classes of test cases</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781066.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>equivalence classes</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>protocols</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781067">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Performance and reliability evaluation of passive replication schemes in application level fault tolerance</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9aee30e5321e42d1ef1fede28fb34bd2-714e06b504314302194959edb9f6f5e9">
        <akt:full-name>S. Garg</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8da3e8709afd68db92d6186a1364852c-f589c8a9fd28aa1556f4bd8bdb4932cd">
        <akt:full-name>Y. Huang</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5652cdac0a68322d81e7bfc161a87ad5-0cb9abc36f85221ff0a1bba5c23ab752">
        <akt:full-name>C.M.R. Kintala</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2a111934fbac2ead56739753abe119c6-3d57674779de0cf4a808f7690a85ef94">
        <akt:full-name>K.S. Trivedi</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-a9906748b710e594346f49d14b1eedfe-f589c8a9fd28aa1556f4bd8bdb4932cd">
        <akt:full-name>S. Yajnik</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>Process replication is provided as the central mechanism for application level software fault tolerance in SwiFT and DOORS. These technologies, implemented as reusable software modules, support cold and warm schemes of passive replication. The choice of a scheme for a particular application is based on its availability and performance requirements. In this paper we analyze the performability of a server software which may potentially use these technologies. We derive closed form formulae for availability throughput and probability of loss of a job. Six scenarios of loss are modeled and for each, these expressions are derived. The formulae can be used either of time or online to determine the optimal replication scheme</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781067.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>replicated databases</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software reusability</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781068">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Dependability analysis of distributed computer systems with imperfect coverage</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-c14c0d1c53893de7e0763bba65d89ed2-8a94d6942f43757db3682c66b6cb7067">
        <akt:full-name>Xinyu Zang</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-84d8c0566428199b3996ecfce6513364-4c1c673f069b4f356a0f0ef6716e1013">
        <akt:full-name>Hairong Sun</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-2a111934fbac2ead56739753abe119c6-3d57674779de0cf4a808f7690a85ef94">
        <akt:full-name>K.S. Trivedi</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>In this paper a new algorithm based on Binary Decision Diagrams (BDD) for dependability analysis of distributed computer systems (DCS) with imperfect coverage is proposed. Minimum file spanning trees (MFST) are generated and stored via BDD manipulation. By using the multistate concept, our algorithm can generate BDDs that can deal with imperfect coverage and obtain reliability expressions from these BDDs. Ordering strategies for variables are discussed in this paper as well. Due to the nature of the BDD, the sum of disjoint products (SDP) can be implicitly represented which avoids huge storage and high computation complexity for large systems. Several examples are given to show the efficiency of this algorithm</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781068.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>binary decision diagrams</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>computational complexity</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>distributed processing</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781069">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Real time estimation for usage-dependent reliability on a dual-backbone network subsystem</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-181dc60b5853e7105bd6a58b4918eae3-6628cb167ca4d01ea7e9534106bc7f00">
        <akt:full-name>Meng-Lai Yin</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e301dbeca601c75c9fb05bd6a17f7d45-6628cb167ca4d01ea7e9534106bc7f00">
        <akt:full-name>L.E. James</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-fe4905480c6feead804c7fd9e60513fa-6628cb167ca4d01ea7e9534106bc7f00">
        <akt:full-name>R.R. Arellano</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-8bbc80336c5643680b580ca6f8d2ae36-6628cb167ca4d01ea7e9534106bc7f00">
        <akt:full-name>R.V. Hettwer</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>This paper presents a method to efficiently estimate the network reliability, in support of the "real time" needs of a geographically diverse set of users. The network subsystem considered here is a ring-structured, dual-backbone network. The measurement is usage-dependent in terms of location and time. For users at different locations and/or different times, different requirements are applied to the network, thus different network reliabilities are expected. Our method applies the hierarchical decomposition principle and takes advantages of the graph similarities. The real-time estimation for all locations, at one time step, takes O(nmk) time, where n is the number of site nodes that need to be connected, m is the number of backbone nodes for one backbone network and k is the number of locations considered</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781069.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>computer network reliability</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781070">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Wrapping windows NT software for robustness</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-1cbb8543cf18f513eba4e2e725a423d6-c9305f1c00551628c4ced580d3419b7f">
        <akt:full-name>A.K. Ghosh</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9c63520ef1c23934b0c1bf97c084e3bc-c9305f1c00551628c4ced580d3419b7f">
        <akt:full-name>M. Schmid</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-d8bc4bf22752735cd38760e0bc621772-c9305f1c00551628c4ced580d3419b7f">
        <akt:full-name>F. Hill</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>As Windows NT workstations become more entrenched in enterprise-critical and even mission-critical applications, the dependability of the Windows 32-bit (Win32) platform is becoming critical. To date, studies on the robustness of system software have focused on Unix-based systems. This paper describes an approach to assessing the robustness for Win32 software and providing robustness wrappers for third party commercial off-the-shelf (COTS) software. The robustness of Win32 applications to failing operating system (OS) functions is assessed by using fault injection techniques at the interface between the application and the operating system. Finally, software wrappers are developed to handle OS failures gracefully in order to mitigate catastrophic application failures</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781070.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>network operating systems</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>software fault tolerance</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781071">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Functional and faulty behavior analysis: some experiments and lessons learnt</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-367db8f7c2690a8e9353f16d3f1d813f-c4f0dd4d5b2a78694081eaed66b0dfca">
        <akt:full-name>Y. Le Guedart</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-cf2b187a98382292ddef7a776a734448-c4f0dd4d5b2a78694081eaed66b0dfca">
        <akt:full-name>L. Marneffe</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-17452fa0479545a51130c70ab7c90672-c4f0dd4d5b2a78694081eaed66b0dfca">
        <akt:full-name>F. Scheerens</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-540a4746a209f103c2eca1879b973667-c4f0dd4d5b2a78694081eaed66b0dfca">
        <akt:full-name>J.-P. Blanquart</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-5f474cb5b7d288069c93f87cfdec214e-c4f0dd4d5b2a78694081eaed66b0dfca">
        <akt:full-name>T. Boyer</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The design of dependable systems requires that the assessment of fault tolerance solutions be carried out as early as possible. This paper addresses this issue by studying a framework aimed at analyzing the behavior of these systems in the presence of faults. The proposed approach combines functional and behavioral modeling, fault injection and simulation. The paper reports on the investigation of such an approach on four practical architectures derived from real-world industrial systems. In the experiments we used two design tools, namely: Statemate(TM) and RDD-100(TM). Finally, main results and lessons learnt are discussed, and subsequent directions to further exploit these results are proposed</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781071.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>digital simulation</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>fault tolerant computing</iai:has-ieee-keyword>
  </rdf:Description>

  <rdf:Description rdf:about="http://ieee.rkbexplorer.com/id/publication-00781072">
    <akt:has-date><support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
        <support:year-of>1999</support:year-of>
        <support:has-pretty-name>1999</support:has-pretty-name>
      </support:Calendar-Date></akt:has-date>
    <akt:has-title>Programmable memory BIST and a new synthesis framework</akt:has-title>
    <rdf:type rdf:resource="&akt;Proceedings-Paper-Reference" />
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-9276d595665557bfc757e65acc0c32c7-a6359d433c5e6e7c9e8c9c22afe9ec80">
        <akt:full-name>K. Zarrineh</akt:full-name>
      </akt:Person>
    </akt:has-author>
    <akt:has-author><akt:Person rdf:about="http://ieee.rkbexplorer.com/id/person-e61fa36eac86bb5970aa5f532658077b-8d0329de768bd9a2e3757bff543d019f">
        <akt:full-name>S.J. Upadhyaya</akt:full-name>
      </akt:Person></akt:has-author>
    <extension:has-abstract>The development of two programmable memory BIST architectures is first reported. A memory synthesis framework which can automatically generate, verify and insert programmable as well as non-programmable BIST units is developed as a vehicle to efficiently integrate BIST architectures in today's memory-intensive systems. Custom memory test algorithms could be loaded in the developed programmable BIST unit and therefore any type of memory test algorithm could be realized. The flexibility and efficiency of the framework are demonstrated by showing that these memory BIST units could be generated, functionally verified and inserted in a short time</extension:has-abstract>
    <akt:paper-in-proceedings><akt:Conference-Proceedings-Reference rdf:about="http://ieee.rkbexplorer.com/id/proceedings-16917" >
        <akt:has-title>International Symposium on Fault Tolerant Computing, 1999</akt:has-title>
        <akt:has-web-address>http://ieeexplore.ieee.org/xpl/tocresult.jsp?isnumber=16917</akt:has-web-address>
        <akt:has-date>
          <support:Calendar-Date rdf:about='http://www.aktors.org/ontology/date#1999'>
            <support:year-of>1999</support:year-of>
            <support:has-pretty-name>1999</support:has-pretty-name>
          </support:Calendar-Date>
        </akt:has-date>
      </akt:Conference-Proceedings-Reference></akt:paper-in-proceedings>
    <akt:has-web-address>http://ieeexplore.ieee.org/iel5/6328/16917/00781072.pdf</akt:has-web-address>
    <iai:has-ieee-keyword>built-in self test</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>high level synthesis</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>integrated memory circuits</iai:has-ieee-keyword>
    <iai:has-ieee-keyword>memory architecture</iai:has-ieee-keyword>
  </rdf:Description>

</rdf:RDF>

<!--  Canonisation Information: Fri, 13 Apr 2012 23:26:09 +0100
460 URI(s) were substituted from file rdf/ieee-publications-ftcs.rdf to file rdf/ieee-publications-ftcs.rdf-canon
-->
